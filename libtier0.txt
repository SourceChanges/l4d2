         U abort@@GLIBC_2.0
         U access@@GLIBC_2.0
         U alarm@@GLIBC_2.0
000111e0 T ApproximateProcessMemoryUsage
0000cbf0 T AreAllAssertsDisabled
         U asctime_r@@GLIBC_2.0
0000eb00 T _AssertValidReadPtr
0000eb20 T _AssertValidReadWritePtr
0000eb30 T AssertValidStringPtr
0000eb10 T _AssertValidWritePtr
00011620 T BeginWatchdogTimer
00028c88 A __bss_start
00016290 T BuildCmdLine
00010cc0 T CatchAndWriteMiniDump
000118d0 T _CCallStackStatsGatherer_Internal_DumpStatsToFile
         U chmod@@GLIBC_2.0
         U chown@@GLIBC_2.1
         U clock_gettime@@GLIBC_2.2
         U closedir@@GLIBC_2.0
0000d600 T CommandLine_Tier0
0000f1c0 T COM_TimestampedLog
0000f0a0 T ConDMsg
0000f140 T CrackSmokingCompiler
00011c20 T CreateSimpleThread
         U ctime_r@@GLIBC_2.0
         U __ctype_tolower_loc@@GLIBC_2.3
         U __cxa_allocate_exception@@CXXABI_1.3
         U __cxa_atexit@@GLIBC_2.1.3
         U __cxa_begin_catch@@CXXABI_1.3
         U __cxa_end_catch@@CXXABI_1.3
         w __cxa_finalize@@GLIBC_2.1.3
         U __cxa_guard_abort@@CXXABI_1.3
         U __cxa_guard_acquire@@CXXABI_1.3
         U __cxa_guard_release@@CXXABI_1.3
         U __cxa_pure_virtual@@CXXABI_1.3
         U __cxa_rethrow@@CXXABI_1.3
         U __cxa_throw@@CXXABI_1.3
00011d40 T DeclareCurrentThreadIsMainThread
000119d0 T DecodeBinaryFromString
0000ed00 T DevMsg
0000eda0 T DevWarning
         U dlclose@@GLIBC_2.0
         U dlerror@@GLIBC_2.0
         U dl_iterate_phdr@@GLIBC_2.2.4
         U dlopen@@GLIBC_2.1
         U dlsym@@GLIBC_2.0
0000ccc0 T DoNewAssertDialog
00028c88 A _edata
000118e0 T EncodeBinaryToString
00033b38 A _end
000116a0 T EndWatchdogTimer
         U __errno_location@@GLIBC_2.0
0000ec70 T Error
0000ea20 T _Error_AlwaysSpewCallStack_Enable
0000ea30 T _Error_AlwaysSpewCallStack_Length
         U _exit@@GLIBC_2.0
         U exit@@GLIBC_2.0
0000ea40 T _ExitOnFatalAssert
         U fclose@@GLIBC_2.1
         U feof@@GLIBC_2.0
         U ferror@@GLIBC_2.0
         U fflush@@GLIBC_2.0
         U fgetc@@GLIBC_2.0
         U fgets@@GLIBC_2.0
0001e460 T _fini
         U fopen64@@GLIBC_2.1
         U fopen@@GLIBC_2.1
         U fprintf@@GLIBC_2.0
         U fputs@@GLIBC_2.0
         U fread@@GLIBC_2.0
         U free@@GLIBC_2.0
         U freopen@@GLIBC_2.0
         U fscanf@@GLIBC_2.0
         U fseek@@GLIBC_2.0
         U ftell@@GLIBC_2.0
         U fwrite@@GLIBC_2.0
000291c8 B g_ClockSpeed
000291b8 B g_ClockSpeedMicrosecondsMultiplier
000291b0 B g_ClockSpeedMillisecondsMultiplier
000291a8 B g_ClockSpeedSecondsMultiplier
000291c0 B g_dwClockSpeed
0000cc30 T GetAssertDialogParent
00011800 T GetCallStack
00011810 T GetCallStack_Fast
0000e1b0 T GetCPUInformation
00011110 T GetCurrentDate
00011160 T GetCurrentDayOfTheWeek
00011190 T GetCurrentDayOfTheYear
         U getenv@@GLIBC_2.0
00011870 T GetFileAndLineFromAddress
000118b0 T GetModuleNameFromAddress
         U getpid@@GLIBC_2.0
00011890 T GetSymbolNameFromAddress
00011e10 T GetThreadedLoadLibraryFunc
         U gettimeofday@@GLIBC_2.0
         w __gmon_start__
         U gmtime_r@@GLIBC_2.0
000307e0 B g_nMiniProfilerFrame
00000008 B g_nThreadID
00028b94 D g_pLastMiniProfiler
000307e4 B g_pOtherMiniProfilers
000307e8 B g_pPhysicsMiniProfilers
00028bc0 D g_pVCR
00031460 B g_Telemetry
000315e0 B g_VProfCurrentProfile
00032f9c B g_VProfSignalSpike
         U __gxx_personality_v0@@CXXABI_1.3
00009f00 T _init
000116c0 T InitPME
000117a0 T InstallProgressReportHandler
         w _Jv_RegisterClasses
         U lchown@@GLIBC_2.0
         U link@@GLIBC_2.0
         U localtime@@GLIBC_2.0
         U localtime_r@@GLIBC_2.0
00010430 T LoggingSystem_AddTagToCurrentChannel
000104d0 T LoggingSystem_FindChannel
00010500 T LoggingSystem_GetChannel
000104f0 T LoggingSystem_GetChannelCount
00010520 T LoggingSystem_HasTag
00010580 T LoggingSystem_IsChannelEnabled
00010640 T LoggingSystem_Log
00010aa0 T LoggingSystem_LogAssert
00010a60 T LoggingSystem_LogDirect
00010400 T LoggingSystem_PopLoggingState
000103d0 T LoggingSystem_PushLoggingState
000109c0 T LoggingSystem_RegisterLoggingChannel
00010390 T LoggingSystem_RegisterLoggingListener
00010370 T LoggingSystem_ResetCurrentLoggingState
000105b0 T LoggingSystem_SetChannelSpewLevel
000105e0 T LoggingSystem_SetChannelSpewLevelByName
00010610 T LoggingSystem_SetChannelSpewLevelByTag
000103b0 T LoggingSystem_SetLoggingResponsePolicy
         U __lxstat64@@GLIBC_2.2
         U __lxstat@@GLIBC_2.0
         U malloc@@GLIBC_2.0
00010b90 T MemAllocScratch
         U memcmp@@GLIBC_2.0
         U memcpy@@GLIBC_2.0
00010c40 T MemFreeScratch
         U memmove@@GLIBC_2.0
         U memset@@GLIBC_2.0
         U mkdir@@GLIBC_2.0
         U mkfifo@@GLIBC_2.0
         U mount@@GLIBC_2.0
0000eb40 T Msg
         U open64@@GLIBC_2.2
         U opendir@@GLIBC_2.0
         U open@@GLIBC_2.0
000114f0 T Plat_DebugString
00011600 T Plat_ExitProcess
000117f0 T Plat_FastVerifyHardwareKey
00011290 T Plat_FloatTime
00011280 T Plat_GetClockStart
00011540 T Plat_GetCommandLine
000115f0 T Plat_GetCommandLineA
00011b70 T Plat_GetCurrentThreadID
00011b10 T Plat_GetMemPageSize
00011b20 T Plat_GetPagedPoolInfo
000111c0 T Plat_IsInBenchmarkMode
00011400 T Plat_IsInDebugSession
00011330 T Plat_MSTime
00011b50 T Plat_RegisterThread
000111d0 T Plat_SetBenchmarkMode
00011510 T Plat_SetCommandLine
00011b40 T Plat_SetThreadName
0000f170 T Plat_SimpleLog
000117c0 T Plat_VerifyHardwareKey
000117d0 T Plat_VerifyHardwareKeyDriver
000117e0 T Plat_VerifyHardwareKeyPrompt
         U __printf_chk@@GLIBC_2.3.4
         U printf@@GLIBC_2.0
         U pthread_attr_init@@GLIBC_2.1
         U pthread_attr_setstacksize@@GLIBC_2.1
         w pthread_cancel@@GLIBC_2.0
         U pthread_cond_destroy@@GLIBC_2.3.2
         U pthread_cond_init@@GLIBC_2.3.2
         U pthread_cond_signal@@GLIBC_2.3.2
         U pthread_cond_timedwait@@GLIBC_2.3.2
         U pthread_create@@GLIBC_2.1
         U pthread_detach@@GLIBC_2.0
         U pthread_getschedparam@@GLIBC_2.0
         U pthread_join@@GLIBC_2.0
         U pthread_kill@@GLIBC_2.0
         U pthread_mutexattr_destroy@@GLIBC_2.0
         U pthread_mutexattr_init@@GLIBC_2.0
         U pthread_mutexattr_settype@@GLIBC_2.1
         U pthread_mutex_destroy@@GLIBC_2.0
         U pthread_mutex_init@@GLIBC_2.0
         U pthread_mutex_lock@@GLIBC_2.0
         U pthread_mutex_trylock@@GLIBC_2.0
         U pthread_mutex_unlock@@GLIBC_2.0
         w pthread_once@@GLIBC_2.0
         U pthread_self@@GLIBC_2.0
         U pthread_setname_np@@GLIBC_2.12
         U pthread_setschedparam@@GLIBC_2.0
         U pthread_yield@@GLIBC_2.2
00010ef0 T PublishAll
00010f30 T PublishAllMiniProfilers
         U raise@@GLIBC_2.0
         U rand@@GLIBC_2.0
         U readdir@@GLIBC_2.0
         U readlink@@GLIBC_2.0
         U realloc@@GLIBC_2.0
         U realpath@@GLIBC_2.3
         U recvfrom@@GLIBC_2.0
         U recv@@GLIBC_2.0
00011c60 T ReleaseThreadHandle
         U rename@@GLIBC_2.0
00011780 T ReportProgress
00011270 T ResetBaseTime
         U rmdir@@GLIBC_2.0
000148a0 T RunTSListTests
00014980 T RunTSQueueTests
         U scandir@@GLIBC_2.0
         U send@@GLIBC_2.0
0000cc00 T SetAllAssertsDisabled
0000cc20 T SetAssertDialogParent
00011820 T SetStackTranslationSymbolSearchPath
00011e00 T SetThreadedLoadLibraryFunc
0000cc40 T ShouldUseNewAssertDialog
000116d0 T ShutdownPME
         U __snprintf_chk@@GLIBC_2.3.4
         U snprintf@@GLIBC_2.0
         U __sprintf_chk@@GLIBC_2.3.4
         U sprintf@@GLIBC_2.0
         U srand@@GLIBC_2.0
         U sscanf@@GLIBC_2.0
00011830 T StackToolsNotify_LoadedLibrary
         U stderr@@GLIBC_2.0
         U strcasecmp@@GLIBC_2.0
         U strcasestr@@GLIBC_2.1
         U __strcat_chk@@GLIBC_2.3.4
         U strcat@@GLIBC_2.0
         U strchr@@GLIBC_2.0
         U strcmp@@GLIBC_2.0
         U strcpy@@GLIBC_2.0
         U strdup@@GLIBC_2.0
         U strlen@@GLIBC_2.0
         U strncasecmp@@GLIBC_2.0
         U strncat@@GLIBC_2.0
         U strncpy@@GLIBC_2.0
         U strpbrk@@GLIBC_2.0
         U strstr@@GLIBC_2.0
         U strtod@@GLIBC_2.0
         U strtol@@GLIBC_2.0
         U strtoll@@GLIBC_2.0
         U symlink@@GLIBC_2.0
00017f40 T TelemetrySetLevel
00017fa0 T TelemetryTick
00011c50 T ThreadDetach
00011ca0 T ThreadGetCurrentHandle
00011c90 T ThreadGetCurrentId
00011cb0 T ThreadGetPriority
00011d20 T ThreadInMainThread
00012190 T ThreadInterlockedAssignIf64
00012160 T ThreadInterlockedCompareExchange64
000121c0 T ThreadInterlockedExchange64
00012220 T ThreadInterlockedExchangeAdd64
00011d60 T ThreadJoin
00011d00 T ThreadSetAffinity
00011d90 T ThreadSetDebugName
00011cc0 T ThreadSetPriority
00011c70 T ThreadSleep
         U time@@GLIBC_2.0
         U ___tls_get_addr@@GLIBC_2.3
         U tolower@@GLIBC_2.0
00011840 T TranslateStackInfo
         U unlink@@GLIBC_2.0
         U usleep@@GLIBC_2.0
         U utime@@GLIBC_2.0
         U utimes@@GLIBC_2.0
0000f370 T VoidFnPtrLookup_Tier0
         U vsnprintf@@GLIBC_2.0
000113f0 T vtune
0000ebe0 T Warning
0000ea00 T _Warning_AlwaysSpewCallStack_Enable
0000ea10 T _Warning_AlwaysSpewCallStack_Length
00010cb0 T WriteMiniDump
         U __xmknod@@GLIBC_2.0
         U __xstat64@@GLIBC_2.2
         U __xstat@@GLIBC_2.0
0000eee0 T DevWarning(char const*, ...)
0000ef70 T ConColorMsg(Color const&, char const*, ...)
00010a00 T LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
00011bb0 T CreateSimpleThread(unsigned int (*)(void*), void*, unsigned long*, unsigned int)
0000f000 T ConMsg(char const*, ...)
0000ee40 T DevMsg(char const*, ...)
         U operator delete[](void*)@@GLIBCXX_3.4
         U operator delete(void*)@@GLIBCXX_3.4
00016a40 T CVProfNode::EnterScope()
00017730 T CVProfNode::GetSubNode(char const*, int, char const*)
000175d0 T CVProfNode::GetSubNode(char const*, int, char const*, int)
00016db0 T CVProfNode::SetCurFrameTime(unsigned long)
000315c8 B CVProfNode::s_iCurrentUniqueNodeID
00016b90 T CVProfNode::Pause()
00016c60 T CVProfNode::Reset()
00016c00 T CVProfNode::Resume()
00016ae0 T CVProfNode::ExitScope()
00016cf0 T CVProfNode::MarkFrame()
00016d70 T CVProfNode::ResetPeak()
00016a30 T CVProfNode::~CVProfNode()
00016a30 T CVProfNode::~CVProfNode()
000120b0 T CThreadEvent::Set()
00012150 T CThreadEvent::Wait(unsigned int)
00012130 T CThreadEvent::Check()
00012100 T CThreadEvent::Reset()
00012040 T CThreadEvent::CThreadEvent(bool)
00012040 T CThreadEvent::CThreadEvent(bool)
00012280 T CThreadMutex::TryLock()
000127e0 T CThreadRWLock::UnlockWrite()
00012700 T CThreadRWLock::WaitForRead()
00012750 T CThreadRWLock::LockForWrite()
00013710 T CWorkerThread::CallMaster(unsigned int, unsigned int)
00013750 T CWorkerThread::CallWorker(unsigned int, unsigned int, bool, CFunctor*)
00013790 T CWorkerThread::WaitForCall(unsigned int, unsigned int*)
000137d0 T CWorkerThread::WaitForCall(unsigned int*)
000135f0 T CWorkerThread::WaitForReply(unsigned int)
000134e0 T CWorkerThread::WaitForReply(unsigned int, unsigned int (*)(unsigned int, CThreadEvent* const*, int, unsigned int))
00013490 T CWorkerThread::BoostPriority()
00013460 T CWorkerThread::GetCallHandle()
00013620 T CWorkerThread::Call(unsigned int, unsigned int, bool, unsigned int (*)(unsigned int, CThreadEvent* const*, int, unsigned int), CFunctor*)
00013860 T CWorkerThread::Reply(unsigned int)
00013800 T CWorkerThread::PeekCall(unsigned int*, CFunctor**)
000133f0 T CWorkerThread::CWorkerThread()
000133f0 T CWorkerThread::CWorkerThread()
000138e0 W CWorkerThread::~CWorkerThread()
000138a0 W CWorkerThread::~CWorkerThread()
000138a0 W CWorkerThread::~CWorkerThread()
00012c50 T CThreadSpinRWLock::UnlockRead()
00012aa0 T CThreadSpinRWLock::LockForRead()
00012db0 T CThreadSpinRWLock::UnlockWrite()
00012860 T CThreadSpinRWLock::SpinLockForWrite(unsigned int)
00011e70 T CThreadSyncObject::AssertUseable()
00011e80 T CThreadSyncObject::Wait(unsigned int)
00011e20 T CThreadSyncObject::CThreadSyncObject()
00011e20 T CThreadSyncObject::CThreadSyncObject()
00011e30 T CThreadSyncObject::~CThreadSyncObject()
00011e30 T CThreadSyncObject::~CThreadSyncObject()
00012580 T CThread::ThreadProc(void*)
00012fa0 T CThread::GetThreadId()
00013160 T CThread::SetPriority(int)
00011ba0 T CThread::GetThreadProc()
00013210 T CThread::GetCurrentCThread()
00013260 T CThread::WaitForCreateComplete(CThreadEvent*)
00011b80 T CThread::Init()
00012f70 T CThread::Join(unsigned int)
00012fc0 T CThread::Stop(int)
00013240 T CThread::Sleep(unsigned int)
00013280 T CThread::Start(unsigned int)
00013230 T CThread::Yield()
00011b90 T CThread::OnExit()
000131b0 T CThread::Resume()
00012e80 T CThread::GetName()
00012f60 T CThread::IsAlive()
00012f00 T CThread::SetName(char const*)
00013180 T CThread::Suspend()
00012fb0 T CThread::GetResult()
000131e0 T CThread::Terminate(int)
00012df0 T CThread::CThread()
00012df0 T CThread::CThread()
00013110 T CThread::~CThread()
00013070 T CThread::~CThread()
00013070 T CThread::~CThread()
000171d0 T CVProfile::FreeNodes_R(CVProfNode*)
00018ce0 T CVProfile::OutputReport(int, char const*, int)
00017dc0 T CVProfile::ResetCounters(CounterGroup_t)
00017c90 T CVProfile::HideBudgetGroup(int, bool)
00017450 T CVProfile::AddBudgetGroupName(char const*, int)
00017c60 T CVProfile::GetNumBudgetGroups()
000173e0 T CVProfile::FindBudgetGroupName(char const*)
00017cd0 T CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
00017360 T CVProfile::GetBudgetGroupColor(int, int&, int&, int&, int&)
00017c30 T CVProfile::BudgetGroupNameToBudgetGroupID(char const*)
00017560 T CVProfile::BudgetGroupNameToBudgetGroupID(char const*, int)
00017c70 T CVProfile::RegisterNumBudgetGroupsChangedCallBack(void (*)())
00017240 T CVProfile::Term()
00016e30 T CVProfile::FindNode(CVProfNode*, char const*)
00018670 T CVProfile::SumTimes(CVProfNode*, int)
000189e0 T CVProfile::SumTimes(char const*, int)
00016eb0 T CVProfile::DumpNodes(CVProfNode*, int, bool)
00017760 T CVProfile::CVProfile()
00017760 T CVProfile::CVProfile()
00017310 T CVProfile::~CVProfile()
00017310 T CVProfile::~CVProfile()
         U operator new[](unsigned int)@@GLIBCXX_3.4
00013470 T CWorkerThread::GetCallParam(CFunctor**) const
00011e60 T CThreadSyncObject::operator!() const
00013130 T CThread::GetPriority() const
00017e20 T CVProfile::GetCounterName(int) const
00017e10 T CVProfile::GetNumCounters() const
00017e80 T CVProfile::GetCounterGroup(int) const
00017e40 T CVProfile::GetCounterValue(int) const
00017e60 T CVProfile::GetCounterNameAndValue(int, int&) const
         U std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)@@GLIBCXX_3.4.15
         U std::__detail::_List_node_base::_M_unhook()@@GLIBCXX_3.4.15
000122a0 T CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
         U operator new(unsigned int)@@GLIBCXX_3.4
         U std::__throw_bad_alloc()@@GLIBCXX_3.4
         U std::_Rb_tree_decrement(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
         U std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
0001eec4 V typeinfo for CWorkerThread
0001ee3c V typeinfo for CThread
         U typeinfo for int@@CXXABI_1.3
0001eed0 V typeinfo name for CWorkerThread
0001ee30 V typeinfo name for CThread
0001eea0 V vtable for CWorkerThread
0001ee60 V vtable for CThread
         U vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
0001ee84 V CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
