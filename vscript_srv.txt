         U abort@@GLIBC_2.0
         U acosf@@GLIBC_2.0
         U acos@@GLIBC_2.0
00079867 t add_fdes
0009eb00 d adds.7496
         U asinf@@GLIBC_2.0
         U asin@@GLIBC_2.0
         U atan2f@@GLIBC_2.0
         U atan2@@GLIBC_2.0
         U atanf@@GLIBC_2.0
         U atan@@GLIBC_2.0
00079b42 t base_from_cb_data
0007959a t base_from_object
         U bind@@GLIBC_2.0
0009eb08 A __bss_start
         U cbrtf@@GLIBC_2.0
         U chdir@@GLIBC_2.0
00079749 t classify_object_over_fdes
         U close@@GLIBC_2.0
         U CommandLine_Tier0
0009eb20 b completed.5793
         U cosf@@GLIBC_2.0
         U cos@@GLIBC_2.0
0005ed60 T CreateInterface
0007c7a0 r CSWTCH.119
0007c980 r CSWTCH.146
0007ec00 r CSWTCH.306
0007dd20 r CSWTCH.373
000990a8 d __CTOR_END__
00099000 d __CTOR_LIST__
0009f5e8 B cvar
         U __cxa_atexit@@GLIBC_2.1.3
         U __cxa_begin_catch@@CXXABI_1.3
         U __cxa_end_catch@@CXXABI_1.3
         w __cxa_finalize@@GLIBC_2.1.3
         U __cxa_guard_abort@@CXXABI_1.3
         U __cxa_guard_acquire@@CXXABI_1.3
         U __cxa_guard_release@@CXXABI_1.3
         U __cxa_pure_virtual@@CXXABI_1.3
         U __cxa_rethrow@@CXXABI_1.3
0007a7a5 t __deregister_frame
0007a79c t __deregister_frame_info
0007a6c6 t __deregister_frame_info_bases
         U dlclose@@GLIBC_2.0
         U dlerror@@GLIBC_2.0
         U dl_iterate_phdr@@GLIBC_2.2.4
         U dlopen@@GLIBC_2.1
         U dlsym@@GLIBC_2.0
0007a950 t __do_global_ctors_aux
00010d84 t __do_global_dtors_aux
00099200 d __dso_handle
000990b0 d __DTOR_END__
0009eb24 b dtor_idx.5795
000990ac d __DTOR_LIST__
000afc34 b dwarf_reg_size_table
000990b8 a _DYNAMIC
         U __dynamic_cast@@CXXABI_1.3
0009eb08 A _edata
000afd48 A _end
         U Error
000779de t execute_cfa_program
00078341 t execute_stack_op
         U expf@@GLIBC_2.0
000799c6 t fde_mixed_encoding_compare
00079949 t fde_single_encoding_compare
00079426 t fde_unencoded_compare
0007a978 T _fini
00080350 r Four_2ToThe21s
00080340 r Four_2ToThe22s
00080330 r Four_2ToThe23s
00080320 r Four_2ToThe24s
000802e0 r Four_Epsilons
000802d0 r Four_FLT_MAX
00080380 r Four_Fours
000802c0 r Four_Negative_FLT_MAX
00080360 r Four_NegativeOnes
000803b0 r Four_Ones
00080370 r Four_Origin
000802f0 r Four_Point225s
000803d0 r Four_PointFives
00080310 r Four_Thirds
00080390 r Four_Threes
000803a0 r Four_Twos
00080300 r Four_TwoThirds
000803c0 r Four_Zeros
0007944b t frame_downheap
00010df3 t frame_dummy
000965b4 r __FRAME_END__
000afc7c b frame_hdr_cache
000afc78 b frame_hdr_cache_head
000794d6 t frame_heapsort
00078efd t __frame_state_for
         U free@@GLIBC_2.0
0009f01c b g_bSqDbgTerminateScript
00099220 d g_escapes
0007968b t get_cie_encoding
         U GetCPUInformation
         U getcwd@@GLIBC_2.0
00079738 t get_fde_encoding
000991c8 a _GLOBAL_OFFSET_TABLE_
00010980 t _GLOBAL__sub_I_cvar
00010c50 t _GLOBAL__sub_I_Four_PointFives
00010150 t _GLOBAL__sub_I_g_escapes
00010800 t _GLOBAL__sub_I_g_ScriptManager
00010c90 t _GLOBAL__sub_I_lineartovertex
00010700 t _GLOBAL__sub_I_LOG_VSCRIPT
00010b80 t _GLOBAL__sub_I_s_bMathlibInitialized
00010910 t _GLOBAL__sub_I_s_pInterfaceRegs
000103c0 t _GLOBAL__sub_I_sq_getfunctioninfo
00010460 t _GLOBAL__sub_I_sqmem.cpp
00010180 t _GLOBAL__sub_I_sq_rdbg_init
000102a0 t _GLOBAL__sub_I_sqstd_format
000101e0 t _GLOBAL__sub_I_sqstd_getblob
000101b0 t _GLOBAL__sub_I_sqstd_printcallstack
00010210 t _GLOBAL__sub_I_sqstd_register_mathlib
00010240 t _GLOBAL__sub_I_sqstd_rex_compile
000109f0 t _GLOBAL__sub_I_s_StringCharConversion
000107c0 t _GLOBAL__sub_I_vsquirrel_test.cpp
00010400 t _GLOBAL__sub_I__Z11DumpLiteralR11SQObjectPtr
00010490 t _GLOBAL__sub_I__Z11IdType2Name15tagSQObjectType
000105d0 t _GLOBAL__sub_I__Z11QuatReleasePvi
00010c10 t _GLOBAL__sub_I__Z12SeedRandSIMDj
00010590 t _GLOBAL__sub_I__Z13QAngleReleasePvi
00010610 t _GLOBAL__sub_I__Z13VectorReleasePvi
00010650 t _GLOBAL__sub_I__Z15Vector2DReleasePvi
00010690 t _GLOBAL__sub_I__Z15Vector4DReleasePvi
00010270 t _GLOBAL__sub_I__Z16_stream_readblobP4SQVM
000102d0 t _GLOBAL__sub_I__Z18sq_aux_gettypedargP4SQVMi15tagSQObjectTypePP11SQObjectPtr
00010b40 t _GLOBAL__sub_I__Z18StrLessInsensitiveRKPKcS2_
00010390 t _GLOBAL__sub_I__Z7CompileP4SQVMPFiPvES1_PKcR11SQObjectPtrbb
00010310 t _GLOBAL__sub_I__Z7str2numPKcR11SQObjectPtr
00010940 t _GLOBAL__sub_I__Z9_V_memsetPvii
00010ae0 t _GLOBAL__sub_I__ZN10CUtlSymbol14s_pSymbolTableE
000104d0 t _GLOBAL__sub_I__ZN13SQSharedStateC2Ev
00010870 t _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
00010aa0 t _GLOBAL__sub_I__ZN15CUtlBinaryBlockC2Eii
00010550 t _GLOBAL__sub_I__ZN4SQVM5BW_OPEjR11SQObjectPtrRKS0_S3_
00010350 t _GLOBAL__sub_I__ZN7SQClassC2EP13SQSharedStatePS_
00010430 t _GLOBAL__sub_I__ZN7SQLexerC2Ev
00010510 t _GLOBAL__sub_I__ZN7SQTableC2EP13SQSharedStatei
         w __gmon_start__
0009f5e4 B g_pCVar
0009f5dc b g_pPhysics2
0009f5d8 b g_pPhysics2ResourceManager
0009f5e0 b g_pProcessUtils
0009f5d4 b g_pUtlSortVectorQSortContext
00099b40 d g_QAngleFuncs
00099c60 d g_QuatFuncs
0009f114 b g_ScriptManager
000802b0 r g_SIMD_0123
00080260 r g_SIMD_AllOnesMask
000802a0 r g_SIMD_clear_signmask
00080270 r g_SIMD_clear_wmask
00080210 r g_SIMD_ComponentMask
000801c0 r g_SIMD_EveryOtherMask
00080250 r g_SIMD_Low16BitsMask
00080280 r g_SIMD_lsbmask
00080290 r g_SIMD_signmask
000801d0 r g_SIMD_SkipTailMask
         U g_Telemetry
00099ea0 d g_Vector2DFuncs
00099f80 d g_Vector4DFuncs
00099d60 d g_VectorFuncs
         U g_VProfCurrentProfile
         U __gxx_personality_v0@@CXXABI_1.3
00010e2a t __i686.get_pc_thunk.bx
000793a7 t __i686.get_pc_thunk.cx
         U iconv_close@@GLIBC_2.1
         U iconv@@GLIBC_2.1
         U iconv_open@@GLIBC_2.1
0001007c T _init
0007795e t init_dwarf_reg_size_table
         U isalnum@@GLIBC_2.0
         U isalpha@@GLIBC_2.0
         U iscntrl@@GLIBC_2.0
         U islower@@GLIBC_2.0
         U isprint@@GLIBC_2.0
         U ispunct@@GLIBC_2.0
         U isspace@@GLIBC_2.0
         U isupper@@GLIBC_2.0
         U isxdigit@@GLIBC_2.0
000990b4 d __JCR_END__
000990b4 d __JCR_LIST__
         w _Jv_RegisterClasses
000778fc t .L17
000778c6 t .L19
000778e1 t .L20
00078839 t .L214
0007883d t .L215
00078842 t .L216
00078846 t .L217
00078852 t .L218
00078857 t .L219
00078861 t .L220
00078865 t .L221
0007886b t .L222
00078871 t .L223
00078877 t .L224
00078889 t .L225
00078882 t .L226
00078897 t .L227
0007887b t .L228
00078890 t .L229
000778d2 t .L23
0007889e t .L230
000778e6 t .L24
00078904 t .L244
000778ee t .L25
000778f5 t .L26
00078a53 t .L271
00078a5d t .L272
00078a89 t .L273
00078ad4 t .L274
00078aed t .L275
00077e30 t .L43
0007965f t .L45
00077e2b t .L46
00077a94 t .L47
00079629 t .L47
00077ac1 t .L48
00079644 t .L48
00077adf t .L49
00077afd t .L50
00077b1a t .L51
00079635 t .L51
00077b42 t .L52
00079649 t .L52
00077b78 t .L53
00079651 t .L53
00077b5d t .L54
00079658 t .L54
00077b93 t .L55
00077bbc t .L56
00077bf7 t .L57
00077c1d t .L58
00077c54 t .L59
00077c77 t .L60
00077c8a t .L61
00077ca2 t .L62
00077cbd t .L63
00077cea t .L64
00077d28 t .L65
00077d48 t .L66
00077d6a t .L67
00077d9d t .L68
00077dc3 t .L69
00077de6 t .L70
00077df9 t .L71
00079a43 t linear_search_fdes
000a7f20 b lineartolightmap
000a8f20 b lineartovertex
         U log10f@@GLIBC_2.0
         U logf@@GLIBC_2.0
         U LoggingSystem_IsChannelEnabled
         U LoggingSystem_Log
         U LoggingSystem_RegisterLoggingChannel
         U log@@GLIBC_2.0
0009f0d0 b LOG_VSCRIPT
         U longjmp@@GLIBC_2.0
         U malloc@@GLIBC_2.0
000afd44 b marker.7234
         U mbstowcs@@GLIBC_2.0
         U memcpy@@GLIBC_2.0
         U memmove@@GLIBC_2.0
         U memset@@GLIBC_2.0
         U Msg
00080040 r nanmask
000afc50 b object_mutex
000afc48 b once_regsizes.7669
0009e6f4 d pfVectorNormalizeFast
         U Plat_FloatTime
         U Plat_IsInDebugSession
0009e700 d power2_n
         U pow@@GLIBC_2.0
         U printf@@GLIBC_2.0
         w pthread_cancel@@GLIBC_2.0
         U pthread_mutexattr_init@@GLIBC_2.0
         U pthread_mutexattr_settype@@GLIBC_2.1
         U pthread_mutex_destroy@@GLIBC_2.0
         U pthread_mutex_init@@GLIBC_2.0
         U pthread_mutex_lock@@GLIBC_2.0
         U pthread_mutex_unlock@@GLIBC_2.0
         w pthread_once@@GLIBC_2.0
         U puts@@GLIBC_2.0
000a0e0c b quat_identity
         U rand@@GLIBC_2.0
         U RandomFloat
         U RandomInt
0007783a t read_encoded_value
000795e2 t read_encoded_value_with_base
000777f0 t read_sleb128
000793dc t read_sleb128
000777c0 t read_uleb128
000793ac t read_uleb128
         U realloc@@GLIBC_2.0
         U recv@@GLIBC_2.0
0007a5c2 t __register_frame
0007a5a8 t __register_frame_info
0007a51a t __register_frame_info_bases
0007a680 t __register_frame_info_table
0007a5f7 t __register_frame_info_table_bases
0007a69a t __register_frame_table
000a0e34 b s_bMathlibInitialized
0009f0c4 b ScriptMsgColor
0007a01c t search_object
000afc6c b seen_objects
         U select@@GLIBC_2.0
         U send@@GLIBC_2.0
00010ccc t set_fast_math
         U _setjmp@@GLIBC_2.0
         U sincosf@@GLIBC_2.1
000a0a00 b SinCosTable
         U sinf@@GLIBC_2.0
         U sin@@GLIBC_2.0
0007954a t size_of_encoded_value
0009f640 b s_NoEscConversion
         U socket@@GLIBC_2.0
0009f35c B s_pInterfaceRegs
         U sprintf@@GLIBC_2.0
000193e0 t sq_addref
00019b10 t sq_arrayappend
0001c3b0 t sq_arrayinsert
0001cb60 t sq_arraypop
0001ca00 t sq_arrayremove
0001c7f0 t sq_arrayresize
00019c50 t sq_arrayreverse
0001eb20 t sq_bindenv
0001d000 t sq_call
0001c6a0 t sq_clear
0001a390 t sq_clone
00019150 t sq_close
0001a680 t sq_cmp
0001d660 t sq_collectgarbage
00019190 t sq_compile
0001e7f0 t sq_compilebuffer
0001e170 t sq_createinstance
0001b280 t sq_deleteslot
000193a0 t sq_enabledebuginfo
0001a900 t sq_get
0001db00 t sq_getattributes
0001dff0 t sq_getbase
0001a2a0 t sq_getbool
0001de10 t sq_getbyhandle
0001d680 t sq_getcallee
0001e0c0 t sq_getclass
0001bb20 t sq_getclosureinfo
0001b9a0 t sq_getclosurename
0001e400 t sq_getdefaultdelegate
0001abf0 t sq_getdelegate
0001a120 t sq_getehandle
0001e8f0 t sq_geterrorfunc
0001a230 t sq_getfloat
00019ea0 t sq_getforeignptr
0001d6d0 t sq_getfreevariable
00032b10 t sq_getfunctioninfo
0001a410 t sq_gethash
0001b590 t sq_getinstanceup
0001a1c0 t sq_getinteger
0001cd50 t sq_getlasterror
0001aa00 t sq_getlocal
0001dc40 t sq_getmemberhandle
0001a520 t sq_getobjtypetag
0001e8d0 t sq_getprintfunc
00019410 t sq_getrefcount
0001d620 t sq_getscratchpad
0001bdd0 t sq_getsize
0001a9b0 t sq_getstackobj
0001a2f0 t sq_getstring
0001a340 t sq_getthread
0001a5e0 t sq_gettop
00019f10 t sq_gettype
0001b740 t sq_gettypetag
0001a4b0 t sq_getuserdata
0001a590 t sq_getuserpointer
0001a170 t sq_getutlstringtoken
00019180 t sq_getversion
00018f40 t sq_getvmstate
0001e330 t sq_getweakrefval
0001bbe0 t sq_instanceof
0001e840 t sq_move
0001e910 t sq_newarray
0001bc60 t sq_newclass
0001f390 t sq_newclosure
0001ae10 t sq_newmember
0001b420 t sq_newslot
000199b0 t sq_newtable
00019a60 t sq_newtableex
00018e60 t sq_newthread
000198b0 t sq_newuserdata
0001e600 t sq_next
000193c0 t sq_notifyallexceptions
0009f0c8 b SQ_NULL
00019520 t sq_objtobool
000194e0 t sq_objtofloat
000194b0 t sq_objtointeger
00019490 t sq_objtostring
00019540 t sq_objtouserpointer
00018da0 t sq_open
0001a650 t sq_pop
0001a660 t sq_poptop
00019eb0 t sq_push
00019760 t sq_pushbool
00019e60 t sq_pushconsttable
00019610 t sq_pushehandle
000197d0 t sq_pushfloat
000196f0 t sq_pushinteger
00019560 t sq_pushnull
0001aaf0 t sq_pushobject
00019e40 t sq_pushregistrytable
00019e20 t sq_pushroottable
00019570 t sq_pushstring
00019840 t sq_pushuserpointer
00019680 t sq_pushutlstringtoken
0001a790 t sq_rawdeleteslot
0001bff0 t sq_rawget
0001ace0 t sq_rawnewmember
0001af40 t sq_rawset
000139a0 t sq_rdbg_init
00013e90 t sq_rdbg_shutdown
00013ae0 t sq_rdbg_update
00013ab0 t sq_rdbg_waitforconnections
0001d520 t sq_readclosure
00019450 t sq_release
0001a670 t sq_remove
0001cd70 t sq_reservestack
0001cd00 t sq_reseterror
0001ab60 t sq_resetobject
0001cf00 t sq_resume
0001d640 t sq_resurrectunreachable
0001a6e0 t sq_set
0001d930 t sq_setattributes
0001df10 t sq_setbyhandle
0001b640 t sq_setclassudsize
0001d410 t sq_setcompilererrorhandler
0001b870 t sq_setconsttable
00019080 t sq_setdebughook
0001beb0 t sq_setdelegate
00018f70 t sq_seterrorhandler
00019e80 t sq_setforeignptr
0001d7b0 t sq_setfreevariable
0001b6d0 t sq_setinstanceup
0001ba50 t sq_setnativeclosurename
00019020 t sq_setnativedebughook
0001f1f0 t sq_setparamscheck
0001e8a0 t sq_setprintfunc
0001d350 t sq_setreleasehook
0001b910 t sq_setroottable
0001a5f0 t sq_settop
0001b7d0 t sq_settypetag
00032b90 t sq_stackinfos
00014f50 t sqstd_createblob
00018580 t sqstd_format
00014ec0 t sqstd_getblob
00014f10 t sqstd_getblobsize
00055b70 t sqstd_loadfile
00013f10 t sqstd_printcallstack
00015060 t sqstd_register_bloblib
00055b60 t sqstd_register_iolib
00015a60 t sqstd_register_mathlib
00018a80 t sqstd_register_stringlib
00016b00 t sqstd_rex_compile
00016aa0 t sqstd_rex_free
00016d90 t sqstd_rex_getsubexp
00016d80 t sqstd_rex_getsubexpcount
00016c20 t sqstd_rex_match
00016d40 t sqstd_rex_search
00016c70 t sqstd_rex_searchrange
00014410 t sqstd_seterrorhandlers
0001d100 t sq_suspendvm
0001ab80 t sq_throwerror
0001cc90 t sq_throwobject
0001a0d0 t sq_tobool
0001a010 t sq_tostring
00019f50 t sq_typeof
0001d110 t sq_wakeupvm
0001e220 t sq_weakref
0001d430 t sq_writeclosure
         U srand@@GLIBC_2.0
0009ff60 b s_StringCharConversion
         U strcasecmp@@GLIBC_2.0
         U strchr@@GLIBC_2.0
         U strcmp@@GLIBC_2.0
         U strcpy@@GLIBC_2.0
         U strdup@@GLIBC_2.0
         U strlen@@GLIBC_2.0
         U strncat@@GLIBC_2.0
         U strncpy@@GLIBC_2.0
         U strstr@@GLIBC_2.0
         U strtod@@GLIBC_2.0
         U strtok@@GLIBC_2.0
         U strtol@@GLIBC_2.0
         U strtoul@@GLIBC_2.0
000afc70 b subs.7497
         U tanf@@GLIBC_2.0
         U tan@@GLIBC_2.0
000afd3c b terminator.7340
         U ThreadGetCurrentId
         U ThreadInterlockedAssignIf64
         U ThreadSleep
         U tolower@@GLIBC_2.0
         U toupper@@GLIBC_2.0
         U towlower@@GLIBC_2.0
         U towupper@@GLIBC_2.0
000776bc t __udivdi3
000afc68 b unseen_objects
00079327 t _Unwind_Backtrace
00078fbe t _Unwind_DebugHook
0007930b t _Unwind_DeleteException
00078eb5 t _Unwind_FindEnclosingFunction
0007a7d6 t _Unwind_Find_FDE
000790f8 t _Unwind_ForcedUnwind
00078cb7 t _Unwind_ForcedUnwind_Phase2
00078e0f t _Unwind_GetCFA
00078ee7 t _Unwind_GetDataRelBase
00078208 t _Unwind_GetGR
00078e70 t _Unwind_GetIP
00078e7b t _Unwind_GetIPInfo
00078e9f t _Unwind_GetLanguageSpecificData
00078eaa t _Unwind_GetRegionStart
00078ef2 t _Unwind_GetTextRelBase
00079b8a t _Unwind_IteratePhdrCallback
00078fc3 t _Unwind_RaiseException
00078d74 t _Unwind_RaiseException_Phase2
000791a3 t _Unwind_Resume
0007924a t _Unwind_Resume_or_Rethrow
00078e1a t _Unwind_SetGR
00078e91 t _Unwind_SetIP
00077928 t _Unwind_SetSpColumn
00077e5c t uw_frame_state_for
00078bb6 t uw_init_context_1
00078254 t uw_install_context_1
00078c7d t uw_update_context
00078918 t uw_update_context_1
000a0e1c b vec3_angle
000a0e00 b vec3_invalid
000a0e28 b vec3_origin
         U vsnprintf@@GLIBC_2.0
         U vsprintf@@GLIBC_2.0
         U vswprintf@@GLIBC_2.2
         U Warning
         U wcslen@@GLIBC_2.0
         U wcsncat@@GLIBC_2.0
         U wcsncpy@@GLIBC_2.0
         U wcstombs@@GLIBC_2.0
00013ca0 t debug_hook(SQVM*)
         U DevWarning(char const*, ...)
00011f90 t endelement(SQVM*)
00068f30 t HashString(char const*)
00062030 t HexToValue(char)
0006dfb0 t IsDenormal(float const&)
00038cc0 t isexponent(int)
00038c20 t LexInteger(char const*, unsigned int*)
0006d330 t MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
0004fe30 t QAngleLeft(SQVM*)
0004f7f0 t QAngleRoll(SQVM*)
00050880 t QuatInvert(SQVM*)
00050540 t QuatTypeOf(SQVM*)
0003b530 t ReadObject(SQVM*, void*, int (*)(void*, void*, int), SQObjectPtr&)
00073570 t RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00038c60 t scisodigit(int)
000519c0 t VectorNorm(SQVM*)
00060b40 t V_FileBase(char const*, char*, int)
0005f300 t _V_memmove(void*, void const*, int)
000600c0 t V_snprintf(char*, int, char const*, ...)
0005f430 t _V_stricmp(char const*, char const*)
0005f6e0 t V_strnicmp(char const*, char const*, int)
0005fdf0 t V_strnistr(char const*, char const*, int)
0005f380 t _V_strrchr(char const*, char)
00061be0 t V_StrRight(char const*, int, char*, int)
00061a70 t V_StrSlice(char const*, int, int, char*, int)
00061790 t V_StrSubst(char const*, char const*, char const*, char*, int, bool)
00061c60 t V_strtowcs(char const*, int, wchar_t*, int)
00061ca0 t V_wcstostr(wchar_t const*, int, char*, int)
00061940 t AllocString(char const*, int)
0006ee70 t AngleMatrix(RadianEuler const&, matrix3x4_t&)
0006eec0 t AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
0006ecb0 t AngleMatrix(QAngle const&, matrix3x4_t&)
0006ee30 t AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
00018c20 t buf_lexfeed(void*)
0006f260 t ClearBounds(Vector&, Vector&)
         U ConColorMsg(Color const&, char const*, ...)
00072f90 t CubicBasis0(float)
00072fc0 t CubicBasis1(float)
00073000 t CubicBasis2(float)
00073040 t CubicBasis3(float)
00033390 t DumpLiteral(SQObjectPtr&)
0006de30 t FloorDivMod(double, double, int*, int*)
0003a630 t GetTypeName(SQObjectPtr const&)
0003a4a0 t IdType2Name(tagSQObjectType)
00010ea0 t IntToString(int)
00073740 t IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
0004f700 t QAnglePitch(SQVM*)
0004f380 t QAngleScale(SQVM*)
00050450 t QuatIterate(SQVM*)
00050430 t QuatRelease(void*, int)
0006fae0 t SmoothCurve(float)
00016f40 t _stream_eos(SQVM*)
00016de0 t _stream_len(SQVM*)
00052de0 t Vector2DAdd(SQVM*)
00052a50 t Vector2DDot(SQVM*)
00052bf0 t Vector2DGet(SQVM*)
00052ce0 t Vector2DSet(SQVM*)
00053cb0 t Vector4DAdd(SQVM*)
00053880 t Vector4DDot(SQVM*)
00053a80 t Vector4DGet(SQVM*)
00053b90 t Vector4DSet(SQVM*)
00051e20 t VectorCross(SQVM*)
00051ce0 t VectorScale(SQVM*)
00060020 t V_snwprintf(wchar_t*, int, wchar_t const*, ...)
0005f4d0 t _V_strlower(char*)
00060110 t V_vsnprintf(char*, int, char const*, char*)
0005f560 t _V_wcslower(char const*, int, wchar_t*)
0003b400 t WriteObject(SQVM*, void*, int (*)(void*, void*, int), SQObjectPtr&)
000619b0 t AllocWString(wchar_t const*, int)
0006f1a0 t AngleIMatrix(RadianEuler const&, matrix3x4_t&)
0006f020 t AngleIMatrix(QAngle const&, matrix3x4_t&)
0006f1f0 t AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
0006e290 t AngleVectors(QAngle const&, Vector*)
0006e340 t AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
000121e0 t beginelement(SQVM*)
00061eb0 t CopyMemory3D(void*, void const*, int, int, int, int, int, int, int)
0006d600 t CrossProduct(float const*, float const*, float*)
000728e0 t Cubic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0006cd90 t _InvRSquared(float const*)
00074510 t MathLib_Init(float, float, float, int, bool, bool, bool, bool)
0006ce80 t MatrixAngles(matrix3x4_t const&, float*)
00070170 t MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
0006d000 t MatrixAngles(matrix3x4_t const&, RadianEuler&, Vector&)
0006d400 t MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
0004f4c0 t QAngleToQuat(SQVM*)
0004f270 t QAngleTypeOf(SQVM*)
00070860 t QuaternionLn(Quaternion const&, Quaternion&)
00050e50 t QuatSubtract(SQVM*)
00050760 t QuatToQAngle(SQVM*)
00051390 t QuatToString(SQVM*)
00051120 t RegisterQuat(SQVM*)
000767c0 t SeedRandSIMD(unsigned int)
000170c0 t _stream_seek(SQVM*)
00016e90 t _stream_tell(SQVM*)
00052b20 t Vector2DNorm(SQVM*)
00053960 t Vector4DNorm(SQVM*)
0006d980 t VectorAngles(float const*, float*)
0006e650 t VectorAngles(Vector const&, QAngle&)
0006e7c0 t VectorAngles(Vector const&, Vector const&, QAngle&)
00051670 t VectorLength(SQVM*)
0006d830 t VectorMatrix(Vector const&, matrix3x4_t&)
0006d1a0 t VectorRotate(float const*, matrix3x4_t const&, float*)
00070e80 t VectorRotate(Vector const&, Quaternion const&, Vector&)
0006ef60 t VectorRotate(Vector const&, QAngle const&, Vector&)
0006ce40 t VectorsEqual(float const*, float const*)
00051560 t VectorTypeOf(SQVM*)
00060e10 t V_FixSlashes(char*, char)
000602c0 t V_pretifymem(float, int, bool)
000604e0 t V_pretifynum(long long)
0005f6d0 t V_strcasecmp(char const*, char const*)
000608c0 t V_UCS2ToUTF8(unsigned short const*, char*, int)
00060980 t V_UTF8ToUCS2(char const*, int, unsigned short*, int)
00060070 t V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
00074790 t AngleDistance(float, float)
00074640 t ApproachAngle(float, float, float)
00013d80 t error_handler(SQVM*)
00077120 t GammaToLinear(float)
00077170 t LinearToGamma(float)
0006d680 t MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
00074d10 t PolyFromPlane(Vector*, Vector const&, float, float)
0004f5e0 t QAngleForward(SQVM*)
0004f1a0 t QAngleIterate(SQVM*)
0004f180 t QAngleRelease(void*, int)
00050580 t QuatConstruct(SQVM*)
00070400 t QuaternionAdd(Quaternion const&, Quaternion const&, Quaternion&)
00070700 t QuaternionExp(Quaternion const&, Quaternion&)
00074970 t RotationDelta(QAngle const&, QAngle const&, QAngle*)
00022b00 t _sort_compare(SQVM*, SQObjectPtr&, SQObjectPtr&, int, int&)
00017000 t _stream_flush(SQVM*)
00017520 t _stream_readn(SQVM*)
000731d0 t TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
000612e0 t V_AppendSlash(char*, int)
00060ac0 t V_binarytohex(unsigned char const*, int, char*, int)
00062120 t V_BinToString(char*, void*, unsigned int)
000527f0 t Vector2DScale(SQVM*)
000535f0 t Vector4DScale(SQVM*)
0006d5d0 t VectorCompare(float const*, float const*)
0006d230 t VectorIRotate(float const*, matrix3x4_t const&, float*)
00051490 t VectorIterate(SQVM*)
00051470 t VectorRelease(void*, int)
0006d700 t VectorVectors(Vector const&, Vector&, Vector&)
00061110 t V_GetFileName(char const*)
00060a20 t V_hextobinary(char const*, int, unsigned char*, int)
000622a0 t V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
00062080 t V_StringToBin(char const*, void*, unsigned int)
0005f660 t V_strncasecmp(char const*, char const*, int)
000747f0 t AngleNormalize(float)
00074890 t AnglesAreEqual(float, float, float)
0006f2d0 t AreBoundsValid(Vector const&, Vector const&)
0006e000 t BoxOnPlaneSide(float const*, float const*, cplane_t const*)
00017ae0 t declare_stream(SQVM*, char const*, void*, char const*, tagSQRegFunction*, tagSQRegFunction*)
00072380 t Hermite_Spline(float, float, float, float)
000721e0 t Hermite_Spline(float, float, float, float, float)
000723d0 t Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
000722e0 t Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
000720c0 t Hermite_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000733a0 t ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00038b90 t LexHexadecimal(char const*, unsigned int*)
0004fbb0 t QAngleSubtract(SQVM*)
00050220 t QAngleToString(SQVM*)
000704c0 t QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
0004ffc0 t RegisterQAngle(SQVM*)
00052000 t RegisterVector(SQVM*)
0006ea70 t SetScaleMatrix(float, float, float, matrix3x4_t&)
0006f340 t SolveQuadratic(float, float, float, float&, float&)
00055ba0 t SQTypeToString(tagSQObjectType)
000171f0 t _stream_writen(SQVM*)
0005f050 t Sys_GetFactory(CSysModule*)
0005f090 t Sys_GetFactory(char const*)
0005edf0 t Sys_LoadModule(char const*, Sys_Flags)
0003a720 t TranslateIndex(SQObjectPtr const&)
00052920 t Vector2DLength(SQVM*)
000526a0 t Vector2DTypeOf(SQVM*)
00053730 t Vector4DLength(SQVM*)
000534e0 t Vector4DTypeOf(SQVM*)
000517b0 t VectorLength2D(SQVM*)
00051b90 t VectorSubtract(SQVM*)
00052260 t VectorToString(SQVM*)
00060d60 t V_SetExtension(char*, char const*, int)
00062170 t V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
00062400 t V_SplitWString(wchar_t const*, wchar_t const*, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
00060ed0 t V_StripLastDir(char*, int)
00060160 t V_vsnprintfRet(char*, int, char const*, char*, bool*)
00071000 t AngleQuaternion(RadianEuler const&, Quaternion&)
00071140 t AngleQuaternion(QAngle const&, Quaternion&)
00076d00 t BuildGammaTable(float, float, float, int)
00074fa0 t ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
0003ec80 t CompileTypemask(sqvector<int>&, char const*)
0006dae0 t ConcatRotations(float const (*) [3], float const (*) [3], float (*) [3])
0005d130 t ConVar_Register(int, IConCommandBaseAccessor*)
00010ed0 t EscapeXMLString(SQVM*, char const*)
0005ed70 t GetModuleHandle(char const*)
0006cde0 t InitSinCosTable()
0006f300 t IsPointInBounds(Vector const&, Vector const&, Vector const&)
00077540 t LinearToTexture(float)
0006d560 t MatrixGetColumn(matrix3x4_t const&, int, Vector&)
0006d590 t MatrixSetColumn(Vector const&, int, matrix3x4_t&)
0006ec30 t MatrixTranspose(matrix3x4_t&)
0006ec60 t MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
0004f2b0 t QAngleConstruct(SQVM*)
0006fbb0 t QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
00070120 t QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
000702f0 t QuaternionScale(Quaternion const&, float, Quaternion&)
0006fe60 t QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
00073060 t RangeCompressor(float, float, float, float)
00016dc0 t _stream__cloned(SQVM*)
00077510 t TextureToLinear(int)
000525d0 t Vector2DIterate(SQVM*)
000525b0 t Vector2DRelease(void*, int)
000533f0 t Vector4DIterate(SQVM*)
000533d0 t Vector4DRelease(void*, int)
000515a0 t VectorConstruct(SQVM*)
00051710 t VectorLengthSqr(SQVM*)
0006cd10 t VectorNormalize(Vector&)
0006d060 t VectorTransform(float const*, matrix3x4_t const&, float*)
0006f8e0 t VectorYawRotate(Vector const&, float, Vector&)
00061720 t V_FixupPathName(char*, unsigned int, char const*)
000622d0 t V_SplitWString2(wchar_t const*, wchar_t const**, int, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
00060dd0 t V_StripFilename(char*)
00060780 t V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
00060830 t V_UnicodeToUCS2(wchar_t const*, int, char*, int)
00060730 t V_UnicodeToUTF8(wchar_t const*, char*, int)
000606e0 t V_UTF8ToUnicode(char const*, wchar_t*, int)
0006f290 t AddPointToBounds(Vector const&, Vector&, Vector&)
0006dd50 t ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
00022c40 t _hsort_sift_down(SQVM*, SQArray*, int, int, int)
00017910 t init_streamclass(SQVM*)
0006d390 t MatricesAreEqual(matrix3x4_t const&, matrix3x4_t const&, float)
0006d2c0 t MatrixInitialize(matrix3x4_t&, Vector const&, Vector const&, Vector const&, Vector const&)
00071310 t MatrixQuaternion(matrix3x4_t const&, Quaternion&)
00072da0 t Parabolic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00071340 t QuaternionAngles(Quaternion const&, RadianEuler&)
00070ec0 t QuaternionAngles(Quaternion const&, QAngle&)
0006fef0 t QuaternionInvert(Quaternion const&, Quaternion&)
00070b40 t QuaternionLookAt(Vector const&, Vector const&, Quaternion&)
00070ca0 t QuaternionMatrix(Quaternion const&, matrix3x4_t&)
00070e40 t QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
000530c0 t RegisterVector2D(SQVM*)
00053fd0 t RegisterVector4D(SQVM*)
0006dfd0 t SignbitsForPlane(cplane_t*)
000713b0 t Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
00022900 t sq_base_register(SQVM*)
000177d0 t _stream_readblob(SQVM*)
000693c0 t StrLessSensitive(char const* const&, char const* const&)
0005f030 t Sys_UnloadModule(CSysModule*)
00052f20 t Vector2DSubtract(SQVM*)
00053310 t Vector2DToString(SQVM*)
00053e10 t Vector4DSubtract(SQVM*)
00054240 t Vector4DToString(SQVM*)
0006d100 t VectorITransform(float const*, matrix3x4_t const&, float*)
000616f0 t V_IsAbsolutePath(char const*)
00060c70 t V_StripExtension(char const*, char*, int)
00071280 t BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
00068e70 t CharacterSetBuild(characterset_t*, char const*)
0005df80 t ConVar_PrintFlags(ConCommandBase const*)
0005d1f0 t ConVar_Unregister()
00055b80 t FieldTypeToString(int)
         U LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
0006e9f0 t SetIdentityMatrix(matrix3x4_t&)
0006fb30 t SmoothCurve_Tweak(float, float, float)
000771c0 t SrgbGammaToLinear(float)
00077250 t SrgbLinearToGamma(float)
000173f0 t _stream_writeblob(SQVM*)
0005f6f0 t StringAfterPrefix(char const*, char const*)
0005f0c0 t Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
00061330 t V_ComposeFileName(char const*, char const*, char*, int)
000526e0 t Vector2DConstruct(SQVM*)
000529c0 t Vector2DLengthSqr(SQVM*)
00053520 t Vector4DConstruct(SQVM*)
000537e0 t Vector4DLengthSqr(SQVM*)
00051850 t VectorLength2DSqr(SQVM*)
00060ff0 t V_ExtractFilePath(char const*, char*, int)
00061e60 t V_StringToColor32(color32_s*, char const*)
000772e0 t X360GammaToLinear(float)
00077440 t X360LinearToGamma(float)
00072d20 t BSpline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00073c30 t CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
000714f0 t Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0001dd50 t _getmemberbyhandle(SQVM*, SQObjectPtr&, tagSQMemberHandle const*, SQObjectPtr*&)
000768f0 t GetSIMDRandContext()
00068f90 t HashStringCaseless(char const*)
000745a0 t MathLib_MMXEnabled()
000745b0 t MathLib_SSEEnabled()
00018ca0 t sq_aux_gettypedarg(SQVM*, int, tagSQObjectType, SQObjectPtr**)
0001bd60 t sq_aux_invalidtype(SQVM*, tagSQObjectType)
00069390 t StrLessInsensitive(char const* const&, char const* const&)
0005f080 t Sys_GetFactoryThis()
00060d00 t V_DefaultExtension(char*, char const*, int)
00060e50 t V_FixDoubleSlashes(char*)
00061070 t V_GetFileExtension(char const*)
000613d0 t V_MakeAbsolutePath(char*, int, char const*, char const*)
00061540 t V_MakeRelativePath(char const*, char const*, char*, int)
00061150 t V_RemoveDotSlashes(char*, char)
00061db0 t V_StringToIntArray(int*, int, char const*)
00070f80 t AxisAngleQuaternion(Vector const&, float, Quaternion&)
00072270 t Hermite_SplineBasis(float, float*)
00077580 t LinearToScreenGamma(float)
000745c0 t MathLib_SSE2Enabled()
00070610 t QuaternionAngleDiff(Quaternion const&, Quaternion const&)
00070ef0 t QuaternionAxisAngle(Quaternion const&, Vector&, float&)
0006feb0 t QuaternionConjugate(Quaternion const&, Quaternion&)
0006ffa0 t QuaternionNormalize(Quaternion&)
00050670 t QuatSetPitchYawRoll(SQVM*)
000774f0 t SrgbGammaTo360Gamma(float)
00073fc0 t CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
00074c40 t ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
00076480 t GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
00070470 t QuaternionDotProduct(Quaternion const&, Quaternion const&)
000512b0 t QuatToKeyValueString(SQVM*)
0006cbe0 t _VectorNormalizeFast(Vector&)
00060c40 t V_StripTrailingSlash(char*)
0006e4d0 t AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
00073cb0 t CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
00073910 t CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
000775c0 t ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
00062710 t ConnectTier1Libraries(void* (**)(char const*, int*), int)
0003ef20 t CreateDefaultDelegate(SQSharedState*, tagSQRegFunction*)
0005c810 t DefaultCompletionFunc(char const*, char (*) [64])
0006df60 t GreatestCommonDivisor(int, int)
0006f400 t SolveInverseQuadratic(float, float, float, float, float, float, float&, float&, float&)
00013ec0 t _sqstd_compiler_error(SQVM*, char const*, char const*, int, int)
0005edd0 t Sys_IsDebuggerPresent()
00077630 t VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
00061a20 t V_GetCurrentDirectory(char*, int)
00061a50 t V_SetCurrentDirectory(char const*)
00060fb0 t V_UnqualifiedFileName(char const*)
00074850 t AngleNormalizePositive(float)
000739f0 t CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
00073ba0 t CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
00074a20 t ClipLineSegmentToPlane(Vector const&, Vector const&, Vector*, Vector*, float)
00076c80 t GammaToLinearFullRange(float)
00062960 t GetNoEscCharConversion()
00076cc0 t LinearToGammaFullRange(float)
00050150 t QAngleToKeyValueString(SQVM*)
000700c0 t QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
0006fc40 t QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
00076940 t ReleaseSIMDRandContext(int)
000748e0 t RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
0005a4c0 t ScriptCreateSquirrelVM()
00052190 t VectorToKeyValueString(SQVM*)
000610c0 t V_ExtractFileExtension(char const*, char*, int)
0005fb40 t V_normalizeFloatString(char*)
00073ae0 t CalcClosestPointToLineT(Vector const&, Vector const&, Vector const&, Vector&)
00074030 t CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
000752c0 t ClipPolyToPlane_Precise(double*, int, double*, double const*, double, double)
0005e260 t ConVar_PrintDescription(ConCommandBase const*)
0005ecc0 t CreateInterfaceInternal(char const*, int*)
000729f0 t Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000724a0 t Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00070030 t QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
0005a290 t ScriptDestroySquirrelVM(IScriptVM*)
00073f40 t CalcClosestPointOnLine2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
00075ff0 t CalcTriangleTangentSpace(Vector const&, Vector const&, Vector const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector&, Vector&)
0006dc70 t ConcatTransforms_Aligned(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
000627e0 t DisconnectTier1Libraries()
00062950 t GetCStringCharConversion()
000766c0 t RandomVectorInUnitCircle(Vector2D*)
00076590 t RandomVectorInUnitSphere(Vector*)
00053250 t Vector2DToKeyValueString(SQVM*)
00054160 t Vector4DToKeyValueString(SQVM*)
00073eb0 t CalcClosestPointToLineT2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
00073dc0 t CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
000717a0 t Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00075d80 t GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
000756f0 t GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, VPlane*)
00061fd0 t V_TranslateLineFeedsToUnix(char*)
00074120 t CalcDistanceToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
00071a00 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00071c60 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
00072f10 t Parabolic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0005f020 t Sys_RunningWithDebugModules()
0006efa0 t TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
0006ef00 t TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
0006d8b0 t VectorPerpendicularToVector(Vector const&, Vector*)
00073e40 t CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
00071d40 t Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0006eab0 t MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
000709b0 t QuaternionAverageExponential(Quaternion&, int, Quaternion const*, float const*)
00073d20 t CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
00072040 t Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00074190 t CalcDistanceSqrToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
00068ff0 t HashStringCaselessConventional(char const*)
00018c40 t QuinticInterpolatingPolynomial(float)
0006f550 t SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
0005f740 t StringAfterPrefixCaseSensitive(char const*, char const*)
00061cd0 t V_AddBackSlashesToSpecialChars(char const*)
00074090 t CalcClosestPointOnLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
0006f750 t SolveInverseReciprocalQuadratic(float, float, float, float, float, float, float&, float&, float&)
00073a60 t CalcSqrDistAndClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&, float&)
000741f0 t CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
00072850 t Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00071ec0 t Catmull_Rom_Spline_Integral_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
0006f990 t Bias(float, float)
0006fa20 t Gain(float, float)
00069090 t Hash4(void const*)
000690e0 t Hash8(void const*)
000461c0 t Experimental_SearchFunctionProtoForAllSubProtosMatchingSourceAndLine(SQFunctionProto*, sqvector<SQFunctionProto*>&, char const*, int)
         U ConMsg(char const*, ...)
         U DevMsg(char const*, ...)
00069170 t Hash12(void const*)
00069230 t Hash16(void const*)
00022d80 t _hsort(SQVM*, SQObjectPtr&, int, int, int)
0006d660 t Q_log2(unsigned int)
0006ccb0 t _sqrtf(float)
0005f990 t V_atof(char const*)
0005f970 t V_atoi(char const*)
00072a70 t BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000270f0 t Compile(SQVM*, int (*)(void*), void*, char const*, SQObjectPtr&, bool, bool)
00069040 t HashInt(int)
00050d20 t QuatAdd(SQVM*)
000509a0 t QuatDot(SQVM*)
00050af0 t QuatGet(SQVM*)
00050c00 t QuatSet(SQVM*)
0006ccd0 t _rsqrtf(float)
00022250 t str2num(char const*, SQObjectPtr&)
000745e0 t Approach(float, float, float)
00075690 t CalcFovX(float, float)
00075600 t CalcFovY(float, float)
000755c0 t CeilPow2(int)
0003b3a0 t CheckTag(SQVM*, int (*)(void*, void*, int), void*, unsigned int)
00076370 t HSVtoRGB(Vector const&, Vector&)
00038c80 t LexOctal(char const*, unsigned int*)
0004fd00 t QAngleUp(SQVM*)
00050a70 t QuatNorm(SQVM*)
00076870 t RandSIMD(int)
00076960 t RandSIMD()
00076290 t RGBtoHSV(Vector const&, Vector&)
0003b300 t SafeRead(SQVM*, int (*)(void*, void*, int), void*, void*, int)
0005f770 t V_atoi64(char const*)
0003b370 t WriteTag(SQVM*, int (*)(void*, void*, int), void*, unsigned int)
00074710 t AngleDiff(float, float)
00012330 t attribute(SQVM*)
000755e0 t FloorPow2(int)
00069320 t HashBlock(void const*, unsigned int)
0004fa60 t QAngleAdd(SQVM*)
0004f870 t QAngleGet(SQVM*)
0004f960 t QAngleSet(SQVM*)
0004f770 t QAngleYaw(SQVM*)
00050fa0 t QuatScale(SQVM*)
0003b2b0 t SafeWrite(SQVM*, int (*)(void*, void*, int), void*, void*, int)
00051a40 t VectorAdd(SQVM*)
000518e0 t VectorDot(SQVM*)
00052480 t VectorGet(SQVM*)
00052330 t VectorSet(SQVM*)
0005f310 t _V_memcmp(void const*, void const*, int)
0005f2f0 t _V_memcpy(void*, void const*, int)
0005f2e0 t _V_memset(void*, int, int)
0005f3d0 t _V_strcmp(char const*, char const*)
0005f360 t _V_strcpy(char*, char const*)
0005fce0 t V_stristr(char*, char const*)
0005fbc0 t V_stristr(char const*, char const*)
00061b90 t V_StrLeft(char const*, int, char*, int)
0005f340 t _V_strlen(char const*)
000601c0 t V_strncat(char*, char const*, unsigned int, int)
0005ff50 t V_strnchr(char const*, char, int)
0005f5a0 t V_strncmp(char const*, char const*, int)
0005ffa0 t V_strncpy(char*, char const*, int)
0005f600 t V_strnlwr(char*, unsigned int)
0005f470 t _V_strstr(char const*, char const*)
0005f480 t _V_strupr(char*)
0005f3e0 t _V_wcscmp(wchar_t const*, wchar_t const*)
0005fcf0 t V_wcsistr(wchar_t const*, wchar_t const*)
0005fde0 t V_wcsistr(wchar_t*, wchar_t const*)
0005f370 t _V_wcslen(wchar_t const*)
00060240 t V_wcsncat(wchar_t*, wchar_t const*, unsigned int, int)
0005ffe0 t V_wcsncpy(wchar_t*, wchar_t const*, int)
0005f520 t _V_wcsupr(char const*, int, wchar_t*)
         U operator delete[](void*)@@GLIBCXX_3.4
         U operator delete(void*)@@GLIBCXX_3.4
0009ee40 b guard variable for SQDbgServer::SuperVerbose()::s_bVerbose
0009f140 b guard variable for CScriptManager::CreateVM(ScriptLanguage_t)::binding
0009f190 b guard variable for CScriptManager::CreateVM(ScriptLanguage_t)::binding
000a09c8 b guard variable for CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0009f0f0 b guard variable for CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
000a09e8 b guard variable for CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00021360 t array_find(SQVM*)
00022e80 t array_sort(SQVM*)
00024d40 t base_array(SQVM*)
0001f6b0 t base_dummy(SQVM*)
0001fe20 t base_error(SQVM*)
0007c260 r base_funcs
00020170 t base_print(SQVM*)
000145d0 t _blob__get(SQVM*)
000149e0 t _blob__set(SQVM*)
000156c0 t math_atan2(SQVM*)
00015550 t math_floor(SQVM*)
000157e0 t math_log10(SQVM*)
00015a00 t math_srand(SQVM*)
0009f200 b s_BreakSet
00021a40 t array_apply(SQVM*)
00024910 t array_slice(SQVM*)
000203a0 t base_assert(SQVM*)
00020120 t base_callee(SQVM*)
000147a0 t _blob_swap2(SQVM*)
000146c0 t _blob_swap4(SQVM*)
00021810 t __map_array(SQArray*, SQArray*, SQVM*)
0009f1ec b s_nCVarFlag
0001fbf0 t string_find(SQVM*)
00020bb0 t thread_call(SQVM*)
0009ee70 b vec2_origin
0009ee84 b vec2_origin
0009ee98 b vec2_origin
0009efc4 b vec2_origin
0009efe4 b vec2_origin
0009eff8 b vec2_origin
0009f00c b vec2_origin
0009f02c b vec2_origin
0009f040 b vec2_origin
0009f058 b vec2_origin
0009f06c b vec2_origin
0009f080 b vec2_origin
0009f094 b vec2_origin
0009f0e0 b vec2_origin
0009f104 b vec2_origin
0009f120 b vec2_origin
0009f34c b vec2_origin
0009f5c4 b vec2_origin
0009f5f4 b vec2_origin
000a097c b vec2_origin
000a0990 b vec2_origin
000a09b4 b vec2_origin
000a09d4 b vec2_origin
000a0e40 b vec2_origin
000a7ee4 b vec2_origin
000a7ef8 b vec2_origin
000afc24 b vec2_origin
0009f0a4 b vec4_origin
0009f604 b vec4_origin
0001f6c0 t weakref_ref(SQVM*)
00018010 t _addrexmatch(SQVM*, char const*, char const*, char const*)
0001fd50 t array_append(SQVM*)
000202f0 t array_extend(SQVM*)
00023150 t array_filter(SQVM*)
00021a70 t array_insert(SQVM*)
00021510 t array_reduce(SQVM*)
00021fb0 t array_remove(SQVM*)
00021d40 t array_resize(SQVM*)
00020020 t base_suspend(SQVM*)
00014870 t _blob__nexti(SQVM*)
00014d60 t _blob_resize(SQVM*)
0001fb80 t closure_call(SQVM*)
00099420 d rexobj_funcs
0009f5ec b s_bConnected
00021150 t string_slice(SQVM*)
0009ee78 b vec2_invalid
0009ee8c b vec2_invalid
0009eea0 b vec2_invalid
0009efcc b vec2_invalid
0009efec b vec2_invalid
0009f000 b vec2_invalid
0009f014 b vec2_invalid
0009f034 b vec2_invalid
0009f048 b vec2_invalid
0009f060 b vec2_invalid
0009f074 b vec2_invalid
0009f088 b vec2_invalid
0009f09c b vec2_invalid
0009f0e8 b vec2_invalid
0009f10c b vec2_invalid
0009f128 b vec2_invalid
0009f354 b vec2_invalid
0009f5cc b vec2_invalid
0009f5fc b vec2_invalid
000a0984 b vec2_invalid
000a0998 b vec2_invalid
000a09bc b vec2_invalid
000a09dc b vec2_invalid
000a0e48 b vec2_invalid
000a7eec b vec2_invalid
000a7f00 b vec2_invalid
000afc2c b vec2_invalid
0009f0b4 b vec4_invalid
0009f614 b vec4_invalid
0001fd00 t array_reverse(SQVM*)
00014c20 t _blob__cloned(SQVM*)
00099300 d bloblib_funcs
00099260 d _blob_methods
000149b0 t _blob__typeof(SQVM*)
0001f820 t class_getbase(SQVM*)
000204e0 t closure_acall(SQVM*)
0001fb40 t closure_pcall(SQVM*)
00014510 t _g_blob_swap2(SQVM*)
000144d0 t _g_blob_swap4(SQVM*)
0009a060 d g_Script_init
0007b100 r mathlib_funcs
000182e0 t _regexp_match(SQVM*)
0009f1e8 b s_bRegistered
0009f300 b s_EmptyConVar
00017de0 t _string_split(SQVM*)
00018500 t _string_strip(SQVM*)
000acf20 b texgammatable
000209b0 t thread_wakeup(SQVM*)
00020340 t base_newthread(SQVM*)
0001f850 t class_instance(SQVM*)
00020430 t _closure_acall(SQVM*, unsigned int)
000204d0 t closure_pacall(SQVM*)
000ad020 b lineartoscreen
00018210 t _regexp_search(SQVM*)
0009e658 d s_BackSlashMap
000169e0 t sqstd_rex_list(SQRex*)
00018a10 t _string_format(SQVM*)
00017f60 t _string_lstrip(SQVM*)
00018480 t _string_rstrip(SQVM*)
00021070 t string_tolower(SQVM*)
00020f90 t string_toupper(SQVM*)
0001f7a0 t class_newmember(SQVM*)
0001fbc0 t closure_bindenv(SQVM*)
00014560 t _g_blob_castf2i(SQVM*)
00014490 t _g_blob_casti2f(SQVM*)
0007fb80 r g_nRandomValues
000aec20 b lineartotexture
000180b0 t _regexp_capture(SQVM*)
00017db0 t _regexp__typeof(SQVM*)
00016340 t sqstd_rex_error(SQRex*, char const*) [clone .isra.1]
00099360 d _stream_methods
0007b8c0 r stringlib_funcs
0005ebe0 t Sys_LoadLibrary(char const*, Sys_Flags)
0001ff80 t table_rawdelete(SQVM*)
000ae020 b texturetolinear
00023540 t closure_getinfos(SQVM*)
0001fef0 t container_rawget(SQVM*)
0001ffb0 t container_rawset(SQVM*)
00020560 t get_slice_params(SQVM*, int&, int&, SQObjectPtr&) [clone .constprop.27]
0009f1f4 b s_bBuiltBreakSet
0009e650 d s_nDLLIdentifier
00016520 t sqstd_rex_expect(SQRex*, int)
00020220 t thread_getstatus(SQVM*)
0001fb20 t base_getroottable(SQVM*)
000200e0 t base_setdebughook(SQVM*)
000207b0 t base_setroottable(SQVM*)
00014af0 t _blob_constructor(SQVM*)
000145a0 t _blob_releasehook(void*, int)
00014450 t _g_blob_swapfloat(SQVM*)
0001f6f0 t instance_getclass(SQVM*)
0009f1f0 b s_DefaultAccessor
00016550 t sqstd_rex_element(SQRex*)
000162a0 t sqstd_rex_newnode(SQRex*, int)
0001fd70 t table_getdelegate(SQVM*)
0001fda0 t table_setdelegate(SQVM*)
00020030 t base_compilestring(SQVM*)
0001faf0 t base_getconsttable(SQVM*)
0001fab0 t base_getstackinfos(SQVM*)
00020710 t base_setconsttable(SQVM*)
0001f720 t class_rawnewmember(SQVM*)
000163d0 t sqstd_rex_charnode(SQRex*, unsigned int)
000a0ee0 b s_SIMDRandContexts
0001fff0 t base_collectgarbage(SQVM*)
0001f8b0 t class_getattributes(SQVM*)
0001f880 t class_setattributes(SQVM*)
0001ff20 t container_rawexists(SQVM*)
00020d40 t generator_getstatus(SQVM*)
0001f8e0 t __getcallstackinfos(SQVM*, int)
00018380 t _regexp_constructor(SQVM*)
00017fb0 t _regexp_subexpcount(SQVM*)
00018410 t _rexobj_releasehook(void*, int)
00015d70 t sqstd_rex_matchnode(SQRex*, tagSQRexNode*, char const*, tagSQRexNode*)
0005eaf0 t Sys_LoadLibraryGuts(char const*, Sys_Flags)
000203f0 t base_enabledebuginfo(SQVM*)
00020100 t base_seterrorhandler(SQVM*)
00020690 t default_delegate_len(SQVM*)
000a09c4 b g_CleanupSymbolTable
0001fed0 t obj_delegate_weakref(SQVM*)
000a0e60 b s_nRandContextsInUse
00020850 t thread_getstackinfos(SQVM*)
00014390 t _sqstd_aux_printerror(SQVM*)
00015b80 t sqstd_rex_matchcclass(int, char)
00016360 t sqstd_rex_parsenumber(SQRex*)
00020ee0 t number_delegate_tochar(SQVM*)
0001ffd0 t base_resurectureachable(SQVM*)
000ae820 b g_Mathlib_GammaToLinear
000ae420 b g_Mathlib_LinearToGamma
00022360 t default_delegate_tofloat(SQVM*)
0001fe00 t default_delegate_tostring(SQVM*)
0009ee49 b UNSPECIFIED_LOGGING_COLOR
0009ee50 b UNSPECIFIED_LOGGING_COLOR
0009ee54 b UNSPECIFIED_LOGGING_COLOR
0009ee58 b UNSPECIFIED_LOGGING_COLOR
0009ee5c b UNSPECIFIED_LOGGING_COLOR
0009ee60 b UNSPECIFIED_LOGGING_COLOR
0009ee64 b UNSPECIFIED_LOGGING_COLOR
0009ee68 b UNSPECIFIED_LOGGING_COLOR
0009ee6c b UNSPECIFIED_LOGGING_COLOR
0009ee80 b UNSPECIFIED_LOGGING_COLOR
0009ee94 b UNSPECIFIED_LOGGING_COLOR
0009eea8 b UNSPECIFIED_LOGGING_COLOR
0009efc0 b UNSPECIFIED_LOGGING_COLOR
0009efd4 b UNSPECIFIED_LOGGING_COLOR
0009efd8 b UNSPECIFIED_LOGGING_COLOR
0009efdc b UNSPECIFIED_LOGGING_COLOR
0009efe0 b UNSPECIFIED_LOGGING_COLOR
0009eff4 b UNSPECIFIED_LOGGING_COLOR
0009f008 b UNSPECIFIED_LOGGING_COLOR
0009f028 b UNSPECIFIED_LOGGING_COLOR
0009f03c b UNSPECIFIED_LOGGING_COLOR
0009f054 b UNSPECIFIED_LOGGING_COLOR
0009f068 b UNSPECIFIED_LOGGING_COLOR
0009f07c b UNSPECIFIED_LOGGING_COLOR
0009f090 b UNSPECIFIED_LOGGING_COLOR
0009f0dc b UNSPECIFIED_LOGGING_COLOR
0009f100 b UNSPECIFIED_LOGGING_COLOR
0009f11c b UNSPECIFIED_LOGGING_COLOR
0009f348 b UNSPECIFIED_LOGGING_COLOR
0009f361 b UNSPECIFIED_LOGGING_COLOR
0009f5c0 b UNSPECIFIED_LOGGING_COLOR
0009f5ed b UNSPECIFIED_LOGGING_COLOR
000a0978 b UNSPECIFIED_LOGGING_COLOR
000a098c b UNSPECIFIED_LOGGING_COLOR
000a09b0 b UNSPECIFIED_LOGGING_COLOR
000a09d0 b UNSPECIFIED_LOGGING_COLOR
000a0e3c b UNSPECIFIED_LOGGING_COLOR
000a7ee0 b UNSPECIFIED_LOGGING_COLOR
000a7ef4 b UNSPECIFIED_LOGGING_COLOR
000afc20 b UNSPECIFIED_LOGGING_COLOR
000225e0 t default_delegate_tointeger(SQVM*)
0009f360 b s_bRunningWithDebugModules
0009e6d8 d s_pConversionArrays_NoEscConversion
0009e680 d s_pConversionArrays_StringCharConversion
0009f130 b __g_CreateCScriptManagerIScriptManager_reg
0005bdb0 t __CreateCScriptManagerIScriptManager_interface()
0007f969 r s_hex
00015430 t math_abs(SQVM*)
00015920 t math_cos(SQVM*)
000155f0 t math_exp(SQVM*)
00015830 t math_log(SQVM*)
00015640 t math_pow(SQVM*)
00015970 t math_sin(SQVM*)
00015790 t math_tan(SQVM*)
0005f240 t V_nibble(char)
00022ef0 t array_map(SQVM*)
0001fd20 t array_pop(SQVM*)
00020500 t array_top(SQVM*)
000212c0 t base_type(SQVM*)
00015880 t math_acos(SQVM*)
000158d0 t math_asin(SQVM*)
00015740 t math_atan(SQVM*)
000154e0 t math_ceil(SQVM*)
00015480 t math_fabs(SQVM*)
000155c0 t math_rand(SQVM*)
000159c0 t math_sqrt(SQVM*)
0001fde0 t obj_clear(SQVM*)
00010e30 t PrintTabs(int)
00017f10 t __strip_l(char const*, char const**)
00018430 t __strip_r(char const*, int, char const**) [clone .part.0]
0005c840 t ConCommand::CanAutoComplete()
0005e750 t ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
0005cf40 t ConCommand::Dispatch(CCommand const&)
0005d710 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
0005d680 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
0005d5f0 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0005d710 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
0005d680 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
0005d5f0 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0005ca60 t ConCommand::~ConCommand()
0005c820 t ConCommand::~ConCommand()
0005c820 t ConCommand::~ConCommand()
000641a0 t CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
00063b70 t CUtlBuffer::ParseToken(char const*, char const*, char*, int)
00065130 t CUtlBuffer::ConvertCRLF(CUtlBuffer&)
00062860 t CUtlBuffer::GetOverflow(int)
000644d0 t CUtlBuffer::IsBigEndian()
00065620 t CUtlBuffer::PutOverflow(int)
000650b0 t CUtlBuffer::AssumeMemory(void*, int, int, int)
00062e90 t CUtlBuffer::CheckPeekGet(int, int)
000644a0 t CUtlBuffer::SetBigEndian(bool)
00064040 t CUtlBuffer::EatCPPComment()
00063580 t CUtlBuffer::EatWhiteSpace()
00062d40 t CUtlBuffer::OnGetOverflow(int)
00062d10 t CUtlBuffer::OnPutOverflow(int)
00062bc0 t CUtlBuffer::SetBufferType(bool, bool)
00062c10 t CUtlBuffer::EnsureCapacity(int)
000630e0 t CUtlBuffer::PeekLineLength()
00063250 t CUtlBuffer::PeekWhiteSpace(int)
000631f0 t CUtlBuffer::PeekStringMatch(int, char const*, int)
00063e70 t CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
000632e0 t CUtlBuffer::PeekStringLength()
00064b90 t CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
00062ce0 t CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
00065030 t CUtlBuffer::SetExternalBuffer(void*, int, int, int)
000644e0 t CUtlBuffer::AddNullTermination()
00063f00 t CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
00064870 t CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
00064470 t CUtlBuffer::ActivateByteSwapping(bool)
00063040 t CUtlBuffer::CheckArbitraryPeekGet(int, int&)
00063d70 t CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
00063410 t CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
000635f0 t CUtlBuffer::Get(void*, int)
000645b0 t CUtlBuffer::Put(void const*, int)
00064e00 t CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
00064da0 t CUtlBuffer::Swap(CUtlBuffer&)
00063b40 t CUtlBuffer::Scanf(char const*, ...)
00064840 t CUtlBuffer::Printf(char const*, ...)
00063640 t CUtlBuffer::GetLine(char*, int)
00063190 t CUtlBuffer::GetUpTo(void*, int)
00062ff0 t CUtlBuffer::PeekGet(int, int)
00062d70 t CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
00064550 t CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
00063850 t CUtlBuffer::VaScanf(char const*, char*)
00062e00 t CUtlBuffer::CheckGet(int)
00064400 t CUtlBuffer::CheckPut(int)
00062ec0 t CUtlBuffer::GetToken(char const*)
000647f0 t CUtlBuffer::VaPrintf(char const*, char*)
00063720 t CUtlBuffer::GetString(char*, unsigned int)
00064630 t CUtlBuffer::PutString(char const*)
00065500 t CUtlBuffer::CUtlBuffer(int, int, int)
00064f80 t CUtlBuffer::CUtlBuffer(void const*, int, int)
00065500 t CUtlBuffer::CUtlBuffer(int, int, int)
00064f80 t CUtlBuffer::CUtlBuffer(void const*, int, int)
0005e9a0 t CUtlMemory<CUtlString, int>::Grow(int)
00067730 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
000674e0 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Purge()
0005b670 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
0006b300 t CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short>::Grow(int)
0006b1f0 t CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short>::Purge()
00065720 t CUtlMemory<unsigned char, int>::Grow(int)
000656e0 t CUtlMemory<unsigned char, int>::Purge()
0005e960 t CUtlMemory<unsigned char, int>::~CUtlMemory()
0005e960 t CUtlMemory<unsigned char, int>::~CUtlMemory()
0005bc00 t CUtlMemory<int, int>::Grow(int)
0005b3d0 t CUtlMemory<int, int>::Purge()
0006b4e0 t CUtlMemory<CCountedStringPool::hash_item_t, int>::Grow(int)
0006b270 t CUtlMemory<CCountedStringPool::hash_item_t, int>::Purge()
00062430 t CUtlMemory<char*, int>::Grow(int)
000675f0 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
00067520 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Purge()
00062570 t CUtlMemory<wchar_t*, int>::Grow(int)
0006cb30 t CUtlMemory<unsigned short, int>::Grow(int)
0006b230 t CUtlMemory<unsigned short, int>::Purge()
00067920 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00067e10 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
000682d0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
00068c80 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
00067810 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
000673f0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
0005b6b0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
0006b5e0 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
0006bad0 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
0006bf90 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
0006c950 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Insert(char const* const&)
0006b3d0 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::NewNode()
0006b100 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RemoveAll()
00065a90 t CUtlString::StripTrailingSlash()
00065b30 t CUtlString::Get()
00065e50 t CUtlString::Set(char const*)
00065b10 t CUtlString::Clear()
00065ae0 t CUtlString::Purge()
00065e90 t CUtlString::Format(char const*, ...)
000660c0 t CUtlString::SetDirect(char const*, int)
00065b60 t CUtlString::SetLength(int)
00065ef0 t CUtlString::operator=(char const*)
00066050 t CUtlString::operator=(CUtlString const&)
00065fd0 t CUtlString::CUtlString(char const*)
00065970 t CUtlString::CUtlString(void const*, int)
00065950 t CUtlString::CUtlString(void*, int, int)
00065f20 t CUtlString::CUtlString(CUtlString const&)
00065920 t CUtlString::CUtlString()
00065fd0 t CUtlString::CUtlString(char const*)
00065970 t CUtlString::CUtlString(void const*, int)
00065950 t CUtlString::CUtlString(void*, int, int)
00065f20 t CUtlString::CUtlString(CUtlString const&)
00065920 t CUtlString::CUtlString()
00065b80 t CUtlString::operator+=(char)
00065c80 t CUtlString::operator+=(double)
00065cd0 t CUtlString::operator+=(int)
00065f80 t CUtlString::operator+(char const*)
00065be0 t CUtlString::operator+=(char const*)
00065d20 t CUtlString::operator+=(CUtlString const&)
00066d80 t CUtlSymbol::Initialize()
000a09a0 b CUtlSymbol::s_pSymbolTable
000661f0 t CUtlSymbol::DisableStaticSymbolTable()
0009e6e0 d CUtlSymbol::s_bAllowStaticSymbolTable
00066ea0 t CUtlSymbol::CurrTable()
00067390 t CUtlSymbol::CUtlSymbol(char const*)
00067390 t CUtlSymbol::CUtlSymbol(char const*)
0005ea50 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
0005b370 t CUtlVector<CVariantBase<CVariantDefaultAllocator>, CUtlMemoryFixed<CVariantBase<CVariantDefaultAllocator>, 14u, 0> >::SetCount(int)
0005c350 t CUtlVector<int, CUtlMemory<int, int> >::InsertBefore(int, int const&)
0005c2a0 t CUtlVector<int, CUtlMemory<int, int> >::EnsureCapacity(int)
0005bcb0 t CUtlVector<int, CUtlMemory<int, int> >::SetCount(int)
0006b590 t CUtlVector<CCountedStringPool::hash_item_t, CUtlMemory<CCountedStringPool::hash_item_t, int> >::GrowVector(int)
0006b2b0 t CUtlVector<CCountedStringPool::hash_item_t, CUtlMemory<CCountedStringPool::hash_item_t, int> >::ShiftElementsRight(int, int)
000624e0 t CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
000676a0 t CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::InsertBefore(int, CUtlSymbolTable::StringPool_t* const&)
00062620 t CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >::InsertBefore(int, wchar_t* const&)
         U CVProfNode::EnterScope()
         U CVProfNode::GetSubNode(char const*, int, char const*, int)
         U CVProfNode::ExitScope()
00028e90 t SQCompiler::Expression()
0002c370 t SQCompiler::Statements()
00027340 t SQCompiler::ThrowError(void*, char const*)
0002d7d0 t SQCompiler::FunctionExp(int, bool)
0002af60 t SQCompiler::IfStatement()
00030830 t SQCompiler::BitwiseOrExp()
0002b900 t SQCompiler::ForStatement()
000287b0 t SQCompiler::LogicalOrExp()
0002eb80 t SQCompiler::PrefixedExpr()
0002f250 t SQCompiler::PrefixIncDec(int)
000301e0 t SQCompiler::BitwiseAndExp()
00031990 t SQCompiler::BitwiseXorExp()
00027570 t SQCompiler::EnumStatement()
00027a60 t SQCompiler::LogicalAndExp()
0002a420 t SQCompiler::CreateFunction(tagSQObject&, bool)
0002b270 t SQCompiler::WhileStatement()
0002d2c0 t SQCompiler::SwitchStatement()
0002b5c0 t SQCompiler::DoWhileStatement()
0002be30 t SQCompiler::ForEachStatement()
00032350 t SQCompiler::FunctionStatement()
0002c740 t SQCompiler::ParseTableOrClass(int, int)
0002c3f0 t SQCompiler::TryCatchStatement()
0002a930 t SQCompiler::LocalDeclStatement()
000306c0 t SQCompiler::EqExp()
000272f0 t SQCompiler::Error(char const*, ...)
00027360 t SQCompiler::Expect(int)
0002dd60 t SQCompiler::Factor()
000279c0 t void SQCompiler::BIN_EXP<void (SQCompiler::*)()>(SQOpcode, void (SQCompiler::*)(), int)
0002fbd0 t SQCompiler::CompExp()
0002ab30 t SQCompiler::Compile(SQObjectPtr&)
0002f430 t SQCompiler::MultExp()
0002f540 t SQCompiler::PlusExp()
0002d120 t SQCompiler::ClassExp()
0002f7d0 t SQCompiler::ShiftExp()
00029630 t SQCompiler::CommaExpr()
000297b0 t SQCompiler::Statement(bool)
00026560 t SQInstance::InstanceOf(SQClass*)
00025230 t SQInstance::GetMetaMethod(SQVM*, SQMetaMethod, SQObjectPtr&)
000262d0 t SQInstance::Init(SQSharedState*)
0003d200 t SQInstance::Mark(SQCollectable**)
00026f00 t SQInstance::GetType()
0003d6d0 t SQInstance::Iterate(CSQStateIterator*)
00026f50 t SQInstance::Release()
000251a0 t SQInstance::Finalize()
00026320 t SQInstance::SQInstance(SQSharedState*, SQClass*, int)
00026490 t SQInstance::SQInstance(SQSharedState*, SQInstance*, int)
00026320 t SQInstance::SQInstance(SQSharedState*, SQClass*, int)
00026490 t SQInstance::SQInstance(SQSharedState*, SQInstance*, int)
00025390 t SQInstance::~SQInstance()
000252b0 t SQInstance::~SQInstance()
000252b0 t SQInstance::~SQInstance()
00035ea0 t SQOuterVar::~SQOuterVar()
00035ea0 t SQOuterVar::~SQOuterVar()
00039e20 t SQUserData::Mark(SQCollectable**)
0003d800 t SQUserData::GetType()
0003a2a0 t SQUserData::Iterate(CSQStateIterator*)
0003d960 t SQUserData::Release()
0003e4c0 t SQUserData::Finalize()
0003e4e0 t SQUserData::~SQUserData()
0003e430 t SQUserData::~SQUserData()
0003e430 t SQUserData::~SQUserData()
00054c70 t CSquirrelVM::ClearValue(HSCRIPT__*, char const*)
00054470 t CSquirrelVM::CopyHandle(HSCRIPT__*)
000556b0 t CSquirrelVM::DumpObject(SQVM*)
00054680 t CSquirrelVM::QueryBreak(SQVM*)
00054460 t CSquirrelVM::WriteState(CUtlBuffer*)
00057aa0 t CSquirrelVM::CreateArray(CVariantBase<CVariantDefaultAllocator>&)
000563d0 t CSquirrelVM::CreateClass(ScriptClassDesc_t*)
00054540 t CSquirrelVM::CreateScope(char const*, HSCRIPT__*)
000580b0 t CSquirrelVM::CreateTable(CVariantBase<CVariantDefaultAllocator>&)
00054410 t CSquirrelVM::GetIdentity(HSCRIPT__*)
00057ee0 t CSquirrelVM::GetKeyValue(HSCRIPT__*, int, CVariantBase<CVariantDefaultAllocator>*, CVariantBase<CVariantDefaultAllocator>*)
00054320 t CSquirrelVM::GetLanguage()
00056d20 t CSquirrelVM::PushVariant(CVariantBase<CVariantDefaultAllocator> const&, bool)
00055660 t CSquirrelVM::ReleaseHook(void*, int)
00055ee0 t CSquirrelVM::ValueExists(HSCRIPT__*, char const*)
00054fb0 t CSquirrelVM::GetDeveloper(SQVM*)
00057cd0 t CSquirrelVM::GetKeyValue2(HSCRIPT__*, int, CVariantBase<CVariantDefaultAllocator>*, CVariantBase<CVariantDefaultAllocator>*)
000544b0 t CSquirrelVM::GetRootTable()
00055fd0 t CSquirrelVM::LookupObject(int, HSCRIPT__*, bool, bool)
00055d10 t CSquirrelVM::LookupObject(char const*, HSCRIPT__*, bool, bool)
00056c00 t CSquirrelVM::ReleaseScope(HSCRIPT__*)
00055250 t CSquirrelVM::ReleaseValue(CVariantBase<CVariantDefaultAllocator>&)
00056350 t CSquirrelVM::SetDebugHook(void (*)(SQVM*, int, char const*, int, char const*))
00054340 t CSquirrelVM::AddSearchPath(char const*)
000548b0 t CSquirrelVM::CompileScript(char const*, char const*)
00054ad0 t CSquirrelVM::GetArrayCount(HSCRIPT__*)
0005b080 t CSquirrelVM::GetInternalVM()
000550c0 t CSquirrelVM::MakeNamespace(SQVM*)
0005a510 t CSquirrelVM::RegisterClass(ScriptClassDesc_t*)
00056d10 t CSquirrelVM::ReleaseScript(HSCRIPT__*)
000592c0 t CSquirrelVM::TranslateCall(SQVM*)
000570f0 t CSquirrelVM::ArrayAddToTail(HSCRIPT__*, CVariantBase<CVariantDefaultAllocator> const&)
00056390 t CSquirrelVM::ClearDebugHook(void (*)(SQVM*, int, char const*, int, char const*))
000591f0 t CSquirrelVM::CollectGarbage(char const*, bool)
00059140 t CSquirrelVM::CollectGarbage(char const*, bool) [clone .part.66]
00058a50 t CSquirrelVM::GetScalarValue(HSCRIPT__*, CVariantBase<CVariantDefaultAllocator>*)
00055f30 t CSquirrelVM::LookupFunction(char const*, HSCRIPT__*, bool)
00055050 t CSquirrelVM::RaiseException(char const*)
000544f0 t CSquirrelVM::ReferenceScope(HSCRIPT__*)
00056bc0 t CSquirrelVM::RemoveInstance(HSCRIPT__*)
00054f00 t CSquirrelVM::CallConstructor(SQVM*)
000549a0 t CSquirrelVM::ConnectDebugger()
00058130 t CSquirrelVM::ExecuteFunction(HSCRIPT__*, CVariantBase<CVariantDefaultAllocator>*, int, CVariantBase<CVariantDefaultAllocator>*, HSCRIPT__*, bool)
00054330 t CSquirrelVM::GetLanguageName()
00054ff0 t CSquirrelVM::InstanceIsValid(SQVM*)
00056bf0 t CSquirrelVM::ReleaseFunction(HSCRIPT__*)
00057740 t CSquirrelVM::ConvertToVariant(SQVM*, tagSQObject, CVariantBase<CVariantDefaultAllocator>*)
00054350 t CSquirrelVM::GetInstanceValue(HSCRIPT__*, ScriptClassDesc_t*)
00059020 t CSquirrelVM::InstanceToString(SQVM*)
00056b30 t CSquirrelVM::RegisterFunction(ScriptFunctionBinding_t*)
0005a8c0 t CSquirrelVM::RegisterInstance(ScriptClassDesc_t*, void*)
00054450 t CSquirrelVM::SetErrorCallback(bool (*)(ScriptErrorLevel_t, char const*))
00054830 t CSquirrelVM::GenerateUniqueKey(char const*, char*, int)
00054440 t CSquirrelVM::SetOutputCallback(void (*)(char const*))
00054970 t CSquirrelVM::DisconnectDebugger()
00054d20 t CSquirrelVM::GetNumTableEntries(HSCRIPT__*)
00056310 t CSquirrelVM::IsClassDerivedFrom(ScriptClassDesc_t const*, ScriptClassDesc_t const*)
00054b90 t CSquirrelVM::SetInstanceUniqeId(HSCRIPT__*, char const*)
00056b80 t CSquirrelVM::ReleaseScriptObject(HSCRIPT__*)
00056190 t CSquirrelVM::CreateNativeInstance(ScriptClassDesc_t*, void*, int (*)(void*, int))
000553d0 t CSquirrelVM::GetFunctionSignature(SQVM*)
00056540 t CSquirrelVM::RegisterFunctionGuts(ScriptFunctionBinding_t*, ScriptClassDesc_t*)
00054db0 t CSquirrelVM::ForwardConsoleCommand(CCommandContext const&, CCommand const&)
00058e30 t CSquirrelVM::MakeSquirrelMetamethod_Get(HSCRIPT__*&, char const*, IScriptVM::ISquirrelMetamethodDelegate*, bool)
00055610 t CSquirrelVM::ExternalInstanceReleaseHook(void*, int)
00058e00 t CSquirrelVM::DestroySquirrelMetamethod_Get(CSquirrelMetamethodDelegateImpl*)
00058940 t CSquirrelVM::Run(HSCRIPT__*, bool)
000588f0 t CSquirrelVM::Run(HSCRIPT__*, HSCRIPT__*, bool)
00058970 t CSquirrelVM::Run(char const*, bool)
00058ca0 t CSquirrelVM::Experimental_ReplaceAFunctionInSourceFileAtLine(CSquirrelVM&, char const*, int)
0005a9f0 t CSquirrelVM::Init()
00054b50 t CSquirrelVM::Frame(float)
000543e0 t CSquirrelVM::IsArray(HSCRIPT__*)
000543b0 t CSquirrelVM::IsTable(HSCRIPT__*)
00057b30 t CSquirrelVM::GetValue(HSCRIPT__*, int, CVariantBase<CVariantDefaultAllocator>*)
00057c00 t CSquirrelVM::GetValue(HSCRIPT__*, char const*, CVariantBase<CVariantDefaultAllocator>*)
00057240 t CSquirrelVM::SetValue(HSCRIPT__*, int, CVariantBase<CVariantDefaultAllocator> const&)
00057430 t CSquirrelVM::SetValue(HSCRIPT__*, char const*, CVariantBase<CVariantDefaultAllocator> const&)
00055130 t CSquirrelVM::SetValue(HSCRIPT__*, char const*, char const*)
0005a1d0 t CSquirrelVM::Shutdown()
000547f0 t CSquirrelVM::DumpState()
000552e0 t CSquirrelVM::ErrorFunc(SQVM*, char const*, ...)
00055930 t CSquirrelVM::IsWeakref(SQVM*)
00054700 t CSquirrelVM::PrintFunc(SQVM*, char const*, ...)
00054430 t CSquirrelVM::ReadState(CUtlBuffer*)
0005a320 t CSquirrelVM::CSquirrelVM(SQVM*)
0005a320 t CSquirrelVM::CSquirrelVM(SQVM*)
00069cf0 t CStringPool::Find(char const*)
00069db0 t CStringPool::FreeAll()
0006a280 t CStringPool::Allocate(char const*)
00069450 t CStringPool::CStringPool(StringPoolCase_t)
00069450 t CStringPool::CStringPool(StringPoolCase_t)
00069ef0 t CStringPool::~CStringPool()
00069ef0 t CStringPool::~CStringPool()
00066130 t CVProfScope::~CVProfScope() [clone .isra.10]
00044cd0 t CVProfScope::~CVProfScope() [clone .isra.13]
00054c10 t CVProfScope::~CVProfScope() [clone .isra.18]
00076a30 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&)
00076b20 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&, FourVectors*)
00011e90 t SQDbgServer::EndElement(char const*)
00011820 t SQDbgServer::escape_xml(char const*)
000112d0 t SQDbgServer::ParseWatch(char const*, Watch&)
00012150 t SQDbgServer::SendUpdate()
000121a0 t SQDbgServer::Terminated()
000119f0 t SQDbgServer::EndDocument()
00010fc0 t SQDbgServer::IsConnected()
00012980 t SQDbgServer::RemoveWatch(int)
00012010 t SQDbgServer::BeginElement(char const*)
00011910 t SQDbgServer::SuperVerbose()
00012b50 t SQDbgServer::AddBreakpoint(BreakPoint&)
000113b0 t SQDbgServer::BreakExecution()
00011090 t SQDbgServer::FindBreakpoint(int, char const*)
00011a10 t SQDbgServer::SerializeState()
000111e0 t SQDbgServer::ParseBreakpoint(char const*, BreakPoint&)
00011370 t SQDbgServer::ParseRemoveWatch(char const*, int&)
00012670 t SQDbgServer::RemoveBreakpoint(BreakPoint&)
00011400 t SQDbgServer::SetErrorHandlers()
000124f0 t SQDbgServer::Hook(int, int, char const*, char const*)
000114c0 t SQDbgServer::Init()
000123d0 t SQDbgServer::Break(int, char const*, char const*, char const*)
00011060 t SQDbgServer::ReadMsg()
00011e40 t SQDbgServer::AddWatch(Watch&)
00011070 t SQDbgServer::BusyWait()
00012bf0 t SQDbgServer::ParseMsg(char const*)
00012260 t SQDbgServer::Attribute(char const*, char const*)
00011990 t SQDbgServer::SendChunk(char const*)
00011cf0 t SQDbgServer::SQDbgServer(SQVM*)
00011cf0 t SQDbgServer::SQDbgServer(SQVM*)
00011bd0 t SQDbgServer::~SQDbgServer()
00011bd0 t SQDbgServer::~SQDbgServer()
0003a7b0 t SQDelegable::SetDelegate(SQTable*)
0003a240 t SQDelegable::GetMetaMethod(SQVM*, SQMetaMethod, SQObjectPtr&)
0003d8c0 t SQDelegable::~SQDelegable()
0003d7d0 t SQDelegable::~SQDelegable()
0003d7d0 t SQDelegable::~SQDelegable()
00034cb0 t SQFuncState::BuildProto()
00033bf0 t SQFuncState::IsConstant(tagSQObject const&, tagSQObject&)
00033880 t SQFuncState::PushTarget(int)
000339f0 t SQFuncState::CountOuters(int)
00034bb0 t SQFuncState::CreateTable()
000334a0 t SQFuncState::GetConstant(tagSQObject const&)
00033910 t SQFuncState::GetUpTarget(int)
000349b0 t SQFuncState::AddLineInfos(int, bool, bool)
00034490 t SQFuncState::AddParameter(tagSQObject const&)
00034ac0 t SQFuncState::CreateString(char const*, int)
000339e0 t SQFuncState::GetStackSize()
00033a40 t SQFuncState::SetStackSize(int)
000337b0 t SQFuncState::AllocStackPos()
00034580 t SQFuncState::DiscardTarget()
00035e60 t SQFuncState::PopChildState()
000345f0 t SQFuncState::AddInstruction(SQInstruction&)
00035840 t SQFuncState::PushChildState(SQSharedState*)
00033e00 t SQFuncState::GetLocalVariable(tagSQObject const&)
00033e90 t SQFuncState::GetOuterVariable(tagSQObject const&)
00033e60 t SQFuncState::MarkLocalAsOuter(int)
00033d10 t SQFuncState::PushLocalVariable(tagSQObject const&)
00033610 t SQFuncState::GetNumericConstant(float)
00033680 t SQFuncState::GetNumericConstant(int)
00033750 t SQFuncState::SetIntructionParam(int, int, int)
000336f0 t SQFuncState::SetIntructionParams(int, int, int, int, int)
00033480 t SQFuncState::Error(char const*)
00033ce0 t SQFuncState::IsLocal(unsigned int)
00033950 t SQFuncState::PopTarget()
00033930 t SQFuncState::TopTarget()
00035410 t SQFuncState::SQFuncState(SQSharedState*, SQFuncState*, void (*)(void*, char const*), void*)
00035410 t SQFuncState::SQFuncState(SQSharedState*, SQFuncState*, void (*)(void*, char const*), void*)
00035910 t SQFuncState::~SQFuncState()
00035910 t SQFuncState::~SQFuncState()
0004ebb0 t SQGenerator::Kill()
0003a130 t SQGenerator::Mark(SQCollectable**)
0003a830 t SQGenerator::Yield(SQVM*, int)
0003ad10 t SQGenerator::Resume(SQVM*, SQObjectPtr&)
0003d840 t SQGenerator::GetType()
00039d60 t SQGenerator::Iterate(CSQStateIterator*)
0003d920 t SQGenerator::Release()
0003dea0 t SQGenerator::Finalize()
0003eaa0 t SQGenerator::~SQGenerator()
0003e830 t SQGenerator::~SQGenerator()
0003e830 t SQGenerator::~SQGenerator()
0003e3d0 t SQObjectPtr::operator=(SQObjectPtr const&)
0001f5c0 t SQObjectPtr::~SQObjectPtr()
0001f5c0 t SQObjectPtr::~SQObjectPtr()
0005e8a0 t CEmptyConVar::SetValue(float)
0005e8c0 t CEmptyConVar::SetValue(int)
0005e880 t CEmptyConVar::SetValue(char const*)
0005e930 t CEmptyConVar::~CEmptyConVar()
0005e910 t CEmptyConVar::~CEmptyConVar()
0005e910 t CEmptyConVar::~CEmptyConVar()
         U CThreadEvent::Set()
         U CThreadEvent::CThreadEvent(bool)
0005b820 t CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::CUtlHashFast()
0005b820 t CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::CUtlHashFast()
0005b5c0 t CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::~CUtlHashFast()
0005b5c0 t CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::~CUtlHashFast()
0005bdc0 t CVariantBase<CVariantDefaultAllocator>::ConvertToCopiedData(bool) [clone .part.22] [clone .constprop.27]
00075c30 t fourplanes_t::Get2Planes(VPlane*)
00075be0 t fourplanes_t::Get4Planes(VPlane*)
00075b80 t fourplanes_t::Set2Planes(VPlane const*)
00075b20 t fourplanes_t::Set4Planes(VPlane const*)
00075a30 t fourplanes_t::ComputeSignbits()
00075ad0 t fourplanes_t::SetPlane(int, Vector const&, float)
0005ed30 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
0005ed30 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
0003a740 t SQRefCounted::GetWeakRef(tagSQObjectType)
0001f560 t SQRefCounted::Iterate(CSQStateIterator*)
00039b30 t SQRefCounted::~SQRefCounted()
00039b00 t SQRefCounted::~SQRefCounted()
00039b00 t SQRefCounted::~SQRefCounted()
         U CThreadRWLock::UnlockWrite()
         U CThreadRWLock::WaitForRead()
         U CThreadRWLock::LockForWrite()
00026fb0 t SQClassMember::~SQClassMember()
00026fb0 t SQClassMember::~SQClassMember()
0003f390 t SQCollectable::AddToChain(SQCollectable**, SQCollectable*)
0003f3c0 t SQCollectable::RemoveFromChain(SQCollectable**, SQCollectable*)
0003d290 t SQCollectable::UnMark()
0001f590 t SQCollectable::~SQCollectable()
0001f570 t SQCollectable::~SQCollectable()
0001f570 t SQCollectable::~SQCollectable()
0003f300 t SQSharedState::MarkObject(SQObjectPtr&, SQCollectable**)
0003f400 t SQSharedState::GetScratchPad(int)
0003f210 t SQSharedState::IterateObject(CSQStateIterator*, SQObjectPtr&, char const*)
0003f690 t SQSharedState::CollectGarbage(SQVM*)
00043690 t SQSharedState::ResurrectUnreachable(SQVM*)
0003f170 t SQSharedState::GetMetaMethodIdxByName(SQObjectPtr const&)
000998c0 d SQSharedState::_array_default_delegate_funcz
00099560 d SQSharedState::_class_default_delegate_funcz
00099a20 d SQSharedState::_table_default_delegate_funcz
000997a0 d SQSharedState::_handle_default_delegate_funcz
000997c0 d SQSharedState::_number_default_delegate_funcz
00099820 d SQSharedState::_string_default_delegate_funcz
00099620 d SQSharedState::_thread_default_delegate_funcz
000996e0 d SQSharedState::_closure_default_delegate_funcz
000994a0 d SQSharedState::_weakref_default_delegate_funcz
000994e0 d SQSharedState::_instance_default_delegate_funcz
000996a0 d SQSharedState::_generator_default_delegate_funcz
00099780 d SQSharedState::_utlstringtoken_default_delegate_funcz
00040cd0 t SQSharedState::Init()
0003f740 t SQSharedState::Iterate(SQVM*, CSQStateIterator*)
0003f560 t SQSharedState::RunMark(SQVM*, SQCollectable**)
0003fff0 t SQSharedState::SQSharedState()
0003fff0 t SQSharedState::SQSharedState()
00040180 t SQSharedState::~SQSharedState()
00040180 t SQSharedState::~SQSharedState()
00040c60 t SQStringTable::AllocNodes(int)
000434b0 t SQStringTable::Add(char const*, int)
00043620 t SQStringTable::Remove(SQString*)
00043430 t SQStringTable::Resize(int)
00040ca0 t SQStringTable::SQStringTable(SQSharedState*)
00040ca0 t SQStringTable::SQStringTable(SQSharedState*)
00040160 t SQStringTable::~SQStringTable()
00040160 t SQStringTable::~SQStringTable()
0005c040 t CBaseAppSystem<IScriptManager>::Disconnect()
0005c020 t CBaseAppSystem<IScriptManager>::QueryInterface(char const*)
0005c050 t CBaseAppSystem<IScriptManager>::Init()
0005c030 t CBaseAppSystem<IScriptManager>::Connect(void* (*)(char const*, int*))
0005c060 t CBaseAppSystem<IScriptManager>::Shutdown()
0005d2e0 t ConCommandBase::CopyString(char const*)
0005c7d0 t ConCommandBase::RemoveFlags(int)
0009f1e0 b ConCommandBase::s_pAccessor
0009f1e4 b ConCommandBase::s_pConCommandBases
0005c770 t ConCommandBase::Init()
0005c700 t ConCommandBase::Create(char const*, char const*, int)
0005d2d0 t ConCommandBase::GetNext()
0005c7c0 t ConCommandBase::AddFlags(int)
0005d2a0 t ConCommandBase::Shutdown()
0005d280 t ConCommandBase::ConCommandBase(char const*, char const*, int)
0005d250 t ConCommandBase::ConCommandBase()
0005d280 t ConCommandBase::ConCommandBase(char const*, char const*, int)
0005d250 t ConCommandBase::ConCommandBase()
0005ca80 t ConCommandBase::~ConCommandBase()
0005c6d0 t ConCommandBase::~ConCommandBase()
0005c6d0 t ConCommandBase::~ConCommandBase()
0005c3e0 t CScriptManager::CreateVM(ScriptLanguage_t)
0005c0f0 t CScriptManager::DestroyVM(IScriptVM*)
0005b940 t CUtlLinkedList<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int> > >::AllocInternal(bool)
0005bb10 t CUtlLinkedList<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int> > >::Unlink(int)
0005b410 t CUtlLinkedList<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int> > >::RemoveAll()
0005b0b0 t CScopedIterator::EndContained()
0005b100 t CScopedIterator::BeginContained()
0005b2c0 t CScopedIterator::Key(SQObjectPtr const&)
0005b1c0 t CScopedIterator::Value(SQObjectPtr const&)
0005b160 t CScopedIterator::PsuedoKey(char const*)
0005c0a0 t CTier1AppSystem<IScriptManager, 0>::Disconnect()
0005c130 t CTier1AppSystem<IScriptManager, 0>::Init()
0005c0c0 t CTier1AppSystem<IScriptManager, 0>::Connect(void* (*)(char const*, int*))
0005c070 t CTier1AppSystem<IScriptManager, 0>::Shutdown()
00065dd0 t CUtlBinaryBlock::Set(void const*, int)
00065a30 t CUtlBinaryBlock::SetLength(int)
00066020 t CUtlBinaryBlock::operator=(CUtlBinaryBlock const&)
00065820 t CUtlBinaryBlock::CUtlBinaryBlock(int, int)
00065880 t CUtlBinaryBlock::CUtlBinaryBlock(void const*, int)
00065860 t CUtlBinaryBlock::CUtlBinaryBlock(void*, int, int)
00066080 t CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
00065820 t CUtlBinaryBlock::CUtlBinaryBlock(int, int)
00065880 t CUtlBinaryBlock::CUtlBinaryBlock(void const*, int)
00065860 t CUtlBinaryBlock::CUtlBinaryBlock(void*, int, int)
00066080 t CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
0005b780 t CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int> >::Grow(int)
00054ec0 t CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int> >::Purge() [clone .isra.75]
00066fd0 t CUtlSymbolTable::AddString(char const*)
00066cb0 t CUtlSymbolTable::RemoveAll()
00066300 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
00066300 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
00066d10 t CUtlSymbolTable::~CUtlSymbolTable()
00066d10 t CUtlSymbolTable::~CUtlSymbolTable()
0003c090 t SQFunctionProto::Load(SQVM*, void*, int (*)(void*, void*, int), SQObjectPtr&)
0003a080 t SQFunctionProto::Mark(SQCollectable**)
0003b8c0 t SQFunctionProto::Save(SQVM*, void*, int (*)(void*, void*, int))
0003e570 t SQFunctionProto::Create(SQSharedState*, int, int, int, int, int, int, int, int)
0003b240 t SQFunctionProto::GetLine(SQInstruction*)
0003d810 t SQFunctionProto::GetType()
0003e040 t SQFunctionProto::Release()
0003dae0 t SQFunctionProto::Finalize()
0003b1a0 t SQFunctionProto::GetLocal(SQVM*, unsigned int, unsigned int, unsigned int)
0003b810 t SQFunctionProto::SQFunctionProto(SQSharedState*)
0003b810 t SQFunctionProto::SQFunctionProto(SQSharedState*)
0003a420 t SQFunctionProto::~SQFunctionProto()
0003a330 t SQFunctionProto::~SQFunctionProto()
0003a330 t SQFunctionProto::~SQFunctionProto()
00039f10 t SQNativeClosure::Mark(SQCollectable**)
0003d850 t SQNativeClosure::GetType()
00039c80 t SQNativeClosure::Iterate(CSQStateIterator*)
0003db90 t SQNativeClosure::Release()
0003d9c0 t SQNativeClosure::Finalize()
0003e2c0 t SQNativeClosure::~SQNativeClosure()
0003dd90 t SQNativeClosure::~SQNativeClosure()
0003dd90 t SQNativeClosure::~SQNativeClosure()
0005e840 t CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
0005f170 t CDllDemandLoader::GetFactory()
0005f1c0 t CDllDemandLoader::Unload()
0005f150 t CDllDemandLoader::CDllDemandLoader(char const*)
0005f150 t CDllDemandLoader::CDllDemandLoader(char const*)
0005f210 t CDllDemandLoader::~CDllDemandLoader()
0005f1f0 t CDllDemandLoader::~CDllDemandLoader()
0005f1f0 t CDllDemandLoader::~CDllDemandLoader()
         U CThreadSpinRWLock::UnlockRead()
         U CThreadSpinRWLock::LockForRead()
         U CThreadSpinRWLock::UnlockWrite()
         U CThreadSpinRWLock::SpinLockForWrite(unsigned int)
         U CThreadSyncObject::~CThreadSyncObject()
00064e50 t CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
00064f00 t CUtlInplaceBuffer::InplaceGetLinePtr()
00065610 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
00065610 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
00069570 t CCountedStringPool::FindString(char const*)
000696e0 t CCountedStringPool::SpewStrings()
00069750 t CCountedStringPool::SaveToBuffer(CUtlBuffer&)
000696c0 t CCountedStringPool::HandleToString(unsigned short)
0006a0a0 t CCountedStringPool::ReferenceString(char const*)
000694f0 t CCountedStringPool::FindStringHandle(char const*)
000695a0 t CCountedStringPool::DereferenceString(char const*)
0006a2f0 t CCountedStringPool::RestoreFromBuffer(CUtlBuffer&)
00069f40 t CCountedStringPool::ReferenceStringHandle(char const*)
000694c0 t CCountedStringPool::Hash(char const*)
0006a0d0 t CCountedStringPool::FreeAll()
0006aa90 t CCountedStringPool::CCountedStringPool(StringPoolCase_t)
0006aa90 t CCountedStringPool::CCountedStringPool(StringPoolCase_t)
0006a260 t CCountedStringPool::~CCountedStringPool()
0006a1a0 t CCountedStringPool::~CCountedStringPool()
0006a1a0 t CCountedStringPool::~CCountedStringPool()
00062870 t CUtlCharConversion::FindConversion(char const*, int*)
00062970 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00062970 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000656d0 t CUtlNoEscConversion::FindConversion(char const*, int*)
0005dd10 t SplitScreenConVarRef::Init(char const*, bool)
0005dea0 t SplitScreenConVarRef::SplitScreenConVarRef(IConVar*)
0005de70 t SplitScreenConVarRef::SplitScreenConVarRef(char const*)
0005de60 t SplitScreenConVarRef::SplitScreenConVarRef(char const*, bool)
0005dea0 t SplitScreenConVarRef::SplitScreenConVarRef(IConVar*)
0005de70 t SplitScreenConVarRef::SplitScreenConVarRef(char const*)
0005de60 t SplitScreenConVarRef::SplitScreenConVarRef(char const*, bool)
00062830 t CUtlCStringConversion::FindConversion(char const*, int*)
00062a70 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00062a70 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00067560 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
00067560 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
00050370 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
00050350 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
00050350 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
00066b80 t CUtlFilenameSymbolTable::SpewStrings()
000667a0 t CUtlFilenameSymbolTable::FindFileName(char const*)
00066bc0 t CUtlFilenameSymbolTable::SaveToBuffer(CUtlBuffer&)
000668c0 t CUtlFilenameSymbolTable::FindOrAddFileName(char const*)
00066c00 t CUtlFilenameSymbolTable::RestoreFromBuffer(CUtlBuffer&)
00066aa0 t CUtlFilenameSymbolTable::String(void* const&, char*, int)
00066b70 t CUtlFilenameSymbolTable::RemoveAll()
0005c310 t ScriptFunctionBinding_t::~ScriptFunctionBinding_t()
0005c310 t ScriptFunctionBinding_t::~ScriptFunctionBinding_t()
0005c200 t CNonMemberScriptBinding2<float (*)(float, float), float, float, float>::Call(void*, void*, CVariantBase<CVariantDefaultAllocator>*, int, CVariantBase<CVariantDefaultAllocator>*)
0005c170 t CNonMemberScriptBinding2<int (*)(int, int), int, int, int>::Call(void*, void*, CVariantBase<CVariantDefaultAllocator>*, int, CVariantBase<CVariantDefaultAllocator>*)
00057620 t CSquirrelMetamethodDelegateImpl::SqGetMetamethodThunk(SQVM*)
00058cb0 t CSquirrelMetamethodDelegateImpl::CSquirrelMetamethodDelegateImpl(CSquirrelVM*, tagSQObject*, char const*, IScriptVM::ISquirrelMetamethodDelegate*, bool)
00058cb0 t CSquirrelMetamethodDelegateImpl::CSquirrelMetamethodDelegateImpl(CSquirrelVM*, tagSQObject*, char const*, IScriptVM::ISquirrelMetamethodDelegate*, bool)
00058d10 t CSquirrelMetamethodDelegateImpl::~CSquirrelMetamethodDelegateImpl()
00058d10 t CSquirrelMetamethodDelegateImpl::~CSquirrelMetamethodDelegateImpl()
0004dd60 t SQVM::CallNative(SQNativeClosure*, int, int, SQObjectPtr&, bool&)
000458e0 t SQVM::CLOSURE_OP(SQObjectPtr&, SQFunctionProto*)
0004a0b0 t SQVM::DeleteSlot(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr&)
0004da90 t SQVM::EnterFrame(int, int, bool)
0004cda0 t SQVM::FOREACH_OP(SQObjectPtr&, SQObjectPtr&, SQObjectPtr&, SQObjectPtr&, int, int, int&)
0004d970 t SQVM::LeaveFrame()
0004c0d0 t SQVM::PLOCAL_INC(int, SQObjectPtr&, SQObjectPtr&, SQObjectPtr&)
00045bd0 t SQVM::CloseOuters(SQObjectPtr*)
0004c7f0 t SQVM::FallBackGet(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr&)
0004c1f0 t SQVM::FallBackSet(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr const&)
00032dc0 t SQVM::PrintObjVal(SQObjectPtr const&)
00032c90 t SQVM::Raise_Error(char const*, ...)
00032d50 t SQVM::Raise_Error(SQObjectPtr const&)
0004d550 t SQVM::CallDebugHook(int, int)
0004a030 t SQVM::CallMetaMethod(SQObjectPtr&, SQMetaMethod, int, SQObjectPtr&)
00032ed0 t SQVM::Raise_IdxError(SQObjectPtr const&)
00045ba0 t SQVM::RelocateOuters()
0004bbb0 t SQVM::ArithMetaMethod(int, SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr&)
0004e3e0 t SQVM::CallErrorHandler(SQObjectPtr&)
00032f50 t SQVM::Raise_CompareError(tagSQObject const&, tagSQObject const&)
00045470 t SQVM::CreateClassInstance(SQClass*, SQObjectPtr&, SQObjectPtr&)
000330e0 t SQVM::Raise_ParamTypeError(int, int, int)
00045560 t SQVM::InvokeDefaultDelegate(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr&)
0004c9d0 t SQVM::Get(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr&, bool, int)
00046000 t SQVM::Pop(int)
00045fa0 t SQVM::Pop()
0004c420 t SQVM::Set(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr const&, int)
00046140 t SQVM::Top()
000462c0 t SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)
00049c50 t SQVM::Call(SQObjectPtr&, int, int, SQObjectPtr&, unsigned int)
00044f40 t SQVM::Init(SQVM*, int)
0003cef0 t SQVM::Mark(SQCollectable**)
000460d0 t SQVM::Push(SQObjectPtr const&)
00044e00 t SQVM::BW_OP(unsigned int, SQObjectPtr&, SQObjectPtr const&, SQObjectPtr const&)
0004a900 t SQVM::Clone(SQObjectPtr const&, SQObjectPtr&)
000461a0 t SQVM::GetAt(int)
00046180 t SQVM::GetUp(int)
0004b7f0 t SQVM::CMP_OP(CmpOP, SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr&)
0004b9b0 t SQVM::NEG_OP(SQObjectPtr&, SQObjectPtr const&)
0004b4b0 t SQVM::ObjCmp(SQObjectPtr const&, SQObjectPtr const&, int&)
00046160 t SQVM::PopGet()
00045ec0 t SQVM::Remove(int)
0004e280 t SQVM::Return(int, int, SQObjectPtr&)
0004acd0 t SQVM::TypeOf(SQObjectPtr const&, SQObjectPtr&)
000469b0 t SQVM::Execute(SQObjectPtr&, int, int, SQObjectPtr&, unsigned int, SQVM::ExecutionType)
0004eba0 t SQVM::GetType()
00045390 t SQVM::IsEqual(SQObjectPtr const&, SQObjectPtr const&, bool&)
00045440 t SQVM::IsFalse(SQObjectPtr&)
0003d2a0 t SQVM::Iterate(CSQStateIterator*)
0004a300 t SQVM::NewSlot(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr const&, bool)
00044cb0 t SQVM::Release()
00045340 t SQVM::Suspend()
0004bd30 t SQVM::ARITH_OP(unsigned int, SQObjectPtr&, SQObjectPtr const&, SQObjectPtr const&)
0004e490 t SQVM::CLASS_OP(SQObjectPtr&, int, int)
0004d370 t SQVM::DerefInc(int, SQObjectPtr&, SQObjectPtr&, SQObjectPtr&, SQObjectPtr&, bool, int)
00045c60 t SQVM::Finalize()
0004a730 t SQVM::NewSlotA(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr const&, bool, bool)
00046070 t SQVM::PushNull()
0004ae10 t SQVM::ToString(SQObjectPtr const&, SQObjectPtr&)
00045710 t SQVM::FindOuter(SQObjectPtr&, SQObjectPtr*)
00046310 t SQVM::StartCall(SQClosure*, int, int, int, bool)
0004b310 t SQVM::StringCat(SQObjectPtr const&, SQObjectPtr const&, SQObjectPtr&)
0004e710 t SQVM::SQVM(SQSharedState*)
0004e710 t SQVM::SQVM(SQSharedState*)
0004eb80 t SQVM::~SQVM()
0004e8e0 t SQVM::~SQVM()
0004e8e0 t SQVM::~SQVM()
0005cfa0 t ConVar::ClampValue(float&)
0005dbb0 t ConVar::SetDefault(char const*)
0005ccb0 t ConVar::InternalSetValue(char const*)
0005ce10 t ConVar::ChangeStringValue(char const*, float)
0005cfe0 t ConVar::InternalSetIntValue(int)
0005dac0 t ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float))
0005c960 t ConVar::InternalSetColorValue(Color)
0005caa0 t ConVar::InternalSetFloatValue(float)
0005c940 t ConVar::Init()
0005cba0 t ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0005db00 t ConVar::Revert()
0005c8a0 t ConVar::AddFlags(int)
0005ca40 t ConVar::SetValue(Color)
0005c9e0 t ConVar::SetValue(float)
0005ca10 t ConVar::SetValue(int)
0005c9b0 t ConVar::SetValue(char const*)
0005d7a0 t ConVar::ConVar(char const*, char const*, int)
0005d840 t ConVar::ConVar(char const*, char const*, int, char const*)
0005d8e0 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0005da20 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0005d980 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0005d7a0 t ConVar::ConVar(char const*, char const*, int)
0005d840 t ConVar::ConVar(char const*, char const*, int, char const*)
0005d8e0 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0005da20 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0005d980 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0005cf20 t ConVar::~ConVar()
0005cee0 t ConVar::~ConVar()
0005cee0 t ConVar::~ConVar()
000150b0 t SQBlob::EOS()
000150f0 t SQBlob::Len()
00015100 t SQBlob::Read(void*, int)
00015180 t SQBlob::Seek(int, int)
000150e0 t SQBlob::Tell()
000150d0 t SQBlob::Flush()
00015220 t SQBlob::Write(void*, int)
000150a0 t SQBlob::IsValid()
000151f0 t SQBlob::~SQBlob()
00015160 t SQBlob::~SQBlob()
00015160 t SQBlob::~SQBlob()
0005b090 t CDefOps<void*>::LessFunc(void* const&, void* const&)
0003a1c0 t SQArray::Mark(SQCollectable**)
0004ef80 t SQArray::Clone()
0004edc0 t SQArray::Create(SQSharedState*, int)
0003b090 t SQArray::Extend(SQArray const*)
0003d7c0 t SQArray::GetType()
00039dd0 t SQArray::Iterate(CSQStateIterator*)
0003d9a0 t SQArray::Release()
0003df90 t SQArray::Finalize()
0003e9b0 t SQArray::~SQArray()
0003e750 t SQArray::~SQArray()
0003e750 t SQArray::~SQArray()
000261d0 t SQClass::GetAttributes(SQObjectPtr const&, SQObjectPtr&)
000260d0 t SQClass::SetAttributes(SQObjectPtr const&, SQObjectPtr const&)
000263e0 t SQClass::CreateInstance()
0003d0d0 t SQClass::Mark(SQCollectable**)
00025fa0 t SQClass::Next(SQObjectPtr const&, SQObjectPtr&, SQObjectPtr&)
00026ef0 t SQClass::GetType()
0003d470 t SQClass::Iterate(CSQStateIterator*)
00025750 t SQClass::NewSlot(SQSharedState*, SQObjectPtr const&, SQObjectPtr const&, bool)
00026f10 t SQClass::Release()
00025410 t SQClass::Finalize()
00026900 t SQClass::SQClass(SQSharedState*, SQClass*)
00026900 t SQClass::SQClass(SQSharedState*, SQClass*)
000268e0 t SQClass::~SQClass()
00026660 t SQClass::~SQClass()
00026660 t SQClass::~SQClass()
00038ce0 t SQLexer::ReadNumber()
00038430 t SQLexer::ReadString(int, bool)
00038310 t SQLexer::LexLineComment()
00038270 t SQLexer::LexBlockComment()
00039300 t SQLexer::Lex()
00036090 t SQLexer::Init(SQSharedState*, int (*)(void*), void*, void (*)(void*, char const*), void*)
00036040 t SQLexer::Next()
00036020 t SQLexer::Error(char const*)
000391f0 t SQLexer::ReadID()
00038110 t SQLexer::Tok2Str(int)
00038340 t SQLexer::GetIDType(char*)
00035fa0 t SQLexer::SQLexer()
00035fa0 t SQLexer::SQLexer()
00035fc0 t SQLexer::~SQLexer()
00035fc0 t SQLexer::~SQLexer()
00039e90 t SQOuter::Mark(SQCollectable**)
0003d830 t SQOuter::GetType()
0003d940 t SQOuter::Release()
0003db40 t SQOuter::Finalize()
0003e200 t SQOuter::~SQOuter()
0003dce0 t SQOuter::~SQOuter()
0003dce0 t SQOuter::~SQOuter()
00043980 t SQTable::AllocNodes(int)
00044810 t SQTable::_ClearNodes()
00043bd0 t SQTable::GetIncludingWeakref(SQObjectPtr const&, SQObjectPtr&)
00043aa0 t SQTable::Get(SQObjectPtr const&, SQObjectPtr&)
000446c0 t SQTable::Set(SQObjectPtr const&, SQObjectPtr const&)
0003d010 t SQTable::Mark(SQCollectable**)
00044430 t SQTable::Next(bool, SQObjectPtr const&, SQObjectPtr&, SQObjectPtr&)
000448f0 t SQTable::Clear()
00044560 t SQTable::Clone()
00044920 t SQTable::Append(SQTable*)
00044150 t SQTable::Rehash(bool)
000442e0 t SQTable::Remove(SQObjectPtr const&)
00044a30 t SQTable::GetType()
0003d380 t SQTable::Iterate(CSQStateIterator*)
00043ce0 t SQTable::NewSlot(SQObjectPtr const&, SQObjectPtr const&)
00044a40 t SQTable::Release()
000448c0 t SQTable::Finalize()
00043a00 t SQTable::SQTable(SQSharedState*, int)
00043a00 t SQTable::SQTable(SQSharedState*, int)
00044b70 t SQTable::~SQTable()
00044a60 t SQTable::~SQTable()
00044a60 t SQTable::~SQTable()
0005d500 t CCommand::DefaultBreakSet()
0005d4e0 t CCommand::Reset()
0005e560 t CCommand::Tokenize(char const*, characterset_t*)
0005d3a0 t CCommand::CCommand(int, char const**)
0005d350 t CCommand::CCommand()
0005d3a0 t CCommand::CCommand(int, char const**)
0005d350 t CCommand::CCommand()
00050340 t CFmtStrN<256>::InitQuietTruncation()
000503a0 t CFmtStrN<256>::CFmtStrN(char const*, ...)
000503a0 t CFmtStrN<256>::CFmtStrN(char const*, ...)
0003fa40 t RefTable::AllocNodes(unsigned int)
0003ff50 t RefTable::GetRefCount(tagSQObject&)
0003f9b0 t RefTable::Add(unsigned int, tagSQObject&)
0003fc30 t RefTable::Get(tagSQObject&, unsigned int&, RefTable::RefNode**, bool)
0003f510 t RefTable::Mark(SQCollectable**)
0003ff90 t RefTable::AddRef(tagSQObject&)
0003faf0 t RefTable::Resize(unsigned int)
0003fe20 t RefTable::Release(tagSQObject&)
0003f480 t RefTable::Finalize()
0003ffd0 t RefTable::RefTable()
0003ffd0 t RefTable::RefTable()
0003f4f0 t RefTable::~RefTable()
0003f4f0 t RefTable::~RefTable()
0003a670 t SQString::Next(SQObjectPtr const&, SQObjectPtr&, SQObjectPtr&)
0003a650 t SQString::Create(SQSharedState*, char const*, int)
0003a280 t SQString::Release()
0003d8f0 t SQString::~SQString()
0003d790 t SQString::~SQString()
0003d790 t SQString::~SQString()
000332e0 t sqvector<SQOuterVar>::~sqvector() [clone .part.13]
0001f600 t sqvector<SQObjectPtr>::~sqvector()
0001f600 t sqvector<SQObjectPtr>::~sqvector()
00027040 t sqvector<SQClassMember>::~sqvector()
00027040 t sqvector<SQClassMember>::~sqvector()
00035f30 t sqvector<SQLocalVarInfo>::~sqvector()
00035f30 t sqvector<SQLocalVarInfo>::~sqvector()
0004f150 t sqvector<SQExceptionTrap>::~sqvector()
0004f150 t sqvector<SQExceptionTrap>::~sqvector()
0001f680 t sqvector<int>::~sqvector()
0001f680 t sqvector<int>::~sqvector()
0004eca0 t sqvector<SQVM::CallInfo>::resize(unsigned int, SQVM::CallInfo const&)
00044d30 t sqvector<SQVM::CallInfo>::~sqvector() [clone .part.27]
0005dbd0 t ConVarRef::Init(char const*, bool)
0005dcd0 t ConVarRef::ConVarRef(IConVar*)
0005dca0 t ConVarRef::ConVarRef(char const*)
0005dc90 t ConVarRef::ConVarRef(char const*, bool)
0005dcd0 t ConVarRef::ConVarRef(IConVar*)
0005dca0 t ConVarRef::ConVarRef(char const*)
0005dc90 t ConVarRef::ConVarRef(char const*, bool)
00075cc0 t Frustum_t::SetPlane(int, Vector const&, float)
00075e30 t Frustum_t::GetPlanes(VPlane*)
00075d40 t Frustum_t::SetPlanes(VPlane const*)
00075c60 t Frustum_t::Frustum_t()
00075c60 t Frustum_t::Frustum_t()
000265d0 t SQClosure::GetVprofNodeName()
0003cc60 t SQClosure::Load(SQVM*, void*, int (*)(void*, void*, int), SQObjectPtr&)
00039f90 t SQClosure::Mark(SQCollectable**)
0003bfa0 t SQClosure::Save(SQVM*, void*, int (*)(void*, void*, int))
0003d820 t SQClosure::GetType()
00039cd0 t SQClosure::Iterate(CSQStateIterator*)
0003dc00 t SQClosure::Release()
0003da20 t SQClosure::Finalize()
00039c30 t SQClosure::~SQClosure()
00039b60 t SQClosure::~SQClosure()
00039b60 t SQClosure::~SQClosure()
00039c50 t SQWeakRef::Release()
0003d890 t SQWeakRef::~SQWeakRef()
0003d860 t SQWeakRef::~SQWeakRef()
0003d860 t SQWeakRef::~SQWeakRef()
         U operator new[](unsigned int)@@GLIBCXX_3.4
0005c830 t ConCommand::IsCommand() const
0006ad30 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
0006ac00 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Find(char const* const&) const
000659b0 t CUtlString::Get() const
00065990 t CUtlString::Length() const
000659d0 t CUtlString::operator char const*() const
00065a00 t CUtlString::operator==(char const*) const
000659f0 t CUtlString::operator==(CUtlString const&) const
00066ec0 t CUtlSymbol::String() const
00066fa0 t CUtlSymbol::operator==(char const*) const
000694b0 t CStringPool::Count() const
0005e8e0 t CEmptyConVar::GetName() const
0005e900 t CEmptyConVar::IsFlagSet(int) const
00075a90 t fourplanes_t::GetPlane(int, Vector*, float*) const
0005c7f0 t ConCommandBase::GetHelpText() const
0005c800 t ConCommandBase::IsRegistered() const
0005c6f0 t ConCommandBase::GetDLLIdentifier() const
0005c790 t ConCommandBase::GetName() const
0005d2c0 t ConCommandBase::GetNext() const
0005c7e0 t ConCommandBase::GetFlags() const
0005c6e0 t ConCommandBase::IsCommand() const
0005c7a0 t ConCommandBase::IsFlagSet(int) const
000658a0 t CUtlBinaryBlock::Get(void*, int) const
000658e0 t CUtlBinaryBlock::operator==(CUtlBinaryBlock const&) const
00066710 t CUtlSymbolTable::FindPoolWithSpace(int) const
00066390 t CUtlSymbolTable::Find(char const*) const
00066200 t CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
00066760 t CUtlSymbolTable::String(CUtlSymbol) const
00062b50 t CUtlCharConversion::GetDelimiter() const
00062b40 t CUtlCharConversion::GetEscapeChar() const
00062b60 t CUtlCharConversion::GetDelimiterLength() const
00062b90 t CUtlCharConversion::GetConversionLength(char) const
00062b70 t CUtlCharConversion::GetConversionString(char) const
00062bb0 t CUtlCharConversion::MaxConversionLength() const
0005df60 t SplitScreenConVarRef::IsValid() const
00050300 t CSplitScreenAddedConVar::GetBaseName() const
00050330 t CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
0005dba0 t ConVar::GetDefault() const
0005c900 t ConVar::GetBaseName() const
0005c890 t ConVar::GetHelpText() const
0005db70 t ConVar::GetMaxValue() const
0005db60 t ConVar::GetMinValue() const
0005c8c0 t ConVar::IsRegistered() const
0005c920 t ConVar::GetSplitScreenPlayerSlot() const
0005db40 t ConVar::GetMax(float&) const
0005db20 t ConVar::GetMin(float&) const
0005db90 t ConVar::HasMax() const
0005db80 t ConVar::HasMin() const
0005c8e0 t ConVar::GetName() const
0005c880 t ConVar::GetFlags() const
0005c930 t ConVar::IsCommand() const
0005c860 t ConVar::IsFlagSet(int) const
0005d5a0 t CCommand::FindArgInt(char const*, int) const
0005d510 t CCommand::FindArg(char const*) const
0005dcf0 t ConVarRef::IsValid() const
00075f40 t Frustum_t::CullBoxCenterExtents(Vector const&, Vector const&) const
00075e90 t Frustum_t::CullBox(Vector const&, Vector const&) const
00075d00 t Frustum_t::GetPlane(int, Vector*, float*) const
000265a0 t SQClosure::GetFunctionName(char const*) const
         U std::string::_Rep::_M_destroy(std::allocator<char> const&)@@GLIBCXX_3.4
         U std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4
         U std::string::append(unsigned int, char)@@GLIBCXX_3.4
         U std::string::append(char const*, unsigned int)@@GLIBCXX_3.4
         U std::string::append(std::string const&)@@GLIBCXX_3.4
         U std::string::assign(char const*, unsigned int)@@GLIBCXX_3.4
         U std::string::assign(std::string const&)@@GLIBCXX_3.4
         U std::string::reserve(unsigned int)@@GLIBCXX_3.4
         U std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@@GLIBCXX_3.4
00013780 t std::vector<char, std::allocator<char> >::_M_fill_insert(__gnu_cxx::__normal_iterator<char*, std::vector<char, std::allocator<char> > >, unsigned int, char const&)
00013220 t std::_Rb_tree<BreakPoint, BreakPoint, std::_Identity<BreakPoint>, std::less<BreakPoint>, std::allocator<BreakPoint> >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, BreakPoint const&)
00013390 t std::_Rb_tree<BreakPoint, BreakPoint, std::_Identity<BreakPoint>, std::less<BreakPoint>, std::allocator<BreakPoint> >::_M_insert_unique(BreakPoint const&)
00013100 t std::_Rb_tree<BreakPoint, BreakPoint, std::_Identity<BreakPoint>, std::less<BreakPoint>, std::allocator<BreakPoint> >::_M_erase(std::_Rb_tree_node<BreakPoint>*)
000135d0 t std::_Rb_tree<Watch, Watch, std::_Identity<Watch>, std::less<Watch>, std::allocator<Watch> >::_M_insert_(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, Watch const&)
000136b0 t std::_Rb_tree<Watch, Watch, std::_Identity<Watch>, std::less<Watch>, std::allocator<Watch> >::_M_insert_unique(Watch const&)
00013190 t std::_Rb_tree<Watch, Watch, std::_Identity<Watch>, std::less<Watch>, std::allocator<Watch> >::_M_erase(std::_Rb_tree_node<Watch>*)
         U operator new(unsigned int)@@GLIBCXX_3.4
         U std::_Rb_tree_decrement(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
         U std::_Rb_tree_increment(std::_Rb_tree_node_base const*)@@GLIBCXX_3.4
         U std::__throw_length_error(char const*)@@GLIBCXX_3.4
         U std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
         U std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
         U std::terminate()@@GLIBCXX_3.4
0005e890 t non-virtual thunk to CEmptyConVar::SetValue(float)
0005e8b0 t non-virtual thunk to CEmptyConVar::SetValue(int)
0005e870 t non-virtual thunk to CEmptyConVar::SetValue(char const*)
0005ca30 t non-virtual thunk to ConVar::SetValue(Color)
0005c9d0 t non-virtual thunk to ConVar::SetValue(float)
0005ca00 t non-virtual thunk to ConVar::SetValue(int)
0005c9a0 t non-virtual thunk to ConVar::SetValue(char const*)
0005e8d0 t non-virtual thunk to CEmptyConVar::GetName() const
0005e8f0 t non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
000502f0 t non-virtual thunk to CSplitScreenAddedConVar::GetBaseName() const
00050320 t non-virtual thunk to CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
0005c8f0 t non-virtual thunk to ConVar::GetBaseName() const
0005c910 t non-virtual thunk to ConVar::GetSplitScreenPlayerSlot() const
0005c8d0 t non-virtual thunk to ConVar::GetName() const
0005c850 t non-virtual thunk to ConVar::IsFlagSet(int) const
0007f470 r typeinfo for ConCommand
0007f1a4 r typeinfo for IAppSystem
0007c3e4 r typeinfo for SQInstance
0007d214 r typeinfo for SQUserData
0007ecb4 r typeinfo for CSquirrelVM
0007d1c8 r typeinfo for SQDelegable
0007d280 r typeinfo for SQGenerator
0007f724 r typeinfo for CEmptyConVar
0007d198 r typeinfo for SQRefCounted
0007bdc4 r typeinfo for SQCollectable
0007f144 r typeinfo for CBaseAppSystem<IScriptManager>
0007f458 r typeinfo for ConCommandBase
0007f0a4 r typeinfo for CScriptManager
0007f184 r typeinfo for IScriptManager
0007eed4 r typeinfo for CScopedIterator
0007f108 r typeinfo for CTier0AppSystem<IScriptManager>
0007f0c4 r typeinfo for CTier1AppSystem<IScriptManager, 0>
0007d234 r typeinfo for SQFunctionProto
0007d2a0 r typeinfo for SQNativeClosure
0007f718 r typeinfo for CDefaultAccessor
0007f87c r typeinfo for CDllDemandLoader
0007e004 r typeinfo for CSQStateIterator
0007ffec r typeinfo for CCountedStringPool
0007fa68 r typeinfo for CUtlCharConversion
0007fac4 r typeinfo for CUtlNoEscConversion
0007f628 r typeinfo for ConVar_ServerBounded
0007fa88 r typeinfo for CUtlCStringConversion
0007e0ac r typeinfo for CSplitScreenAddedConVar
0007f74c r typeinfo for IConCommandBaseAccessor
0007dfbc r typeinfo for SQVM
0007f4a0 r typeinfo for ConVar
0007b078 r typeinfo for SQBlob
0007f6f8 r typeinfo for IConVar
0007d1f8 r typeinfo for SQArray
0007c3c8 r typeinfo for SQClass
0007d264 r typeinfo for SQOuter
0007d7f8 r typeinfo for SQTable
0007e174 r typeinfo for CFmtStrN<256>
0007b070 r typeinfo for SQStream
0007d1e0 r typeinfo for SQString
0007eecc r typeinfo for IScriptVM
0007d24c r typeinfo for SQClosure
0007d1ac r typeinfo for SQWeakRef
0007dd6c r typeinfo for SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)::CHackerator
0007f460 r typeinfo name for ConCommand
0007f1ac r typeinfo name for IAppSystem
0007c3d4 r typeinfo name for SQInstance
0007d204 r typeinfo name for SQUserData
0007eca4 r typeinfo name for CSquirrelVM
0007d1b8 r typeinfo name for SQDelegable
0007d270 r typeinfo name for SQGenerator
0007f754 r typeinfo name for CEmptyConVar
0007d188 r typeinfo name for SQRefCounted
0007bdd0 r typeinfo name for SQCollectable
0007f160 r typeinfo name for CBaseAppSystem<IScriptManager>
0007f444 r typeinfo name for ConCommandBase
0007f0b0 r typeinfo name for CScriptManager
0007f190 r typeinfo name for IScriptManager
0007eeeb r typeinfo name for CScopedIterator
0007f120 r typeinfo name for CTier0AppSystem<IScriptManager>
0007f0e0 r typeinfo name for CTier1AppSystem<IScriptManager, 0>
0007d220 r typeinfo name for SQFunctionProto
0007d28c r typeinfo name for SQNativeClosure
0007f739 r typeinfo name for CDefaultAccessor
0007f867 r typeinfo name for CDllDemandLoader
0007e00c r typeinfo name for CSQStateIterator
0007ffd4 r typeinfo name for CCountedStringPool
0007fa52 r typeinfo name for CUtlCharConversion
0007fad0 r typeinfo name for CUtlNoEscConversion
0007f700 r typeinfo name for ConVar_ServerBounded
0007fa70 r typeinfo name for CUtlCStringConversion
0007e090 r typeinfo name for CSplitScreenAddedConVar
0007f763 r typeinfo name for IConCommandBaseAccessor
0007dfb6 r typeinfo name for SQVM
0007f47c r typeinfo name for ConVar
0007b08e r typeinfo name for SQBlob
0007f730 r typeinfo name for IConVar
0007d1ec r typeinfo name for SQArray
0007c3be r typeinfo name for SQClass
0007d258 r typeinfo name for SQOuter
0007d7ef r typeinfo name for SQTable
0007e17c r typeinfo name for CFmtStrN<256>
0007b084 r typeinfo name for SQStream
0007d1d4 r typeinfo name for SQString
0007eee0 r typeinfo name for IScriptVM
0007d240 r typeinfo name for SQClosure
0007d1a0 r typeinfo name for SQWeakRef
0007dd80 r typeinfo name for SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)::CHackerator
0007f500 r vtable for ConCommand
0007c440 r vtable for SQInstance
0007d4c0 r vtable for SQUserData
0007ecc0 r vtable for CSquirrelVM
0007d300 r vtable for SQDelegable
0007d400 r vtable for SQGenerator
0007f660 r vtable for CEmptyConVar
0007d2c8 r vtable for SQRefCounted
0007bda0 r vtable for SQCollectable
0007f4c0 r vtable for ConCommandBase
0007f080 r vtable for CScriptManager
0007eeb0 r vtable for CScopedIterator
0007d380 r vtable for SQFunctionProto
0007d440 r vtable for SQNativeClosure
0007f638 r vtable for CDefaultAccessor
0007f888 r vtable for CDllDemandLoader
0007fff8 r vtable for CCountedStringPool
0007faa8 r vtable for CUtlCharConversion
0007fab8 r vtable for CUtlNoEscConversion
0007fa98 r vtable for CUtlCStringConversion
0007e0c0 r vtable for CSplitScreenAddedConVar
0007dfe0 r vtable for SQVM
0007f560 r vtable for ConVar
0007b040 r vtable for SQBlob
0007f600 r vtable for IConVar
0007d3c0 r vtable for SQArray
0007c400 r vtable for SQClass
0007d480 r vtable for SQOuter
0007d820 r vtable for SQTable
0007e168 r vtable for CFmtStrN<256>
0007b000 r vtable for SQStream
0007d2b0 r vtable for SQString
0007edc0 r vtable for IScriptVM
0007d340 r vtable for SQClosure
0007d2e0 r vtable for SQWeakRef
         U vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
0007dd50 r vtable for SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)::CHackerator
0009eb40 b IntToString(int)::temp
0007e1fc r QuatIterate(SQVM*)::results
0009f3a0 b V_pretifymem(float, int, bool)::output
0009f380 b V_pretifymem(float, int, bool)::current
0009f4c0 b V_pretifynum(long long)::output
0009f4a0 b V_pretifynum(long long)::current
0007e158 r QAngleIterate(SQVM*)::results
0007e26c r VectorIterate(SQVM*)::results
0007e2a8 r Vector2DIterate(SQVM*)::results
0007e2ec r Vector4DIterate(SQVM*)::results
00099ae0 d GetMetamethodIdentifier(SQMetaMethod)::pIdentifiers
000a0e38 b Bias(float, float)::lastExponent
000a09a4 b CUtlSymbol::Initialize()::symbolsInitialized
0009eec0 b SQCompiler::Error(char const*, ...)::temp
0009f0d4 b CSquirrelVM::ExecuteFunction(HSCRIPT__*, CVariantBase<CVariantDefaultAllocator>*, int, CVariantBase<CVariantDefaultAllocator>*, HSCRIPT__*, bool)::tm_fmt
0009f0d8 b CSquirrelVM::ExecuteFunction(HSCRIPT__*, CVariantBase<CVariantDefaultAllocator>*, int, CVariantBase<CVariantDefaultAllocator>*, HSCRIPT__*, bool)::tm_fmt
0009ee48 b SQDbgServer::SuperVerbose()::s_bVerbose
0009ec40 b SQDbgServer::ParseBreakpoint(char const*, BreakPoint&)::stemp
0009f160 b CScriptManager::CreateVM(ScriptLanguage_t)::binding
0009f1a0 b CScriptManager::CreateVM(ScriptLanguage_t)::binding
0009f0f8 b CUtlLinkedList<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int> > >::AllocInternal(bool)::__executeCount
0009f0fc b CUtlLinkedList<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CUtlHashFast<SQClass*, CUtlHashFastGenericHash>::HashFastData_t_<SQClass*>, int> > >::AllocInternal(bool)::__executeCount
000a09ac b CUtlSymbolTable::AddString(char const*)::tm_fmt
0007fb70 r CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
0009e655 d SplitScreenConVarRef::Init(char const*, bool)::bFirst
0009f020 b SQVM::CallNative(SQNativeClosure*, int, int, SQObjectPtr&, bool&)::tm_fmt
00044ca0 t SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)::CHackerator::EndContained()
00044c90 t SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)::CHackerator::BeginContained()
00044c80 t SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)::CHackerator::Key(SQObjectPtr const&)
0004b1d0 t SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)::CHackerator::Value(SQObjectPtr const&)
00044c70 t SQVM::FindAllClosuresForFunctionBySourceAndLineNumber(sqvector<SQObjectPtr>&, char const*, int)::CHackerator::PsuedoKey(char const*)
0009f024 b SQVM::Call(SQObjectPtr&, int, int, SQObjectPtr&, unsigned int)::tm_fmt
0009f050 b CFmtStrN<256>::CFmtStrN(char const*, ...)::scAsserted
0009e654 d ConVarRef::Init(char const*, bool)::bFirst
0009e6e2 d CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0009e646 d CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0009e6ec d CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
000a09a8 b CUtlSymbolTable::Find(char const*) const::tm_fmt
