         U abort@@GLIBC_2.0
         U access@@GLIBC_2.0
         U acosf@@GLIBC_2.0
         U acos@@GLIBC_2.0
001de30f t add_fdes
00263900 d adds.7496
         U asinf@@GLIBC_2.0
         U asin@@GLIBC_2.0
         U atan2f@@GLIBC_2.0
         U atan2@@GLIBC_2.0
         U atanf@@GLIBC_2.0
         U atan@@GLIBC_2.0
001de5ea t base_from_cb_data
001de042 t base_from_object
00263908 A __bss_start
         U cbrtf@@GLIBC_2.0
         U chdir@@GLIBC_2.0
         U chmod@@GLIBC_2.0
         U chown@@GLIBC_2.1
001de1f1 t classify_object_over_fdes
         U closedir@@GLIBC_2.0
         U CommandLine_Tier0
00263920 b completed.5793
         U cosf@@GLIBC_2.0
         U cos@@GLIBC_2.0
0010f910 T CreateInterface
001e1400 r CSWTCH.103
001e1420 r CSWTCH.105
001e8420 r CSWTCH.1130
001e85b0 r CSWTCH.1132
001e85bc r CSWTCH.1134
001e85d0 r CSWTCH.1136
001e85e0 r CSWTCH.1138
001e8600 r CSWTCH.1140
001e860c r CSWTCH.1142
001e861c r CSWTCH.1145
001e8638 r CSWTCH.1147
001e8640 r CSWTCH.1149
001e8648 r CSWTCH.1151
001e865c r CSWTCH.1153
001e8680 r CSWTCH.1155
001e8700 r CSWTCH.1157
001e8800 r CSWTCH.1159
001e8820 r CSWTCH.1162
001e8920 r CSWTCH.1164
001e892c r CSWTCH.1166
001e8940 r CSWTCH.1168
001e8968 r CSWTCH.1170
001e8970 r CSWTCH.1172
001e897c r CSWTCH.1174
001e8984 r CSWTCH.1176
001e8990 r CSWTCH.1178
001e1478 r CSWTCH.118
001e8998 r CSWTCH.1180
001e89a8 r CSWTCH.1182
001e89c0 r CSWTCH.1184
001e8a40 r CSWTCH.1186
001e8a48 r CSWTCH.1188
001e8a58 r CSWTCH.1190
001e8a60 r CSWTCH.1192
001e8a68 r CSWTCH.1194
001e8a80 r CSWTCH.1196
001e8ac0 r CSWTCH.1198
001e8ad0 r CSWTCH.1200
001e8ae4 r CSWTCH.1203
001e8af4 r CSWTCH.1205
001e8b00 r CSWTCH.1208
001e2c00 r CSWTCH.301
0025e314 d __CTOR_END__
0025e000 d __CTOR_LIST__
00268dc8 B cvar
00267420 b cv_phys_enable_experimental_optimizations
002673c0 b cv_phys_enable_PIX_counters
00267480 b cv_phys_enable_simd_optimizations
         U __cxa_atexit@@GLIBC_2.1.3
         w __cxa_finalize@@GLIBC_2.1.3
         U __cxa_guard_abort@@CXXABI_1.3
         U __cxa_guard_acquire@@CXXABI_1.3
         U __cxa_guard_release@@CXXABI_1.3
         U __cxa_pure_virtual@@CXXABI_1.3
001df24d t __deregister_frame
001df244 t __deregister_frame_info
001df16e t __deregister_frame_info_bases
         U DevMsg
         U dlclose@@GLIBC_2.0
         U dlerror@@GLIBC_2.0
         U dl_iterate_phdr@@GLIBC_2.2.4
         U dlopen@@GLIBC_2.1
         U dlsym@@GLIBC_2.0
001df490 t __do_global_ctors_aux
0004c6d8 t __do_global_dtors_aux
0025e480 d __dso_handle
0025e31c d __DTOR_END__
00263924 b dtor_idx.5795
0025e318 d __DTOR_LIST__
0027dda4 b dwarf_reg_size_table
0025e324 a _DYNAMIC
         U __dynamic_cast@@CXXABI_1.3
00263908 A _edata
0027deb8 A _end
         U __errno_location@@GLIBC_2.0
         U Error
001dc486 t execute_cfa_program
001dcde9 t execute_stack_op
         U exit@@GLIBC_2.0
         U expf@@GLIBC_2.0
         U fclose@@GLIBC_2.1
001de46e t fde_mixed_encoding_compare
001de3f1 t fde_single_encoding_compare
001ddece t fde_unencoded_compare
         U feof@@GLIBC_2.0
         U ferror@@GLIBC_2.0
         U fflush@@GLIBC_2.0
         U fgets@@GLIBC_2.0
001df4b8 T _fini
         U fopen64@@GLIBC_2.1
         U fopen@@GLIBC_2.1
00203590 r Four_2ToThe21s
00203580 r Four_2ToThe22s
00203570 r Four_2ToThe23s
00203560 r Four_2ToThe24s
00203520 r Four_Epsilons
00203510 r Four_FLT_MAX
002035c0 r Four_Fours
00203500 r Four_Negative_FLT_MAX
002035a0 r Four_NegativeOnes
002035f0 r Four_Ones
002035b0 r Four_Origin
00203530 r Four_Point225s
00203610 r Four_PointFives
00203550 r Four_Thirds
002035d0 r Four_Threes
002035e0 r Four_Twos
00203540 r Four_TwoThirds
00203600 r Four_Zeros
         U fprintf@@GLIBC_2.0
         U fputc@@GLIBC_2.0
         U fputs@@GLIBC_2.0
001ddef3 t frame_downheap
0004c747 t frame_dummy
0025a324 r __FRAME_END__
0027ddec b frame_hdr_cache
0027dde8 b frame_hdr_cache_head
001ddf7e t frame_heapsort
001dd9a5 t __frame_state_for
         U fread@@GLIBC_2.0
         U free@@GLIBC_2.0
         U freopen@@GLIBC_2.0
         U fseek@@GLIBC_2.0
         U ftell@@GLIBC_2.0
         U fwrite@@GLIBC_2.0
0025f841 d g_b_phys_enable_query_cache
00262760 d g_CollisionRulesBlock
00267360 b g_cvPhysPMC
002675d8 b g_EmptyCollisionListener
00266ae4 b gErrorReport
001de133 t get_cie_encoding
         U GetCPUInformation
         U getcwd@@GLIBC_2.0
         U getenv@@GLIBC_2.0
001de1e0 t get_fde_encoding
00262be0 d g_f4_111half
00262940 d g_FluidBlock
002626e0 d g_IVPToHLDir
0026becc b global_friction_counter
0025e43c a _GLOBAL_OFFSET_TABLE_
00048a50 t _GLOBAL__sub_I_actor.cpp
00048ac0 t _GLOBAL__sub_I_actorproxy.cpp
00048b30 t _GLOBAL__sub_I_base.cpp
00048ba0 t _GLOBAL__sub_I_box.cpp
00048c10 t _GLOBAL__sub_I_cached_box.cpp
00048c80 t _GLOBAL__sub_I_capsule.cpp
00048cf0 t _GLOBAL__sub_I_collection.cpp
00048d60 t _GLOBAL__sub_I_collision.cpp
00048dd0 t _GLOBAL__sub_I_compound.cpp
00048e40 t _GLOBAL__sub_I_constraint.cpp
00048eb0 t _GLOBAL__sub_I_cook.cpp
0004a180 t _GLOBAL__sub_I_cvar
00048f20 t _GLOBAL__sub_I_deferred_call.cpp
0004c540 t _GLOBAL__sub_I_Four_PointFives
00048490 t _GLOBAL__sub_I_g_EmptyCollisionListener
00048950 t _GLOBAL__sub_I_g_MeshFrameLocksPool
00047ea0 t _GLOBAL__sub_I_g_PhysicsCollision
00047a00 t _GLOBAL__sub_I_g_PhysicsInternal
00047920 t _GLOBAL__sub_I_g_PhysicsUnits
0004a740 t _GLOBAL__sub_I_g_scalar4_hk_epsilon
00048510 t _GLOBAL__sub_I_g_SurfaceDatabase
00049ef0 t _GLOBAL__sub_I_g_VPhysPtrSaveRestoreOps
00048f90 t _GLOBAL__sub_I_inertia.cpp
0004b000 t _GLOBAL__sub_I_IVP_CLS
0004bdf0 t _GLOBAL__sub_I_ivp_debug_indent
0004a980 t _GLOBAL__sub_I_ivp_debug_sf_indent
0004bb70 t _GLOBAL__sub_I_IVP_Hash_crctab
0004bef0 t _GLOBAL__sub_I_ivp_mindist_settings
00049000 t _GLOBAL__sub_I_level.cpp
0004c580 t _GLOBAL__sub_I_lineartovertex
0004c5c0 t _GLOBAL__sub_I_LOG_HavokConsole
00049070 t _GLOBAL__sub_I_mopp.cpp
0004adc0 t _GLOBAL__sub_I_n_physical_pops
000490e0 t _GLOBAL__sub_I_phys2_continuous_cd
00047c90 t _GLOBAL__sub_I_phys2_num_threads
00049480 t _GLOBAL__sub_I_polysoup.cpp
000494f0 t _GLOBAL__sub_I_polytope.cpp
00049560 t _GLOBAL__sub_I_polytope_trace.cpp
0004ab40 t _GLOBAL__sub_I_qhmem
0004ab00 t _GLOBAL__sub_I_qh_qh
0004ac40 t _GLOBAL__sub_I_qh_qhstat
0004ac80 t _GLOBAL__sub_I_qh_version
000495d0 t _GLOBAL__sub_I_resource_manager.cpp
0004c380 t _GLOBAL__sub_I_s_bMathlibInitialized
000496b0 t _GLOBAL__sub_I_scheduler2.cpp
00049720 t _GLOBAL__sub_I_scheduler3.cpp
00049790 t _GLOBAL__sub_I_scheduler4.cpp
00049640 t _GLOBAL__sub_I_scheduler.cpp
00049800 t _GLOBAL__sub_I_serialize.cpp
00049870 t _GLOBAL__sub_I_shadow.cpp
000498e0 t _GLOBAL__sub_I_shape.cpp
00049950 t _GLOBAL__sub_I_sphere.cpp
0004a110 t _GLOBAL__sub_I_s_pInterfaceRegs
000499c0 t _GLOBAL__sub_I_splitmeshcook.cpp
0004a1f0 t _GLOBAL__sub_I_s_StringCharConversion
00049b80 t _GLOBAL__sub_I_stdafx.cpp
00049a30 t _GLOBAL__sub_I_stream.cpp
00049aa0 t _GLOBAL__sub_I_surfacepropmap.cpp
00049b10 t _GLOBAL__sub_I_world.cpp
0004abc0 t _GLOBAL__sub_I__Z10qh_addhashPvP4setTij
00049bf0 t _GLOBAL__sub_I__Z11InitLeafmapP17IVP_Compact_LedgeP9leafmap_t
0004af40 t _GLOBAL__sub_I__Z11qh_premergeP7vertexTdd
0004ac00 t _GLOBAL__sub_I__Z12qh_setaddnthPP4setTiPv
0004c500 t _GLOBAL__sub_I__Z12SeedRandSIMDj
0004aec0 t _GLOBAL__sub_I__Z13qh_backnormalPPdiijS_Pj
0004aac0 t _GLOBAL__sub_I__Z13qh_copypointsPdii
0004ab80 t _GLOBAL__sub_I__Z14qh_appendfacetP6facetT
00048650 t _GLOBAL__sub_I__Z15AngDragIntegralffff
0004bbf0 t _GLOBAL__sub_I__Z16ivp_memory_checkPv
0004af00 t _GLOBAL__sub_I__Z17qh_produce_outputv
000481e0 t _GLOBAL__sub_I__Z18GetOppositeSynapseP20IVP_Synapse_Friction
0004a340 t _GLOBAL__sub_I__Z18StrLessInsensitiveRKPKcS2_
00047990 t _GLOBAL__sub_I__Z19PackLedgeIntoBufferP12packedhull_tR10CUtlBufferPK17IVP_Compact_LedgeRK17virtualmeshlist_t
0004c080 t _GLOBAL__sub_I__Z29ivp_core_get_surface_speed_osP8IVP_CoreP15IVP_Real_ObjectPK17IVP_U_Float_PointPS3_
00047ff0 t _GLOBAL__sub_I__Z29TransformHLWorldToHavanaLocalRK6VectorP15IVP_Real_Object
00048730 t _GLOBAL__sub_I__Z31ComputePDControllerCoefficientsPffff
0004bcb0 t _GLOBAL__sub_I__Z8ivp_randv
0004ae80 t _GLOBAL__sub_I__Z8qh_qhullv
0004bbb0 t _GLOBAL__sub_I__Z9get_floatv
00049d10 t _GLOBAL__sub_I__Z9nexttokenPcPKcc
000478e0 t _GLOBAL__sub_I__Z9ParseFilePKcPcPbP14characterset_t
0004bf80 t _GLOBAL__sub_I__Z9ReportObjP16IVP_Synapse_RealR8CFmtStrNILi256EE
0004a140 t _GLOBAL__sub_I__Z9_V_memsetPvii
0004a2e0 t _GLOBAL__sub_I__ZN10CUtlSymbol14s_pSymbolTableE
0004a780 t _GLOBAL__sub_I__ZN10hk_Matrix38set_rowsERK10hk_Vector3S2_S2_
0004a880 t _GLOBAL__sub_I__ZN10hk_Vector319set_transformed_posERK12hk_TransformRKS_
0004bcf0 t _GLOBAL__sub_I__ZN10IVP_U_Quat10get_anglesEP17IVP_U_Float_Point
0004a800 t _GLOBAL__sub_I__ZN11hk_Rotation3setERK13hk_Quaternion
0004b490 t _GLOBAL__sub_I__ZN11IVP_Mindist32try_to_generate_managed_frictionEPP19IVP_Friction_SystemP8IVP_BOOLP19IVP_Simulation_UnitS3_
0004b650 t _GLOBAL__sub_I__ZN11IVP_PolygonC2EP11IVP_ClusterP18IVP_SurfaceManagerPK24IVP_Template_Real_ObjectPK10IVP_U_QuatPK11IVP_U_Point
0004a840 t _GLOBAL__sub_I__ZN12hk_TransformC2ERK13hk_QuaternionRK10hk_Vector3
0004ae40 t _GLOBAL__sub_I__ZN12IVP_Tri_Edge22search_nearest_edge_toEP11IVP_U_PointPf
0004a440 t _GLOBAL__sub_I__ZN13hk_ConstraintC2EP26hk_Local_Constraint_SystemP13hk_Rigid_BodyS3_23IVP_CONTROLLER_PRIORITYi
0004a7c0 t _GLOBAL__sub_I__ZN13hk_Quaternion3setERK11hk_Rotation
0004c2c0 t _GLOBAL__sub_I__ZN13IVP_3D_Solver15calc_nullstelleE8IVP_TimeS0_fffP15IVP_Real_ObjectS2_
0004b200 t _GLOBAL__sub_I__ZN13IVP_MI_Vector3setEPKS_
0004a030 t _GLOBAL__sub_I__ZN14ConCommandBase18s_pConCommandBasesE
0004c340 t _GLOBAL__sub_I__ZN14IVP_Constraint33core_is_going_to_be_deleted_eventEP8IVP_Core
0004b510 t _GLOBAL__sub_I__ZN14IVP_Merge_Core16find_mass_centerEv
0004ad80 t _GLOBAL__sub_I__ZN14IVP_point_hashD2Ev
0004b040 t _GLOBAL__sub_I__ZN14IVP_Ray_SolverC2EPK23IVP_Ray_Solver_Template
0004c000 t _GLOBAL__sub_I__ZN14IVP_Synapse_OO25hull_limit_exceeded_eventEP16IVP_Hull_Managerf
0004bc30 t _GLOBAL__sub_I__ZN14IVP_U_Min_HashC2Ei
0004bc70 t _GLOBAL__sub_I__ZN14IVP_U_Min_ListC2Ei
0004a2a0 t _GLOBAL__sub_I__ZN15CUtlBinaryBlockC2Eii
0004a8c0 t _GLOBAL__sub_I__ZN15hk_Vector3_Util10random_vecEv
0004b590 t _GLOBAL__sub_I__ZN15IVP_Real_Object10set_pinnedE8IVP_BOOL
0004a0d0 t _GLOBAL__sub_I__ZN16CDataManagerBaseC2Ej
00047e30 t _GLOBAL__sub_I__ZN16CPhysics_AirboatC2EP15IVP_EnvironmentPK23IVP_Template_Car_SystemP17IPhysicsGameTrace
0004afc0 t _GLOBAL__sub_I__ZN16IVP_Compact_Edge10next_tableE
0004be30 t _GLOBAL__sub_I__ZN16IVP_ov_tree_hashD2Ev
00048420 t _GLOBAL__sub_I__ZN17CFrictionSnapshotC2EP15IVP_Real_Object
0004b550 t _GLOBAL__sub_I__ZN17IVP_Contact_Point21p_calc_friction_qr_PFEPK11IVP_U_PointPK16IVP_Compact_EdgeP21IVP_Cache_Ledge_PointP27IVP_Impact_Solver_Long_TermP17IVP_U_Float_Point
0004b390 t _GLOBAL__sub_I__ZN17IVP_Contact_PointC2EP11IVP_Mindist
0004b4d0 t _GLOBAL__sub_I__ZN17IVP_Friction_HashD2Ev
0004a900 t _GLOBAL__sub_I__ZN17IVP_Halfspacesoup13add_halfspaceEPK11IVP_U_Hesse
0004c040 t _GLOBAL__sub_I__ZN17IVP_Range_ManagerC2EP15IVP_Environment8IVP_BOOL
0004bd70 t _GLOBAL__sub_I__ZN17IVP_U_Vector_Base13increment_memEv
0004a680 t _GLOBAL__sub_I__ZN18hk_Rigid_Body_Core22add_to_mass_matrix_invER17hk_Core_VMQ_InputR15hk_Dense_MatrixPf
0004b790 t _GLOBAL__sub_I__ZN18IVP_Anomaly_LimitsC2E8IVP_BOOL
0004b300 t _GLOBAL__sub_I__ZN18IVP_Freeze_ManagerC2Ev
0004ad40 t _GLOBAL__sub_I__ZN18IVP_I_FPoint_VHashD2Ev
0004b9b0 t _GLOBAL__sub_I__ZN18IVP_SurfaceManagerD2Ev
0004a480 t _GLOBAL__sub_I__ZN19hk_Fixed_Constraint15init_constraintEPKv
0004a4c0 t _GLOBAL__sub_I__ZN19hk_Hinge_BP_Builder15set_position_osEiRK10hk_Vector3
0004a500 t _GLOBAL__sub_I__ZN19hk_Hinge_Constraint15init_constraintEPKv
0004ba30 t _GLOBAL__sub_I__ZN19IVP_Compact_Surface9byte_swapEv
0004b3d0 t _GLOBAL__sub_I__ZN19IVP_Friction_Solver30test_gauss_solution_suggestionEPfPiiP12IVP_U_Memory
0004b9f0 t _GLOBAL__sub_I__ZN19IVP_Template_ObjectC2Ev
0004b0c0 t _GLOBAL__sub_I__ZN19IVP_Template_SpringC2Ev
0004a700 t _GLOBAL__sub_I__ZN20hk_Dense_Matrix_Util4multERK15hk_Dense_MatrixRK15hk_Dense_VectorRS3_
0004a580 t _GLOBAL__sub_I__ZN20hk_Pulley_Constraint15init_constraintEPKv
0004af80 t _GLOBAL__sub_I__ZN20IVP_Collision_FilterD2Ev
0004b930 t _GLOBAL__sub_I__ZN20IVP_Material_ManagerC2E8IVP_BOOL
0004b280 t _GLOBAL__sub_I__ZN20IVP_Template_PhantomC2Ev
0004aa40 t _GLOBAL__sub_I__ZN20IVP_Template_PolygonC2Ev
0004b080 t _GLOBAL__sub_I__ZN20IVP_Template_Rot_MotC2Ev
0004baf0 t _GLOBAL__sub_I__ZN20IVP_U_BigVector_Base13increment_memEv
0004aa80 t _GLOBAL__sub_I__ZN20IVV_Cluster_Min_HashC2Ei
0004a5c0 t _GLOBAL__sub_I__ZN21hk_Ragdoll_Constraint15init_constraintEPKv
0004bf40 t _GLOBAL__sub_I__ZN21IVP_3D_Solver_PF_COLL9get_valueEP12IVP_U_MatrixS1_
0004bab0 t _GLOBAL__sub_I__ZN21IVP_Active_Value_HashD2Ev
0004ad00 t _GLOBAL__sub_I__ZN21IVP_Compact_RecursiveC2Ev
0004b450 t _GLOBAL__sub_I__ZN21IVP_Hull_Manager_BaseC2Ev
0004bfc0 t _GLOBAL__sub_I__ZN21IVP_Mindist_Recursive19mindist_rescue_pushEv
0004b5d0 t _GLOBAL__sub_I__ZN21IVP_Statistic_Manager16output_statisticEv
0004c410 t _GLOBAL__sub_I__ZN22CPolyhedron_AllocByNew7ReleaseEv
0004b7d0 t _GLOBAL__sub_I__ZN22IVP_BetterDebugmanager19enable_debug_outputE15IVP_DEBUG_CLASS
0004b610 t _GLOBAL__sub_I__ZN22IVP_Listener_Collision19event_pre_collisionEP19IVP_Event_Collision
000483b0 t _GLOBAL__sub_I__ZN23CPhysicsFluidControllerC2EP17CBuoyancyAttacherP29IVP_Liquid_Surface_DescriptorP14CPhysicsObjecti
0004a400 t _GLOBAL__sub_I__ZN23hk_Breakable_ConstraintC2EP14hk_EnvironmentPK26hk_Breakable_Constraint_BP
0004a540 t _GLOBAL__sub_I__ZN23hk_Prismatic_Constraint15init_constraintEPKv
0004a6c0 t _GLOBAL__sub_I__ZN23hk_Rigid_Body_Binary_EFC2EP14hk_EnvironmentP13hk_Rigid_BodyS3_23IVP_CONTROLLER_PRIORITY
0004b180 t _GLOBAL__sub_I__ZN23IVP_Controller_Buoyancy30calculate_future_extrapolationEPKNS_21Attacher_Interpolator7Last_IOEPK13IVP_MI_VectorS6_f8IVP_TimePS4_S8_
0004b240 t _GLOBAL__sub_I__ZN23IVP_Template_ConstraintC2Ev
0004b8b0 t _GLOBAL__sub_I__ZN24IVP_Cache_Object_Manager20invalid_cache_objectEP15IVP_Real_Object
0004c240 t _GLOBAL__sub_I__ZN24IVP_Calc_Next_PSI_Solver38get_longest_time_step_dependent_on_rotEP8IVP_Core
0004b710 t _GLOBAL__sub_I__ZN24IVP_Solver_Core_Reaction13init_trans_wsEPK11IVP_U_PointP8IVP_CoreP13IVP_U_Point_4S6_f
0004a3c0 t _GLOBAL__sub_I__ZN25hk_Ball_Socket_ConstraintC2EP14hk_EnvironmentPK17hk_Ball_Socket_BPP13hk_Rigid_BodyS6_
0004b140 t _GLOBAL__sub_I__ZN25IVP_Constraint_Car_ObjectC2EP25IVP_Constraint_Solver_CarP15IVP_Real_ObjectS3_P17IVP_U_Float_Point
0004a380 t _GLOBAL__sub_I__ZN26hk_Local_Constraint_SystemC2EP14hk_EnvironmentP29hk_Local_Constraint_System_BP
0004a640 t _GLOBAL__sub_I__ZN26hk_Stiff_Spring_Constraint15init_constraintEPKv
0004b100 t _GLOBAL__sub_I__ZN26IVP_Car_System_Real_Wheels23change_spring_dampeningE13IVP_POS_WHEELf
0004b690 t _GLOBAL__sub_I__ZN26IVP_Controller_Independent10empty_listE
0004b1c0 t _GLOBAL__sub_I__ZN26IVP_Controller_Raycast_Car24do_simulation_controllerEP13IVP_Event_SimP12IVP_U_VectorI8IVP_CoreE
0004b750 t _GLOBAL__sub_I__ZN26IVP_Event_Manager_Standard20simulate_time_eventsEP16IVP_Time_ManagerP15IVP_Environment8IVP_Time
0004b410 t _GLOBAL__sub_I__ZN26IVP_Great_Matrix_Many_Zero28matrix_check_unequation_lineEi
0004acc0 t _GLOBAL__sub_I__ZN27IVP_Compact_Ledge_GeneratorC2Ev
0004c0c0 t _GLOBAL__sub_I__ZN27IVP_Constraint_Local_AnchorC2Ev
0004c300 t _GLOBAL__sub_I__ZN27IVP_Mindist_Minimize_Solver13p_minimize_PFEPK16IVP_Compact_EdgeS2_P21IVP_Cache_Ledge_PointS4_
0004a9c0 t _GLOBAL__sub_I__ZN28IVP_SurfaceBuilder_Pointsoup25get_offset_from_pointlistEP18IVP_Template_PointiP11IVP_U_Point
0004b970 t _GLOBAL__sub_I__ZN29IVP_PerformanceCounter_Simple36reset_and_print_performance_countersE8IVP_Time
0004c280 t _GLOBAL__sub_I__ZN30IVP_Object_Callback_Table_HashD2Ev
0004c100 t _GLOBAL__sub_I__ZN30IVP_Template_Controller_MotionC2Ev
000487c0 t _GLOBAL__sub_I__ZN30vphysics_save_cphysicsspring_t9m_DataMapE
0004a600 t _GLOBAL__sub_I__ZN32hk_Ragdoll_Constraint_BP_Builder38initialize_from_limited_ball_socket_bpEPK25hk_Limited_Ball_Socket_BPP13hk_Rigid_BodyS4_
0004a940 t _GLOBAL__sub_I__ZN32IVP_SurfaceBuilder_Halfspacesoup22insert_point_into_listEP11IVP_U_PointP12IVP_U_VectorIS0_Ef
000485d0 t _GLOBAL__sub_I__ZN32vphysics_save_motioncontroller_t9m_DataMapE
0004beb0 t _GLOBAL__sub_I__ZN33IVP_Collision_Callback_Table_HashD2Ev
0004aa00 t _GLOBAL__sub_I__ZN33IVP_SurfaceBuilder_Polygon_ConvexC2EP20IVP_Template_Polygon
0004ba70 t _GLOBAL__sub_I__ZN33IVP_SurfaceManager_Polygon_Solver16traverse_clusterEPK26IVP_Compact_Ledgetree_NodePK11IVP_U_PointfP15IVP_U_BigVectorI17IVP_Compact_LedgeE
00048170 t _GLOBAL__sub_I__ZN34CPhysics_Car_System_Raycast_WheelsC2EP15IVP_EnvironmentPK23IVP_Template_Car_System
00048840 t _GLOBAL__sub_I__ZN34vphysics_save_cvehiclecontroller_t9m_DataMapE
0004be70 t _GLOBAL__sub_I__ZN36IVP_Collision_Delegator_Root_Mindist42object_is_removed_from_collision_detectionEP15IVP_Real_Object
0004ae00 t _GLOBAL__sub_I__ZN36IVP_Compact_Ledge_Mass_Center_SolverC2EPK12IVP_U_Matrix
0004b8f0 t _GLOBAL__sub_I__ZN36IVP_Liquid_Surface_Descriptor_Simple19calc_liquid_surfaceEP15IVP_EnvironmentP8IVP_CoreP17IVP_U_Float_HesseP17IVP_U_Float_Point
0004b870 t _GLOBAL__sub_I__ZN39IVP_BetterStatisticsmanager_Data_Entity13set_int_valueEi
00047840 t _GLOBAL__sub_I__ZN3NXU12getShapeTypeENS_12SCHEMA_CLASSE
00047890 t _GLOBAL__sub_I__ZN3NXU3sqrEf
0004c140 t _GLOBAL__sub_I__ZN8IVP_BallC2EP11IVP_ClusterPK17IVP_Template_BallPK24IVP_Template_Real_ObjectPK10IVP_U_QuatPK11IVP_U_Point
0004bd30 t _GLOBAL__sub_I__ZN8P_String9uppercaseEPc
00049ff0 t _GLOBAL__sub_I__ZN9CByteswap23SwapFieldToTargetEndianEPvS0_P17typedescription_t
0004bdb0 t _GLOBAL__sub_I__ZN9IVP_VHashC2Ei
0004bb30 t _GLOBAL__sub_I__ZNK14IVP_U_Straight30calc_orthogonal_vec_from_pointEPK11IVP_U_PointPS0_
0004b2c0 t _GLOBAL__sub_I__ZNK8IVP_Core25get_surface_speed_on_testEPK17IVP_U_Float_PointS2_S2_PS0_
00267c60 b g_MeshFrameLocksPool
         w __gmon_start__
00262700 d g_ParseBlocks
00268dc4 B g_pCVar
00267040 b g_PhysicsCollision
0025e550 d g_PhysicsInternal
0025e53c d g_PhysicsUnits
00000000 b g_pMeshFrameLocks
00268dbc b g_pPhysics2
00268db8 b g_pPhysics2ResourceManager
00268dc0 b g_pProcessUtils
00268db4 b g_pUtlSortVectorQSortContext
002627a0 d g_RagdollAnimatedFrictionBlock
00262820 d g_RagdollConstraintBlock
001f00a0 r g_scalar4_hk_epsilon
00262c10 d g_scPi
00262c00 d g_scPiDiv2
00262bf0 d g_scPiDiv4
00262c50 d g_sc_tan_pi_8
00262c20 d g_scTermArcTanR1
00262c30 d g_scTermArcTanR3
00262c40 d g_scTermArcTanR5
002034f0 r g_SIMD_0123
002034a0 r g_SIMD_AllOnesMask
002034e0 r g_SIMD_clear_signmask
002034b0 r g_SIMD_clear_wmask
00203450 r g_SIMD_ComponentMask
00203400 r g_SIMD_EveryOtherMask
00203490 r g_SIMD_Low16BitsMask
002034c0 r g_SIMD_lsbmask
002034d0 r g_SIMD_signmask
00203410 r g_SIMD_SkipTailMask
002629e0 d g_SolidBlock
00267620 b g_SurfaceDatabase
         U g_Telemetry
00268838 b g_VisitHashPool
00268924 b g_VPhysPtrSaveRestoreOps
00268920 b g_VPhysPtrUtlVectorSaveRestoreOps
         U g_VProfCurrentProfile
         U __gxx_personality_v0@@CXXABI_1.3
0004c77e t __i686.get_pc_thunk.bx
001dde4f t __i686.get_pc_thunk.cx
         U iconv_close@@GLIBC_2.1
         U iconv@@GLIBC_2.1
         U iconv_open@@GLIBC_2.1
00047760 T _init
001dc406 t init_dwarf_reg_size_table
         U isalnum@@GLIBC_2.0
         U isalpha@@GLIBC_2.0
0026bda4 b IVP_CLS
0026e784 b ivp_debug_indent
0026c020 b ivp_debugmanager
0026a3cc b ivp_debug_sf_indent
0026a3bc b ivp_debug_sf_last_node_was_terminal
0026a3c4 b ivp_debug_sf_max_treedepth
0026a3c0 b ivp_debug_sf_n_nodes_with_one_terminal
0026a3c8 b ivp_debug_sf_treedepth
00262cc0 d IVP_Hash_crctab
0026e7e0 b ivp_mindist_settings
0025e320 d __JCR_END__
0025e320 d __JCR_LIST__
         w _Jv_RegisterClasses
001dc3a4 t .L17
001dc36e t .L19
001dc389 t .L20
001dd2e1 t .L214
001dd2e5 t .L215
001dd2ea t .L216
001dd2ee t .L217
001dd2fa t .L218
001dd2ff t .L219
001dd309 t .L220
001dd30d t .L221
001dd313 t .L222
001dd319 t .L223
001dd31f t .L224
001dd331 t .L225
001dd32a t .L226
001dd33f t .L227
001dd323 t .L228
001dd338 t .L229
001dc37a t .L23
001dd346 t .L230
001dc38e t .L24
001dd3ac t .L244
001dc396 t .L25
001dc39d t .L26
001dd4fb t .L271
001dd505 t .L272
001dd531 t .L273
001dd57c t .L274
001dd595 t .L275
001dc8d8 t .L43
001de107 t .L45
001dc8d3 t .L46
001dc53c t .L47
001de0d1 t .L47
001dc569 t .L48
001de0ec t .L48
001dc587 t .L49
001dc5a5 t .L50
001dc5c2 t .L51
001de0dd t .L51
001dc5ea t .L52
001de0f1 t .L52
001dc620 t .L53
001de0f9 t .L53
001dc605 t .L54
001de100 t .L54
001dc63b t .L55
001dc664 t .L56
001dc69f t .L57
001dc6c5 t .L58
001dc6fc t .L59
001dc71f t .L60
001dc732 t .L61
001dc74a t .L62
001dc765 t .L63
001dc792 t .L64
001dc7d0 t .L65
001dc7f0 t .L66
001dc812 t .L67
001dc845 t .L68
001dc86b t .L69
001dc88e t .L70
001dc8a1 t .L71
         U lchown@@GLIBC_2.0
001de4eb t linear_search_fdes
00276080 b lineartolightmap
00277080 b lineartovertex
         U link@@GLIBC_2.0
         U localtime@@GLIBC_2.0
         U LoggingSystem_IsChannelEnabled
         U LoggingSystem_LogDirect
         U LoggingSystem_RegisterLoggingChannel
         U log@@GLIBC_2.0
0027dd9c b LOG_HavokConsole
         U longjmp@@GLIBC_2.0
001df428 t lstat
001df428 t __lstat
         U __lxstat64@@GLIBC_2.2
         U __lxstat@@GLIBC_2.0
         U malloc@@GLIBC_2.0
0027deb4 b marker.7234
002003dc R MAX_OBJECT_ROT_SPEED
         U mbstowcs@@GLIBC_2.0
         U memalign@@GLIBC_2.0
         U memcpy@@GLIBC_2.0
         U memmove@@GLIBC_2.0
         U memset@@GLIBC_2.0
         U mkdir@@GLIBC_2.0
         U mkfifo@@GLIBC_2.0
001df458 t mknod
001df458 t __mknod
         U mount@@GLIBC_2.0
         U Msg
00203284 r nanmask
00262c80 d n_physical_pops
000f8f10 t NxGetCookingLib
0027ddc0 b object_mutex
0027ddb8 b once_regsizes.7669
         U open64@@GLIBC_2.2
         U opendir@@GLIBC_2.0
         U open@@GLIBC_2.0
0026e1e0 b p_error_buffer
002634f0 d pfVectorNormalizeFast
002680e0 b phys2_ccd_epsilon
00268440 b phys2_continuous_cd
00268020 b phys2_dedicated_thread_pool
00266f40 b phys2_num_threads
00268260 b phys2_report_asserts
002682c0 b phys2_report_errors
002681a0 b phys2_report_messages
00268200 b phys2_report_warnings
00266ee0 b phys2_vdb
00266e80 b phys2_vdb_host
00268320 b phys2_version
00268140 b phys2_visualize
0025e590 d physcollision
002674c8 b phys_enable_experimental_optimizations
002674e0 b phys_enable_query_cache
0025f840 d phys_enable_simd_optimizations
0025f84c d physprops
002683e0 b physx_debug_dll
00268080 b physx_subdir
00268380 b physx_valve_dll
         U Plat_IsInDebugSession
00263500 d power2_n
         U powf@@GLIBC_2.0
         U pow@@GLIBC_2.0
0026bcec b P_Pop_Eps
0026bce8 b P_Pop_Scal_Eps
0026bce4 b P_Pop_Too_Flat_Eps
         U printf@@GLIBC_2.0
         w pthread_cancel@@GLIBC_2.0
         U pthread_mutexattr_init@@GLIBC_2.0
         U pthread_mutexattr_settype@@GLIBC_2.1
         U pthread_mutex_destroy@@GLIBC_2.0
         U pthread_mutex_init@@GLIBC_2.0
         U pthread_mutex_lock@@GLIBC_2.0
         U pthread_mutex_unlock@@GLIBC_2.0
         w pthread_once@@GLIBC_2.0
         U pthread_self@@GLIBC_2.0
         U putchar@@GLIBC_2.0
         U puts@@GLIBC_2.0
0026ae60 b qhmem
0026a460 b qh_qh
0026af20 b qh_qhstat
00262c68 d qh_rand_seed
00262c6c d qh_version
         U qsort@@GLIBC_2.0
0026ef0c b quat_identity
         U raise@@GLIBC_2.0
         U rand@@GLIBC_2.0
         U readdir@@GLIBC_2.0
001dc2e2 t read_encoded_value
001de08a t read_encoded_value_with_base
001dc298 t read_sleb128
001dde84 t read_sleb128
001dc268 t read_uleb128
001dde54 t read_uleb128
         U realloc@@GLIBC_2.0
         U realpath@@GLIBC_2.3
001df06a t __register_frame
001df050 t __register_frame_info
001defc2 t __register_frame_info_bases
001df128 t __register_frame_info_table
001df09f t __register_frame_info_table_bases
001df142 t __register_frame_table
         U rename@@GLIBC_2.0
         U rmdir@@GLIBC_2.0
0026ef34 b s_bMathlibInitialized
         U scandir@@GLIBC_2.0
001deac4 t search_object
0027dddc b seen_objects
0004c620 t set_fast_math
         U _setjmp@@GLIBC_2.0
         U sincosf@@GLIBC_2.1
0026eb00 b SinCosTable
         U sinf@@GLIBC_2.0
         U sin@@GLIBC_2.0
001ddff2 t size_of_encoded_value
00268e20 b s_NoEscConversion
         U snprintf@@GLIBC_2.0
00268b44 B s_pInterfaceRegs
         U sprintf@@GLIBC_2.0
         U sscanf@@GLIBC_2.0
00269740 b s_StringCharConversion
001df3f8 t stat
001df3f8 t __stat
         U stderr@@GLIBC_2.0
         U stdout@@GLIBC_2.0
         U strcasecmp@@GLIBC_2.0
         U strcasestr@@GLIBC_2.1
         U strcat@@GLIBC_2.0
         U strchr@@GLIBC_2.0
         U strcmp@@GLIBC_2.0
         U strcpy@@GLIBC_2.0
         U strdup@@GLIBC_2.0
         U strlen@@GLIBC_2.0
         U strncat@@GLIBC_2.0
         U strncmp@@GLIBC_2.0
         U strncpy@@GLIBC_2.0
         U strpbrk@@GLIBC_2.0
         U strrchr@@GLIBC_2.0
         U strstr@@GLIBC_2.0
         U strtod@@GLIBC_2.0
         U strtok@@GLIBC_2.0
         U strtol@@GLIBC_2.0
         U strtoul@@GLIBC_2.0
0027dde0 b subs.7497
         U symlink@@GLIBC_2.0
         U tanf@@GLIBC_2.0
         U tan@@GLIBC_2.0
0027deac b terminator.7340
         U ThreadGetCurrentId
         U ThreadInterlockedAssignIf64
         U ThreadSleep
         U time@@GLIBC_2.0
         U tolower@@GLIBC_2.0
         U toupper@@GLIBC_2.0
         U towlower@@GLIBC_2.0
         U towupper@@GLIBC_2.0
001dc164 t __udivdi3
         U unlink@@GLIBC_2.0
0027ddd8 b unseen_objects
001dddcf t _Unwind_Backtrace
001dda66 t _Unwind_DebugHook
001dddb3 t _Unwind_DeleteException
001dd95d t _Unwind_FindEnclosingFunction
001df27e t _Unwind_Find_FDE
001ddba0 t _Unwind_ForcedUnwind
001dd75f t _Unwind_ForcedUnwind_Phase2
001dd8b7 t _Unwind_GetCFA
001dd98f t _Unwind_GetDataRelBase
001dccb0 t _Unwind_GetGR
001dd918 t _Unwind_GetIP
001dd923 t _Unwind_GetIPInfo
001dd947 t _Unwind_GetLanguageSpecificData
001dd952 t _Unwind_GetRegionStart
001dd99a t _Unwind_GetTextRelBase
001de632 t _Unwind_IteratePhdrCallback
001dda6b t _Unwind_RaiseException
001dd81c t _Unwind_RaiseException_Phase2
001ddc4b t _Unwind_Resume
001ddcf2 t _Unwind_Resume_or_Rethrow
001dd8c2 t _Unwind_SetGR
001dd939 t _Unwind_SetIP
001dc3d0 t _Unwind_SetSpColumn
         U utime@@GLIBC_2.0
         U utimes@@GLIBC_2.0
001dc904 t uw_frame_state_for
001dd65e t uw_init_context_1
001dccfc t uw_install_context_1
001dd725 t uw_update_context
001dd3c0 t uw_update_context_1
0026ef1c b vec3_angle
0026ef00 b vec3_invalid
0026ef28 b vec3_origin
         U vsnprintf@@GLIBC_2.0
         U vsprintf@@GLIBC_2.0
         U vswprintf@@GLIBC_2.2
         U Warning
         U wcslen@@GLIBC_2.0
         U wcsncat@@GLIBC_2.0
         U wcsncpy@@GLIBC_2.0
         U wcstombs@@GLIBC_2.0
001108b0 t __wrap_access
00110fc0 t __wrap_chmod
00111080 t __wrap_chown
00110880 t __wrap_creat
00110520 t __wrap_fopen
00110600 t __wrap_fopen64
00110430 t __wrap_freopen
00111150 t __wrap_lchown
00111380 t __wrap_link
00110a30 t __wrap_lstat
00110d50 t __wrap___lxstat
00110ef0 t __wrap___lxstat64
00111c50 t __wrap_mkdir
001117f0 t __wrap_mkfifo
001114e0 t __wrap_mknod
001115c0 t __wrap_mount
001106e0 t __wrap_open
001107b0 t __wrap_open64
00110bc0 t __wrap_opendir
00111b90 t __wrap_realpath
001118b0 t __wrap_rename
00111d10 t __wrap_rmdir
00110af0 t __wrap_scandir
00110970 t __wrap_stat
00111220 t __wrap_symlink
00111730 t __wrap_unlink
00111a10 t __wrap_utime
00111ad0 t __wrap_utimes
00110c80 t __wrap___xstat
00110e20 t __wrap___xstat64
         U __xmknod@@GLIBC_2.0
         U __xstat64@@GLIBC_2.2
         U __xstat@@GLIBC_2.0
0012d650 t ArcTan2Alt(float __vector(4), float __vector(4))
0012d650 t ArcTan2Alt(float __vector, float __vector)
         U DevWarning(char const*, ...)
0011ba00 t HashString(char const*)
00114bc0 t HexToValue(char)
001cffa0 t IsDenormal(float const&)
0012d7c0 t IsSimilar3(float __vector(4) const&, hk_Vector3 const&, float)
0012d780 t IsSimilar3(float __vector(4) const&, float __vector(4) const&, float)
0012d7c0 t IsSimilar3(float __vector const&, hk_Vector3 const&, float)
0012d780 t IsSimilar3(float __vector const&, float __vector const&, float)
001cf320 t MatrixCopy(matrix3x4_t const&, matrix3x4_t&)
000dd5d0 t PhysPmcEnd()
00146e70 t qh_addhash(void*, setT*, int, unsigned int)
0013c060 t qh_divzero(double, double, double, unsigned int*)
00150910 t qh_errexit(int, facetT*, ridgeT*)
0013c900 t qh_getarea(facetT*)
00145570 t qh_gethash(int, setT*, int, int, void*)
001447a0 t qh_memfree(void*, int)
001448f0 t qh_meminit(_IO_FILE*)
00144b50 t qh_memsize(int)
0013d300 t qh_mindiff(double*, double*, int)
00146170 t qh_pointid(double*)
0014cfc0 t qh_setcopy(setT*, int)
0014cb90 t qh_setfree(setT**)
0014cd20 t qh_setlast(setT*)
0014d840 t qh_setsize(setT*)
0014d950 t qh_settemp(int)
0014dd10 t qh_setzero(setT*, int, int)
000d8f30 t ReadRandom(int*)
001d5560 t RotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
001136d0 t V_FileBase(char const*, char*, int)
00111e90 t _V_memmove(void*, void const*, int)
00112c50 t V_snprintf(char*, int, char const*, ...)
00111fc0 t _V_stricmp(char const*, char const*)
00112270 t V_strnicmp(char const*, char const*, int)
00112980 t V_strnistr(char const*, char const*, int)
00111f10 t _V_strrchr(char const*, char)
00114770 t V_StrRight(char const*, int, char*, int)
00114600 t V_StrSlice(char const*, int, int, char*, int)
00114320 t V_StrSubst(char const*, char const*, char const*, char*, int, bool)
001147f0 t V_strtowcs(char const*, int, wchar_t*, int)
00114830 t V_wcstostr(wchar_t const*, int, char*, int)
001144d0 t AllocString(char const*, int)
001d0e60 t AngleMatrix(RadianEuler const&, matrix3x4_t&)
001d0eb0 t AngleMatrix(RadianEuler const&, Vector const&, matrix3x4_t&)
001d0ca0 t AngleMatrix(QAngle const&, matrix3x4_t&)
001d0e20 t AngleMatrix(QAngle const&, Vector const&, matrix3x4_t&)
001d1250 t ClearBounds(Vector&, Vector&)
         U ConColorMsg(Color const&, char const*, ...)
001d4f80 t CubicBasis0(float)
001d4fb0 t CubicBasis1(float)
001d4ff0 t CubicBasis2(float)
001d5030 t CubicBasis3(float)
000f3d00 t datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)
000d4120 t datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)
000f3a90 t datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)
000f37b0 t datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)
000f3880 t datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)
000d41f0 t datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)
000f3c30 t datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)
000f3b60 t datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)
000f3690 t datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)
000f39c0 t datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)
000ee1f0 t datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)
000f2740 t datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)
000d73e0 t datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)
000d74b0 t datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)
000d7720 t datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)
000d7650 t datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)
000e9e00 t datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)
000d78c0 t datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)
000d7580 t datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)
000f1b10 t datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)
000d7170 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)
000f35c0 t datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)
000d7310 t datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)
000d7240 t datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)
000f1a40 t datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)
000d77f0 t datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)
000d7000 t datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)
001cfe20 t FloorDivMod(double, double, int*, int*)
000fa8d0 t InitLeafmap(IVP_Compact_Ledge*, leafmap_t*)
001d5730 t IRotateAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
001b2400 t ivp_message(char const*, ...)
001b2470 t p_get_error()
001b2a20 t p_get_float()
001562d0 t p_mergesort(void**, int, int, int (*)(void*, void*, char*), char*)
0015a6f0 t qh_addpoint(double*, facetT*, unsigned int)
0014de20 t qh_allstatA()
0014e090 t qh_allstatB()
0014e3f0 t qh_allstatC()
0014e830 t qh_allstatD()
0014ea80 t qh_allstatE()
0014ecb0 t qh_allstatF()
0014f040 t qh_allstatG()
0014f310 t qh_allstatH()
0014f660 t qh_allstatI()
001462a0 t qh_delfacet(facetT*)
00147940 t qh_delridge(ridgeT*)
0015ec00 t qh_detvnorm(vertexT*, vertexT*, setT*, double*)
0013b630 t qh_distnorm(int, double*, double*, double*)
001591f0 t qh_errexit2(int, facetT*, facetT*)
00150730 t qh_errprint(char const*, facetT*, facetT*, ridgeT*, vertexT*)
0015c3f0 t qh_findbest(double*, facetT*, unsigned int, unsigned int, unsigned int, double*, unsigned int*, int*)
00147c80 t qh_findgood(facetT*, int)
0015d220 t qh_getangle(double*, double*)
00148390 t qh_isvertex(double*, setT*)
0015fc60 t qh_markkeep(facetT*)
0013cd90 t qh_maxouter()
001445c0 t qh_memalloc(int)
001449e0 t qh_memsetup()
00145f20 t qh_newfacet()
00146080 t qh_newridge()
0014fe70 t qh_newstats(int, int*)
0016f930 t qh_premerge(vertexT*, double, double)
00165150 t qh_printend(_IO_FILE*, int, facetT*, setT*, unsigned int)
0014d570 t qh_setcheck(setT*, char const*, int)
0014ca00 t qh_setequal(setT*, setT*)
0014cbf0 t qh_setfree2(setT**, int)
0014ccc0 t qh_setindex(setT*, void*)
0014d110 t qh_setprint(_IO_FILE*, char const*, setT*)
001d1ad0 t SmoothCurve(float)
00112bb0 t V_snwprintf(wchar_t*, int, wchar_t const*, ...)
00112060 t _V_strlower(char*)
00112ca0 t V_vsnprintf(char*, int, char const*, char*)
001120f0 t _V_wcslower(char const*, int, wchar_t*)
000d8f50 t WriteRandom(int*)
00114540 t AllocWString(wchar_t const*, int)
001d1190 t AngleIMatrix(RadianEuler const&, matrix3x4_t&)
001d1010 t AngleIMatrix(QAngle const&, matrix3x4_t&)
001d11e0 t AngleIMatrix(QAngle const&, Vector const&, matrix3x4_t&)
001d0280 t AngleVectors(QAngle const&, Vector*)
001d0330 t AngleVectors(QAngle const&, Vector*, Vector*, Vector*)
00114a40 t CopyMemory3D(void*, void const*, int, int, int, int, int, int, int)
000f2b00 t CreateSpring(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, springparams_t*)
001cf5f0 t CrossProduct(float const*, float const*, float*)
000f9a00 t CrossProduct(Vector const&, Vector const&, Vector&) [clone .constprop.79]
001d48d0 t Cubic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001b2700 t gbs_add_path(char*, char*)
001ced80 t _InvRSquared(float const*)
000f0e30 t IsZeroVector(IVP_U_Point const&)
001d6500 t MathLib_Init(float, float, float, int, bool, bool, bool, bool)
001cee70 t MatrixAngles(matrix3x4_t const&, float*)
001d2160 t MatrixAngles(matrix3x4_t const&, Quaternion&, Vector&)
001ceff0 t MatrixAngles(matrix3x4_t const&, RadianEuler&, Vector&)
001cf3f0 t MatrixInvert(matrix3x4_t const&, matrix3x4_t&)
001b2ad0 t p_get_string()
000dd5c0 t PhysPmcBegin()
0015ad00 t qh_buildhull()
001694d0 t qh_checkzero(unsigned int)
001479a0 t qh_delvertex(vertexT*)
0013beb0 t qh_detjoggle(double*, int, int)
0015f460 t qh_detvridge(vertexT*)
0015c090 t qh_distplane(double*, facetT*, double*)
0013b680 t qh_distround(int, double, double)
0013c3e0 t qh_facetarea(facetT*)
0013f950 t qh_freebuild(unsigned int)
0013fcf0 t qh_freeqhull(unsigned int)
0015cf90 t qh_gausselim(double**, int, int, unsigned int*, unsigned int*)
0015d2e0 t qh_getcenter(setT*)
00169fc0 t qh_hashridge(setT*, int, ridgeT*, vertexT*)
0014bfc0 t qh_initbuild()
00141940 t qh_initflags(char*)
0013cd40 t qh_maxabsval(double*, int)
0013d2a0 t qh_minabsval(double*, int)
00150590 t qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)
00148b10 t qh_newvertex(double*)
0015d880 t qh_normalize(double*, int, unsigned int)
00149780 t qh_point_add(setT*, double*, void*)
0013d520 t qh_pointdist(double*, double*, int)
0016f6b0 t qh_postmerge(char const*, double, double, unsigned int)
001597f0 t qh_precision(char const*)
0013de30 t qh_scalelast(double*, int, int, double, double, double)
0014d640 t qh_setaddnth(setT**, int, void*)
0014cf60 t qh_setappend(setT**, void*)
0014d4d0 t qh_setdelnth(setT*, int)
0014ce40 t qh_setlarger(setT**)
0014dcc0 t qh_setunique(setT**, void*)
00164e60 t qh_skipfacet(facetT*)
001d2850 t QuaternionLn(Quaternion const&, Quaternion&)
001db1c0 t SeedRandSIMD(unsigned int)
001cf970 t VectorAngles(float const*, float*)
001d0640 t VectorAngles(Vector const&, QAngle&)
001d07b0 t VectorAngles(Vector const&, Vector const&, QAngle&)
001cf820 t VectorMatrix(Vector const&, matrix3x4_t&)
001cf190 t VectorRotate(float const*, matrix3x4_t const&, float*)
001d2e70 t VectorRotate(Vector const&, Quaternion const&, Vector&)
001d0f50 t VectorRotate(Vector const&, QAngle const&, Vector&)
001cee30 t VectorsEqual(float const*, float const*)
001139a0 t V_FixSlashes(char*, char)
00112e50 t V_pretifymem(float, int, bool)
00113070 t V_pretifynum(long long)
00112260 t V_strcasecmp(char const*, char const*)
00113450 t V_UCS2ToUTF8(unsigned short const*, char*, int)
00113510 t V_UTF8ToUCS2(char const*, int, unsigned short*, int)
00112c00 t V_vsnwprintf(wchar_t*, int, wchar_t const*, char*)
001d6780 t AngleDistance(float, float)
001d6630 t ApproachAngle(float, float, float)
000fb770 t CM_ClearTrace(CGameTrace*)
000fad40 t FreeVisitHash(CVisitHash*)
001dbb20 t GammaToLinear(float)
001dbb70 t LinearToGamma(float)
001cf670 t MatrixVectors(matrix3x4_t const&, Vector*, Vector*, Vector*)
00105240 t ParseKeyvalue(char const*, char*, char*)
001b2580 t p_make_string(char const*, ...)
001d6d00 t PolyFromPlane(Vector*, Vector const&, float, float)
001b2480 t p_print_error()
0016f390 t qh_all_merges(unsigned int, unsigned int)
0015bea0 t qh_backnormal(double**, int, int, unsigned int, double*, unsigned int*)
0014abe0 t qh_checkfacet(facetT*, unsigned int, unsigned int*)
0013b230 t qh_copypoints(double*, int, int)
0013b4f0 t qh_detsimplex(double*, setT*, int, unsigned int*)
0015f510 t qh_detvridge3(vertexT*, vertexT*)
0015fb70 t qh_geomplanes(facetT*, double*, double*)
0015d950 t qh_getcentrum(facetT*)
0016a0e0 t qh_makeridges(facetT*)
0013cdf0 t qh_maxsimplex(int, setT*, double*, int, setT**)
0016e6c0 t qh_mergecycle(facetT*, facetT*)
0016d910 t qh_mergefacet(facetT*, facetT*, double*, double*, unsigned int)
001489e0 t qh_nearvertex(facetT*, double*, double*)
0015d4d0 t qh_normalize2(double*, int, unsigned int, double*, unsigned int*)
0013d3f0 t qh_outerinner(facetT*, double*, double*)
00149830 t qh_pointfacet()
00167770 t qh_printbegin(_IO_FILE*, int, facetT*, setT*, unsigned int)
001620d0 t qh_printfacet(_IO_FILE*, facetT*)
0014a8b0 t qh_printlists()
00160f60 t qh_printpoint(_IO_FILE*, char const*, double*)
00161310 t qh_printridge(_IO_FILE*, ridgeT*)
001500e0 t qh_printstats(_IO_FILE*, int, int*)
0015f370 t qh_printvnorm(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
00163ce0 t qh_readpoints(int*, int*, unsigned int*)
0014a9b0 t qh_resetlists(unsigned int)
0013e3e0 t qh_scaleinput()
0014dc60 t qh_setcompact(setT*)
0014c930 t qh_setdellast(setT*)
0014d7b0 t qh_setreplace(setT*, void*, void*)
0014da10 t qh_settemppop()
0016cca0 t qh_tracemerge(facetT*, facetT*)
0016d8d0 t qh_willdelete(facetT*, facetT*)
001d23f0 t QuaternionAdd(Quaternion const&, Quaternion const&, Quaternion&)
001d26f0 t QuaternionExp(Quaternion const&, Quaternion&)
001d6960 t RotationDelta(QAngle const&, QAngle const&, QAngle*)
001d51c0 t TransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
00113e70 t V_AppendSlash(char*, int)
00113650 t V_binarytohex(unsigned char const*, int, char*, int)
00114cb0 t V_BinToString(char*, void*, unsigned int)
001cf5c0 t VectorCompare(float const*, float const*)
001cf220 t VectorIRotate(float const*, matrix3x4_t const&, float*)
001cf6f0 t VectorVectors(Vector const&, Vector&, Vector&)
00113ca0 t V_GetFileName(char const*)
001135b0 t V_hextobinary(char const*, int, unsigned char*, int)
00114e30 t V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
00114c10 t V_StringToBin(char const*, void*, unsigned int)
001121f0 t V_strncasecmp(char const*, char const*, int)
00101b60 t AllocVisitHash()
001d67e0 t AngleNormalize(float)
001d6880 t AnglesAreEqual(float, float, float)
001d12c0 t AreBoundsValid(Vector const&, Vector const&)
001cfff0 t BoxOnPlaneSide(float const*, float const*, cplane_t const*)
001da8a0 t ClipPolyhedron(CPolyhedron const*, float const*, int, float, bool)
001d4370 t Hermite_Spline(float, float, float, float)
001d41d0 t Hermite_Spline(float, float, float, float, float)
001d43c0 t Hermite_Spline(Quaternion const&, Quaternion const&, Quaternion const&, float, Quaternion&)
001d42d0 t Hermite_Spline(Vector const&, Vector const&, Vector const&, float, Vector&)
001d40b0 t Hermite_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000f3dc0 t IsVehicleWheel(IVP_Real_Object*)
001d5390 t ITransformAABB(matrix3x4_t const&, Vector const&, Vector const&, Vector&, Vector&)
001afa80 t ivp_byte_swap2(unsigned short&)
001afa50 t ivp_byte_swap4(unsigned int&)
00187c10 t ivp_dummy_func()
001b0c40 t ivp_srand_read()
001b2500 t p_export_error(char const*, ...)
00144e30 t qh_appendfacet(facetT*)
0013f620 t qh_appendprint(qh_PRINT)
00146f60 t qh_checkconvex(facetT*, int)
00146eb0 t qh_check_point(double*, facetT*, double*, double*, facetT**, facetT**)
00147710 t qh_checkvertex(vertexT*)
00167040 t qh_countfacets(facetT*, setT*, unsigned int, int*, int*, int*, int*, int*)
0013b330 t qh_determinant(double**, int, unsigned int*)
0013b710 t qh_detroundoff()
0015f6c0 t qh_eachvoronoi(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), vertexT*, unsigned int, qh_RIDGE, unsigned int)
0015faa0 t qh_facet2point(facetT*, double**, double**, double*)
0013f540 t qh_facetcenter(setT*)
0015cb70 t qh_findbestnew(double*, facetT*, double*, unsigned int*, int*)
0015a280 t qh_findhorizon(double*, facetT*, int*, int*)
0013f6a0 t qh_freebuffers()
00148270 t qh_furthestout(facetT*)
0015d3c0 t qh_getdistance(facetT*, facetT*, double*, double*)
0016c8e0 t qh_getmergeset(facetT*)
0014bbf0 t qh_initialhull(setT*)
0013e910 t qh_joggleinput()
00165c30 t qh_markvoronoi(facetT*, setT*, unsigned int, unsigned int*, int*)
0016b1f0 t qh_mergeridges(facetT*, facetT*)
0016b7b0 t qh_newvertices(setT*)
00148fd0 t qh_nextridge3d(ridgeT*, facetT*, vertexT**)
0014fe20 t qh_nostatistic(int)
001491f0 t qh_outcoplanar()
0014a0c0 t qh_pointvertex()
00165320 t qh_printafacet(_IO_FILE*, int, facetT*, unsigned int)
0015fff0 t qh_printcenter(_IO_FILE*, int, char const*, facetT*)
001686c0 t qh_printfacets(_IO_FILE*, int, facetT*, setT*, unsigned int)
0013d580 t qh_printmatrix(_IO_FILE*, char const*, double**, int, int)
00162220 t qh_printpoint3(_IO_FILE*, double*)
0013d630 t qh_printpoints(_IO_FILE*, char const*, setT*)
00161050 t qh_printvertex(_IO_FILE*, vertexT*)
0015ea90 t qh_printvridge(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int)
00162180 t qh_projectdim3(double*, double*)
001461f0 t qh_removefacet(facetT*)
0013ddc0 t qh_rotateinput(double**)
0013dff0 t qh_scalepoints(double*, int, int, double*, double*)
0013e460 t qh_setdelaunay(int, int, double*)
00163bb0 t qh_setfeasible(int)
0014cc40 t qh_setfreelong(setT**)
0014db20 t qh_settempfree(setT**)
0014dab0 t qh_settemppush(setT*)
0014dbe0 t qh_settruncate(setT*, int)
000f0cc0 t QuaternionDiff(IVP_U_Quat const&, IVP_U_Quat const&, IVP_U_Quat&)
001d24b0 t QuaternionMult(Quaternion const&, Quaternion const&, Quaternion&)
001d0a60 t SetScaleMatrix(float, float, float, matrix3x4_t&)
001d1330 t SolveQuadratic(float, float, float, float&, float&)
0010fc00 t Sys_GetFactory(CSysModule*)
0010fc40 t Sys_GetFactory(char const*)
0010f9a0 t Sys_LoadModule(char const*, Sys_Flags)
00101be0 t TraceGetAABB_r(Vector*, Vector*, IVP_Compact_Ledgetree_Node const*, CTraceIVP&)
000f72a0 t VirtualMeshPSI()
001138f0 t V_SetExtension(char*, char const*, int)
00114d00 t V_SplitString2(char const*, char const**, int, CUtlVector<char*, CUtlMemory<char*, int> >&)
00114f90 t V_SplitWString(wchar_t const*, wchar_t const*, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
00113a60 t V_StripLastDir(char*, int)
00112cf0 t V_vsnprintfRet(char*, int, char const*, char*, bool*)
000ecd80 t AngDragIntegral(float, float, float, float)
001d2ff0 t AngleQuaternion(RadianEuler const&, Quaternion&)
001d3130 t AngleQuaternion(QAngle const&, Quaternion&)
001db700 t BuildGammaTable(float, float, float, int)
001d6f90 t ClipPolyToPlane(Vector*, int, Vector*, Vector const&, float, float)
001cfad0 t ConcatRotations(float const (*) [3], float const (*) [3], float (*) [3])
0010bd90 t ConVar_Register(int, IConCommandBaseAccessor*)
000cc490 t ConvertBoxToIVP(Vector const&, Vector const&, Vector&, Vector&)
0010f920 t GetModuleHandle(char const*)
001cedd0 t InitSinCosTable()
001d12f0 t IsPointInBounds(Vector const&, Vector const&, Vector const&)
001dbf40 t LinearToTexture(float)
001cf550 t MatrixGetColumn(matrix3x4_t const&, int, Vector&)
001cf580 t MatrixSetColumn(Vector const&, int, matrix3x4_t&)
001d0c20 t MatrixTranspose(matrix3x4_t&)
001d0c50 t MatrixTranspose(matrix3x4_t const&, matrix3x4_t&)
00144ec0 t qh_appendvertex(vertexT*)
001692f0 t qh_basevertices(facetT*)
00158e30 t qh_buildtracing(double*, facetT*)
001693d0 t qh_checkconnect()
00145280 t qh_checkflipped(facetT*, double*, unsigned int)
0014a130 t qh_check_maxout()
0014c610 t qh_check_output()
00149d40 t qh_check_points()
0014b6a0 t qh_checkpolygon(facetT*)
00147880 t qh_clearcenters(qh_CENTER)
0013b2c0 t qh_crossproduct(int, double*, double*, double*)
00149060 t qh_facet3vertex(facetT*)
00147fe0 t qh_findgood_all(facetT*)
0013c6f0 t qh_findgooddist(double*, facetT*, double*, facetT**)
0016e1c0 t qh_forcedmerges(unsigned int*)
0014a610 t qh_furthestnext()
0013cae0 t qh_gram_schmidt(int, double**)
00148360 t qh_infiniteloop(facetT*)
0013cc60 t qh_inthresholds(double*, double*)
00146600 t qh_makenewfacet(setT*, unsigned int, facetT*)
00144830 t qh_memfreeshort(int*, int*)
0016aed0 t qh_mergefacet2d(facetT*, facetT*)
0016b800 t qh_mergesimplex(facetT*, facetT*, unsigned int)
00148880 t qh_nearcoplanar()
00148aa0 t qh_newhashtable(int)
00159240 t qh_nextfurthest(facetT**)
00159e40 t qh_partitionall(setT*, double*, int)
0014a570 t qh_prependfacet(facetT*, facetT**)
001635a0 t qh_printcentrum(_IO_FILE*, facetT*, double)
00160e80 t qh_printpointid(_IO_FILE*, char const*, int, double*, int)
001622a0 t qh_printspheres(_IO_FILE*, setT*, double)
0015b530 t qh_printsummary(_IO_FILE*)
00165e70 t qh_printvoronoi(_IO_FILE*, int, facetT*, setT*, unsigned int)
0013e550 t qh_projectinput()
0015d8c0 t qh_projectpoint(double*, facetT*, double)
0013db50 t qh_randomfactor()
0013dbc0 t qh_randommatrix(double*, int, double**)
00163960 t qh_readfeasible(int, char*)
00146580 t qh_removevertex(vertexT*)
0016c100 t qh_renamevertex(vertexT*, vertexT*, setT*, facetT*, facetT*)
0013dc90 t qh_rotatepoints(double*, int, int, double**)
0014d730 t qh_setaddsorted(setT**, void*)
0014c990 t qh_setdelsorted(setT*, void*)
0014d8d0 t qh_setduplicate(setT*, int)
0013ec70 t qh_sethalfspace(int, double*, double**, double*, double*, double*)
0016ce60 t qh_tracemerging()
0016cf10 t qh_updatetested(facetT*, facetT*)
0016d090 t qh_vertexridges(vertexT*)
0014c7d0 t qh_vertexsubset(setT*, setT*)
001d1ba0 t QuaternionAlign(Quaternion const&, Quaternion const&, Quaternion&)
001d2110 t QuaternionBlend(Quaternion const&, Quaternion const&, float, Quaternion&)
001d22e0 t QuaternionScale(Quaternion const&, float, Quaternion&)
001d1e50 t QuaternionSlerp(Quaternion const&, Quaternion const&, float, Quaternion&)
001d5050 t RangeCompressor(float, float, float, float)
001dbf10 t TextureToLinear(int)
001ced00 t VectorNormalize(Vector&)
001cf050 t VectorTransform(float const*, matrix3x4_t const&, float*)
001d18d0 t VectorYawRotate(Vector const&, float, Vector&)
001142b0 t V_FixupPathName(char*, unsigned int, char const*)
00114e60 t V_SplitWString2(wchar_t const*, wchar_t const**, int, CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >&)
00113960 t V_StripFilename(char*)
00113310 t V_UCS2ToUnicode(unsigned short const*, wchar_t*, int)
001133c0 t V_UnicodeToUCS2(wchar_t const*, int, char*, int)
001132c0 t V_UnicodeToUTF8(wchar_t const*, char*, int)
00113270 t V_UTF8ToUnicode(char const*, wchar_t*, int)
001d1280 t AddPointToBounds(Vector const&, Vector&, Vector&)
001cfd40 t ConcatTransforms(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
001afb50 t ivp_free_aligned(void*)
001afa40 t ivp_memory_check(void*)
001cf380 t MatricesAreEqual(matrix3x4_t const&, matrix3x4_t const&, float)
001cf2b0 t MatrixInitialize(matrix3x4_t&, Vector const&, Vector const&, Vector const&, Vector const&)
001d3300 t MatrixQuaternion(matrix3x4_t const&, Quaternion&)
00153470 t p_ab_quad_length(P_Sur_2D_Point*, P_Sur_2D_Point*, P_Sur_2D_Point*)
00107e20 t PackVCollideText(char const*, int, int*)
001d4d90 t Parabolic_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001524c0 t p_check_for_flat(IVP_Tri_Edge*, IVP_Tri_Edge*, float)
001b2ab0 t p_get_next_token()
0014f830 t qh_allstatistics()
00169860 t qh_copynonconvex(ridgeT*)
00148e10 t qh_createsimplex(setT*)
00146440 t qh_deletevisible()
00166560 t qh_facetvertices(facetT*, setT*, unsigned int)
00147af0 t qh_findbestfacet(double*, unsigned int, double*, unsigned int*)
0013c570 t qh_findbestsharp(double*, facetT**, double*, int*)
00169cb0 t qh_findbest_test(unsigned int, facetT*, facetT*, facetT**, double*, double*, double*)
001479f0 t qh_findfacet_all(double*, double*, unsigned int*, int*)
0016f0d0 t qh_flippedmerges(facetT*, unsigned int*)
00140050 t qh_initqhull_mem()
00148c70 t qh_makenewfacets(double*)
00145680 t qh_makenewplanes()
001457f0 t qh_matchneighbor(facetT*, int, int, int*)
00145700 t qh_matchvertices(int, setT*, int, setT*, int*, unsigned int*)
00144c00 t qh_memstatistics(_IO_FILE*)
0016b4c0 t qh_mergevertices(setT*, setT**)
0013d360 t qh_orientoutside(facetT*)
00164f10 t qh_printend4geom(_IO_FILE*, facetT*, int*, unsigned int)
00166bf0 t qh_printextremes(_IO_FILE*, facetT*, setT*, int)
00166460 t qh_printvdiagram(_IO_FILE*, int, facetT*, setT*, unsigned int)
00161280 t qh_printvertices(_IO_FILE*, char const*, setT*)
0013d930 t qh_projectpoints(signed char*, int, double*, int, int, double*, int)
0014d030 t qh_setappend_set(setT**, setT*)
0014cb20 t qh_setequal_skip(setT*, int, setT*, int)
0015e320 t qh_setfacetplane(facetT*)
00150c80 t qh_user_memsizes()
001d3330 t QuaternionAngles(Quaternion const&, RadianEuler&)
001d2eb0 t QuaternionAngles(Quaternion const&, QAngle&)
001d1ee0 t QuaternionInvert(Quaternion const&, Quaternion&)
001d2b30 t QuaternionLookAt(Vector const&, Vector const&, Quaternion&)
001d2c90 t QuaternionMatrix(Quaternion const&, matrix3x4_t&)
001d2e30 t QuaternionMatrix(Quaternion const&, Vector const&, matrix3x4_t&)
00104490 t SetCollisionPair(void*)
001cffc0 t SignbitsForPlane(cplane_t*)
001d33a0 t Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, Vector&, Vector&)
0011be90 t StrLessSensitive(char const* const&, char const* const&)
0010fbe0 t Sys_UnloadModule(CSysModule*)
00101e30 t TraceGetExtent_r(IVP_Compact_Ledgetree_Node const*, CTraceIVP&, Vector const&, float&, Vector&)
001cf0f0 t VectorITransform(float const*, matrix3x4_t const&, float*)
00114280 t V_IsAbsolutePath(char const*)
00113800 t V_StripExtension(char const*, char*, int)
001d3270 t BasisToQuaternion(Vector const&, Vector const&, Vector const&, Quaternion&)
0010b270 t CharacterSetBuild(characterset_t*, char const*)
000ef8d0 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, float, float, float, float, IVP_U_Float_Point*)
000efaf0 t ComputeController(IVP_U_Float_Point&, IVP_U_Float_Point const&, IVP_U_Float_Point const&, float, float, IVP_U_Float_Point*)
0010cbe0 t ConVar_PrintFlags(ConCommandBase const*)
0010be50 t ConVar_Unregister()
000cc690 t ConvertMatrixToHL(IVP_U_Matrix const&, matrix3x4_t&)
000f7910 t CreateVirtualMesh(virtualmeshparams_t const&)
001d8990 t FindPointInPlanes(float const*, int)
001b2630 t GBS_remove_escape(char*)
001d8dc0 t GetTempPolyhedron(unsigned short, unsigned short, unsigned short, unsigned short)
001b3b50 t ivp_indent_output()
00153430 t p_count_reachable(P_Sur_2D_Point*)
001691a0 t qh_appendmergeset(facetT*, facetT*, mergeType, double*)
00149950 t qh_check_bestdist()
00145380 t qh_facetintersect(facetT*, facetT*, int*, int*, int)
0016d1b0 t qh_find_newvertex(vertexT*, setT*, setT*)
0014fcf0 t qh_freestatistics()
0016a020 t qh_hashridge_find(setT*, int, ridgeT*, vertexT*, vertexT*, int*)
0014fd00 t qh_initstatistics()
00141280 t qh_initthresholds(char*)
0016a2c0 t qh_mark_dupridges(facetT*)
00145c10 t qh_matchnewfacets()
00144910 t qh_meminitbuffers(int, int, int, int, int)
0016e930 t qh_mergecycle_all(facetT*, unsigned int*)
0016b090 t qh_mergeneighbors(facetT*, facetT*)
00159870 t qh_partitionpoint(double*, facetT*)
00150ba0 t qh_printfacetlist(facetT*, setT*, unsigned int)
0014a6c0 t qh_printhashtable(_IO_FILE*)
001623a0 t qh_printline3geom(_IO_FILE*, double*, double*, double*)
00162540 t qh_printpointvect(_IO_FILE*, double*, double*, double*, double, double*)
0014ff00 t qh_printstatlevel(_IO_FILE*, int, int)
00160fa0 t qh_printvdiagram2(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), setT*, qh_RIDGE, unsigned int)
00168cc0 t qh_produce_output()
0016ef10 t qh_reducevertices()
0014c760 t qh_setvoronoi_all()
00146b40 t qh_updatevertices()
0013f0c0 t qh_voronoi_center(int, setT*)
000ee9a0 t SavePhysicsObject(physsaveparams_t const&, CPhysicsObject*)
000f2d50 t SavePhysicsSpring(physsaveparams_t const&, CPhysicsSpring*)
001d09e0 t SetIdentityMatrix(matrix3x4_t&)
00104390 t SetSelfCollisions(void*)
001d1b20 t SmoothCurve_Tweak(float, float, float)
001dbbc0 t SrgbGammaToLinear(float)
001dbc50 t SrgbLinearToGamma(float)
00112280 t StringAfterPrefix(char const*, char const*)
0010fc70 t Sys_LoadInterface(char const*, char const*, CSysModule**, void**)
00113ec0 t V_ComposeFileName(char const*, char const*, char*, int)
00113b80 t V_ExtractFilePath(char const*, char*, int)
001149f0 t V_StringToColor32(color32_s*, char const*)
001dbce0 t X360GammaToLinear(float)
001dbe40 t X360LinearToGamma(float)
001d4d10 t BSpline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001d5c20 t CalcDistanceToLine(Vector const&, Vector const&, Vector const&, float*)
001d34e0 t Catmull_Rom_Spline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001d9040 t ClipLinkedGeometry(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, float const*, int, float, bool)
000cc520 t ConvertMatrixToIVP(matrix3x4_t const&, IVP_U_Matrix&)
000f79a0 t DestroyVirtualMesh(CPhysCollide*)
000dd2d0 t GetOppositeSynapse(IVP_Synapse_Friction*)
001db2f0 t GetSIMDRandContext()
0011ba60 t HashStringCaseless(char const*)
001afb10 t ivp_malloc_aligned(int, int)
001d6590 t MathLib_MMXEnabled()
001d65a0 t MathLib_SSEEnabled()
001b25e0 t p_make_string_fast(char const*, ...)
001b2b00 t p_read_first_token(_IO_FILE*)
00144f40 t qh_attachnewfacets()
0015f960 t qh_eachvoronoi_all(_IO_FILE*, void (*)(_IO_FILE*, vertexT*, vertexT*, setT*, unsigned int), unsigned int, qh_RIDGE, unsigned int)
00149340 t qh_initialvertices(int, setT*, double*, int)
00140110 t qh_initqhull_start(_IO_FILE*, _IO_FILE*, _IO_FILE*)
001483c0 t qh_matchduplicates(facetT*, int, int, int*)
0016a490 t qh_maydropneighbor(facetT*)
0016ded0 t qh_merge_nonconvex(facetT*, facetT*, mergeType)
0016b2e0 t qh_mergevertex_del(vertexT*, facetT*, facetT*)
00166ab0 t qh_printextremes_d(_IO_FILE*, facetT*, setT*, int)
00160380 t qh_printfacet2geom(_IO_FILE*, facetT*, double*)
001604e0 t qh_printfacet2math(_IO_FILE*, facetT*, int)
001607f0 t qh_printfacet3math(_IO_FILE*, facetT*, int)
00166d10 t qh_printpoints_out(_IO_FILE*, facetT*, setT*, int)
00162640 t qh_printpointvect2(_IO_FILE*, double*, double*, double*, double)
001501a0 t qh_printstatistics(_IO_FILE*, char const*)
001666e0 t qh_printvertexlist(_IO_FILE*, char const*, facetT*, setT*, unsigned int)
00167240 t qh_printvneighbors(_IO_FILE*, facetT*, setT*, unsigned int)
0014d410 t qh_setdelnthsorted(setT*, int)
0014ca70 t qh_setequal_except(setT*, void*, setT*, void*)
0014d9b0 t qh_settempfree_all()
0016caf0 t qh_test_vneighbors()
0014aba0 t qh_vertexintersect(setT**, setT*)
0014c690 t qh_vertexneighbors()
0011be60 t StrLessInsensitive(char const* const&, char const* const&)
0010fc30 t Sys_GetFactoryThis()
00113890 t V_DefaultExtension(char*, char const*, int)
001139e0 t V_FixDoubleSlashes(char*)
00113c00 t V_GetFileExtension(char const*)
00113f60 t V_MakeAbsolutePath(char*, int, char const*, char const*)
001140d0 t V_MakeRelativePath(char const*, char const*, char*, int)
00113ce0 t V_RemoveDotSlashes(char*, char)
00114940 t V_StringToIntArray(int*, int, char const*)
001d2f70 t AxisAngleQuaternion(Vector const&, float, Quaternion&)
000cc900 t ConvertRotationToHL(IVP_U_Quat const&, QAngle&)
000cc730 t ConvertRotationToHL(IVP_U_Matrix3 const&, QAngle&)
000edda0 t CreatePhysicsObject(CPhysicsEnvironment*, CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*, bool)
000ee000 t CreatePhysicsSphere(CPhysicsEnvironment*, float, int, Vector const&, QAngle const&, objectparams_t*, bool)
00135470 t debug_sphere_output(IVV_Sphere*)
001d4260 t Hermite_SplineBasis(float, float*)
0017e990 t ivp_print_mi_matrix(int, int, IVP_MI_Vector**)
001dbf80 t LinearToScreenGamma(float)
001d65b0 t MathLib_SSE2Enabled()
000cd6d0 t PackLedgeIntoBuffer(packedhull_t*, CUtlBuffer&, IVP_Compact_Ledge const*, virtualmeshlist_t const&)
000ced50 t Physics2GetThreadId()
001475e0 t qh_checkflipped_all(facetT*)
00169d80 t qh_findbestneighbor(facetT*, double*, double*, double*)
00159bc0 t qh_partitionvisible(unsigned int, int*)
00167590 t qh_printextremes_2d(_IO_FILE*, facetT*, setT*, int)
001616e0 t qh_printfacetheader(_IO_FILE*, facetT*)
00161410 t qh_printfacetridges(_IO_FILE*, facetT*)
0016d590 t qh_redundant_vertex(vertexT*)
0014cf10 t qh_setappend2ndlast(setT**, void*)
0013ef70 t qh_sethalfspace_all(int, int, double*, double*)
0016c370 t qh_test_appendmerge(facetT*, facetT*)
001d2600 t QuaternionAngleDiff(Quaternion const&, Quaternion const&)
000f0d10 t QuaternionAxisAngle(IVP_U_Quat const&, Vector&, float&)
001d2ee0 t QuaternionAxisAngle(Quaternion const&, Vector&, float&)
001d1ea0 t QuaternionConjugate(Quaternion const&, Quaternion&)
001d1f90 t QuaternionNormalize(Quaternion&)
001dbef0 t SrgbGammaTo360Gamma(float)
000ccae0 t TransformIVPToLocal(IVP_U_Point&, IVP_Real_Object*, bool)
000cc930 t TransformIVPToLocal(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
000cccb0 t TransformLocalToIVP(IVP_U_Point&, IVP_Real_Object*, bool)
000ccb20 t TransformLocalToIVP(IVP_U_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
000cccf0 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Point&, IVP_Real_Object*, bool)
000cce80 t TransformLocalToIVP(IVP_U_Float_Point const&, IVP_U_Float_Point&, IVP_Real_Object*, bool)
001d5fb0 t CalcDistanceToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
001d6c30 t ComputeTrianglePlane(Vector const&, Vector const&, Vector const&, Vector&, float&)
000cc660 t ConvertRotationToIVP(QAngle const&, IVP_U_Quat&)
000cc5d0 t ConvertRotationToIVP(QAngle const&, IVP_U_Matrix3&)
000dd960 t CreateObjectPairHash()
000d42b0 t CreateSurfaceManager(CPhysCollide const*, short&)
001d8470 t GetInterpolationData(float const*, float const*, int, int, float, bool, float*, float*, float*)
000d8fe0 t IsExternalConstraint(IVP_Controller*, void*)
000ee1d0 t MaterialIndexDataOps()
001549f0 t p_link_triangle_self(IVP_Triangle*)
0015af70 t qh_build_withrestart()
0014f860 t qh_collectstatistics()
0013c0f0 t qh_facetarea_simplex(int, double*, setT*, vertexT*, unsigned int, double*, double*)
0013fed0 t qh_initqhull_buffers()
00140440 t qh_initqhull_globals(double*, int, int, unsigned int)
0016e5a0 t qh_mergecycle_facets(facetT*, facetT*)
0016a980 t qh_mergecycle_ridges(facetT*, facetT*)
00159530 t qh_partitioncoplanar(double*, facetT*, double*)
001609e0 t qh_printfacet3vertex(_IO_FILE*, facetT*, int)
00168f90 t qh_printneighborhood(_IO_FILE*, int, facetT*, facetT*, unsigned int)
0016bf70 t qh_renameridgevertex(ridgeT*, vertexT*, vertexT*)
0015da10 t qh_sethyperplane_det(int, double**, double*, unsigned int, double*, double*, unsigned int*)
001d2460 t QuaternionDotProduct(Quaternion const&, Quaternion const&)
000eebf0 t RestorePhysicsObject(physrestoreparams_t const&, CPhysicsObject**)
000f2db0 t RestorePhysicsSpring(physrestoreparams_t const&, CPhysicsSpring**)
000d8f00 t SeedRandomGenerators()
000d6c80 t set_4x4_column_major(IVP_U_Matrix&, float const*)
00104370 t SetMassCenterPointer(void*)
001cebd0 t _VectorNormalizeFast(Vector&)
001137d0 t V_StripTrailingSlash(char*)
001d04c0 t AngleVectorsTranspose(QAngle const&, Vector*, Vector*, Vector*)
001d5ca0 t CalcDistanceSqrToLine(Vector const&, Vector const&, Vector const&, float*)
001d5900 t CalcSqrDistanceToAABB(Vector const&, Vector const&, Vector const&)
001dbfc0 t ColorRGBExp32ToVector(ColorRGBExp32 const&, Vector&)
001152a0 t ConnectTier1Libraries(void* (**)(char const*, int*), int)
000da2d0 t CreateFixedConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
000e1910 t CreateFluidController(IVP_Environment*, CPhysicsObject*, fluidparams_t*)
000da8c0 t CreateHingeConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
0010b470 t DefaultCompletionFunc(char const*, char (*) [64])
000f0da0 t GetObjectPosition_IVP(IVP_U_Point&, IVP_Real_Object*)
001cff50 t GreatestCommonDivisor(int, int)
0018e5c0 t out_friction_info_obj(IVP_Core*)
00157bf0 t P_THREE_CHECK_INTRUDE(int, int, int, int, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge**, IVP_U_Hesse*, IVP_U_Hesse*, IVP_Tri_Edge**, float*, IVP_U_Point&, IVP_Intrusion_Status*)
0013fd70 t qh_init_qhull_command(int, char**)
00146690 t qh_makenew_simplicial(facetT*, vertexT*, int*)
001504e0 t qh_printallstatistics(_IO_FILE*, char const*)
00166760 t qh_printhelp_singular(_IO_FILE*)
0016d000 t qh_vertexridges_facet(vertexT*, facetT*, setT**)
000d9070 t SavePhysicsConstraint(physsaveparams_t const&, CPhysicsConstraint*)
001d13f0 t SolveInverseQuadratic(float, float, float, float, float, float, float&, float&, float&)
0010f980 t Sys_IsDebuggerPresent()
001dc030 t VectorToColorRGBExp32(Vector const&, ColorRGBExp32&)
001145b0 t V_GetCurrentDirectory(char*, int)
001145e0 t V_SetCurrentDirectory(char const*)
00113b40 t V_UnqualifiedFileName(char const*)
001d6840 t AngleNormalizePositive(float)
001d59e0 t CalcClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&)
001d5b90 t CalcClosestPointOnLine(Vector const&, Vector const&, Vector const&, Vector&, float*)
001d6a10 t ClipLineSegmentToPlane(Vector const&, Vector const&, Vector*, Vector*, float)
000e2520 t CreateFrictionSnapshot(IVP_Real_Object*)
000db610 t CreateLengthConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
000e9f70 t CreateMotionController(CPhysicsEnvironment*, IMotionEvent*)
000eea20 t CreateObjectFromBuffer(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, bool)
000f0c40 t CreatePlayerController(CPhysicsObject*)
000d9f70 t CreatePulleyConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
000f1de0 t CreateShadowController(CPhysicsObject*, bool, bool)
000e25b0 t DeleteAllFrictionPairs(IVP_Real_Object*, IVP_Real_Object*)
001db680 t GammaToLinearFullRange(float)
001154f0 t GetNoEscCharConversion()
001324d0 t hk_precache_invert_5x5()
00153b40 t ivp_check_for_opposite(IVP_Hash*, IVP_Poly_Point*, IVP_Poly_Point*, IVP_Tri_Edge*)
001db6c0 t LinearToGammaFullRange(float)
000d42d0 t OutputCollideDebugInfo(CPhysCollide const*)
00152400 t p_del_double_triangles(IVP_Triangle**, IVP_Triangle**, IVP_Triangle**)
0015ebb0 t qh_compare_vertexpoint(void const*, void const*)
0016c750 t qh_getmergeset_initial(facetT*)
0016d650 t qh_rename_sharedvertex(vertexT*, facetT*)
0015e140 t qh_sethyperplane_gauss(int, double**, double*, unsigned int, double*, double*, unsigned int*)
0014d1f0 t qh_setnew_delnthsorted(setT*, int, int, int)
0014ab00 t qh_vertexintersect_new(setT*, setT*)
001d20b0 t QuaternionBlendNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
001d1c30 t QuaternionSlerpNoAlign(Quaternion const&, Quaternion const&, float, Quaternion&)
001db340 t ReleaseSIMDRandContext(int)
001d68d0 t RotationDeltaAxisAngle(QAngle const&, QAngle const&, Vector&, float&)
00113c50 t V_ExtractFileExtension(char const*, char*, int)
001126d0 t V_normalizeFloatString(char*)
001d5ad0 t CalcClosestPointToLineT(Vector const&, Vector const&, Vector const&, Vector&)
001d6020 t CalcDistanceSqrToLine2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
001d72b0 t ClipPolyToPlane_Precise(double*, int, double*, double const*, double, double)
0010cec0 t ConVar_PrintDescription(ConCommandBase const*)
0010f870 t CreateInterfaceInternal(char const*, int*)
000db2a0 t CreateRagdollConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
000d9b70 t CreateSlidingConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
000f6930 t CreateVehicleController(CPhysicsEnvironment*, CPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
00106880 t CreateVPhysicsKeyParser(char const*, bool)
001d49e0 t Cubic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000e2590 t DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
000f0ca0 t DestroyPlayerController(IPhysicsPlayerController*)
000f8f00 t GetPhysics2SupportLevel()
001d4490 t Kochanek_Bartels_Spline(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00155280 t p_calc_min_intrude_dist(IVP_Triangle*, IVP_Intrusion_Status*, float)
0016a6a0 t qh_mergecycle_neighbors(facetT*, facetT*)
0016ebc0 t qh_merge_degenredundant()
00160d40 t qh_printhelp_degenerate(_IO_FILE*)
0016bdc0 t qh_remove_extravertices(facetT*)
001d2020 t QuaternionIdentityBlend(Quaternion const&, float, Quaternion&)
001d5f30 t CalcClosestPointOnLine2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
001d7fe0 t CalcTriangleTangentSpace(Vector const&, Vector const&, Vector const&, Vector2D const&, Vector2D const&, Vector2D const&, Vector&, Vector&)
001cfc60 t ConcatTransforms_Aligned(matrix3x4_t const&, matrix3x4_t const&, matrix3x4_t&)
000dddd0 t CreatePhysicsEnvironment()
00105220 t DestroyVPhysicsKeyParser(IVPhysicsKeyParser*)
00115370 t DisconnectTier1Libraries()
001d8a50 t FindConvexShapeLooseAABB(float const*, int, Vector*, Vector*)
001154e0 t GetCStringCharConversion()
000dd2f0 t GetOppositeSynapseObject(IVP_Synapse_Friction*)
000edc20 t GetWorldCoordFromSynapse(IVP_Synapse_Friction*, IVP_U_Point&)
000eeb50 t PostRestorePhysicsObject()
00169900 t qh_degen_redundant_facet(facetT*)
00146810 t qh_makenew_nonsimplicial(facetT*, vertexT*, int*)
0016ad20 t qh_mergecycle_vneighbors(facetT*, facetT*)
0016b360 t qh_mergevertex_neighbors(facetT*, facetT*)
0015fea0 t qh_order_vertexneighbors(vertexT*)
001d86b0 t RandomVectorInUnitCircle(Vector2D*)
001d8580 t RandomVectorInUnitSphere(Vector*)
000d9240 t RestorePhysicsConstraint(physrestoreparams_t const&, CPhysicsConstraint**)
001d5ea0 t CalcClosestPointToLineT2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&)
001d5db0 t CalcDistanceToLineSegment(Vector const&, Vector const&, Vector const&, float*)
000f14f0 t ComputeShadowControllerHL(CPhysicsObject*, hlshadowcontrol_params_t const&, float, float)
000ccef0 t ConvertCoordinateAxisToHL(int)
0018ea50 t debug_out_friction_system(IVP_Friction_System*)
0016b640 t qh_neighbor_intersections(vertexT*)
001601d0 t qh_printfacet2geom_points(_IO_FILE*, double*, double*, facetT*, double, double*)
001605b0 t qh_printfacet3geom_points(_IO_FILE*, setT*, facetT*, double, double*)
001d3790 t Catmull_Rom_Spline_Tangent(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000f0e60 t ComputeShadowControllerIVP(IVP_Real_Object*, shadowcontrol_params_t&, float, float)
000cced0 t ConvertCoordinateAxisToIVP(int)
000db960 t CreateBallsocketConstraint(IVP_Environment*, CPhysicsObject*, CPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
001d7d70 t GeneratePerspectiveFrustum(Vector const&, QAngle const&, float, float, float, float, Frustum_t&)
001d76e0 t GeneratePerspectiveFrustum(Vector const&, Vector const&, Vector const&, Vector const&, float, float, float, float, VPlane*)
0017c350 t ivp_debug_show_real_values(IVP_Buoyancy_Input const*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*)
000d95a0 t SavePhysicsConstraintGroup(physsaveparams_t const&, CPhysicsConstraintGroup*)
000e1be0 t SavePhysicsFluidController(physsaveparams_t const&, CPhysicsFluidController*)
00114b60 t V_TranslateLineFeedsToUnix(char*)
001d6110 t CalcDistanceToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
001d39f0 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001d3c50 t Catmull_Rom_Spline_Integral(Vector const&, Vector const&, Vector const&, Vector const&, Vector&)
000f1430 t ConvertShadowControllerToHL(shadowcontrol_params_t const&, hlshadowcontrol_params_t&)
001d4f00 t Parabolic_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001820b0 t p_calc_2d_distances_to_axis(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
000ea3f0 t SavePhysicsMotionController(physsaveparams_t const&, IPhysicsMotionController*)
000f1fa0 t SavePhysicsPlayerController(physsaveparams_t const&, CPlayerController*)
000f1e70 t SavePhysicsShadowController(physsaveparams_t const&, IPhysicsShadowController*)
0010fbd0 t Sys_RunningWithDebugModules()
001d0f90 t TransformAnglesToLocalSpace(QAngle const&, matrix3x4_t const&)
001d0ef0 t TransformAnglesToWorldSpace(QAngle const&, matrix3x4_t const&)
001cf8a0 t VectorPerpendicularToVector(Vector const&, Vector*)
001d5e30 t CalcDistanceSqrToLineSegment(Vector const&, Vector const&, Vector const&, float*)
001d3d30 t Catmull_Rom_Spline_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000d6ce0 t ConvertHavanaLocalMatrixToHL(hk_Transform const&, matrix3x4_t&, IVP_Real_Object*)
000f1370 t ConvertShadowControllerToIVP(hlshadowcontrol_params_t const&, shadowcontrol_params_t&)
000f8f20 t CreatePhysics2PhysXInterface()
000d8f90 t CreatePhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
001d9850 t GeneratePolyhedronFromPlanes(float const*, int, float, bool)
000d8f80 t GetClientDataForHkConstraint(hk_Breakable_Constraint*)
001d0aa0 t MatrixBuildRotationAboutAxis(Vector const&, float, matrix3x4_t&)
00169a70 t qh_degen_redundant_neighbors(facetT*, facetT*)
001d29a0 t QuaternionAverageExponential(Quaternion&, int, Quaternion const*, float const*)
000f69a0 t SavePhysicsVehicleController(physsaveparams_t const&, CVehicleController*)
001d5d10 t CalcClosestPointOnLineSegment(Vector const&, Vector const&, Vector const&, Vector&, float*)
001d4030 t Catmull_Rom_Spline_NormalizeX(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
001bff60 t ivp_core_get_surface_speed_os(IVP_Core*, IVP_Real_Object*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
00162fb0 t qh_printfacet3geom_simplicial(_IO_FILE*, facetT*, double*)
00162b20 t qh_printfacet4geom_simplicial(_IO_FILE*, facetT*, double*)
000dba30 t RestorePhysicsConstraintGroup(physrestoreparams_t const&, CPhysicsConstraintGroup**)
000e1bf0 t RestorePhysicsFluidController(physrestoreparams_t const&, CPhysicsFluidController**)
000d6a70 t TransformHavanaLocalToHLWorld(hk_Vector3 const&, IVP_Real_Object*, bool)
000d69e0 t TransformHLWorldToHavanaLocal(Vector const&, IVP_Real_Object*)
001d6180 t CalcDistanceSqrToLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, float*)
0011bac0 t HashStringCaselessConventional(char const*)
00162700 t qh_printhyperplaneintersection(_IO_FILE*, facetT*, facetT*, setT*, double*)
000cc190 t QuinticInterpolatingPolynomial(float)
000ea150 t RestorePhysicsMotionController(physrestoreparams_t const&, IPhysicsMotionController**)
000f1fb0 t RestorePhysicsPlayerController(physrestoreparams_t const&, CPlayerController**)
000f1ed0 t RestorePhysicsShadowController(physrestoreparams_t const&, IPhysicsShadowController**)
001d1540 t SolveInverseQuadraticMonotonic(float, float, float, float, float, float, float&, float&, float&)
001122d0 t StringAfterPrefixCaseSensitive(char const*, char const*)
00114860 t V_AddBackSlashesToSpecialChars(char const*)
001d6080 t CalcClosestPointOnLineSegment2D(Vector2D const&, Vector2D const&, Vector2D const&, Vector2D&, float*)
000ef870 t ComputePDControllerCoefficients(float*, float, float, float)
000f8ee0 t CreatePhysics2DisablerInterface()
00160c00 t qh_printfacetNvertex_simplicial(_IO_FILE*, facetT*, int)
000f6a00 t RestorePhysicsVehicleController(physrestoreparams_t const&, CVehicleController**)
001d1740 t SolveInverseReciprocalQuadratic(float, float, float, float, float, float, float&, float&, float&)
001d5a50 t CalcSqrDistAndClosestPointOnAABB(Vector const&, Vector const&, Vector const&, Vector&, float&)
00163280 t qh_printfacet3geom_nonsimplicial(_IO_FILE*, facetT*, double*)
00162d40 t qh_printfacet4geom_nonsimplicial(_IO_FILE*, facetT*, double*)
001d61e0 t CalcLineToLineIntersectionSegment(Vector const&, Vector const&, Vector const&, Vector const&, Vector*, Vector*, float*, float*)
000d6b40 t ConvertHLLocalMatrixToHavanaLocal(matrix3x4_t const&, hk_Transform&)
001d8e70 t ConvertLinkedGeometryToPolyhedron(GeneratePolyhedronFromPlanes_UnorderedPolygonLL*, GeneratePolyhedronFromPlanes_UnorderedLineLL*, GeneratePolyhedronFromPlanes_UnorderedPointLL*, bool)
000db9d0 t PostRestorePhysicsConstraintGroup()
001d4840 t Kochanek_Bartels_Spline_NormalizeX(float, float, float, Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00160a90 t qh_printfacetNvertex_nonsimplicial(_IO_FILE*, facetT*, int, int)
000f3de0 t ShouldOverrideWheelContactFriction(float*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
001d3eb0 t Catmull_Rom_Spline_Integral_Normalize(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
000f1ee0 t RestorePhysicsShadowControllerInternal(physrestoreparams_t const&, IPhysicsShadowController**, CPhysicsObject*)
000eead0 t CreateObjectFromBuffer_UseExistingMemory(CPhysicsEnvironment*, void*, unsigned char*, unsigned int, CPhysicsObject*)
001b6920 t ivp_optimiztion_center_check_successfull()
000f2000 t ControlPhysicsPlayerControllerAttachment_Silent(IPhysicsPlayerController*, IVP_Real_Object*, bool)
000f1fc0 t ControlPhysicsShadowControllerAttachment_Silent(IPhysicsShadowController*, IVP_Real_Object*, bool)
001d1980 t Bias(float, float)
001d1a10 t Gain(float, float)
0011bb60 t Hash4(void const*)
0011bbb0 t Hash8(void const*)
         U ConMsg(char const*, ...)
         U DevMsg(char const*, ...)
00162120 t dfacet(unsigned int)
0011bc40 t Hash12(void const*)
0011bd00 t Hash16(void const*)
001b2b50 t p_atof(char const*)
001b2b90 t p_atoi(char const*)
001afb00 t p_free(void*)
001cf650 t Q_log2(unsigned int)
001ceca0 t _sqrtf(float)
00112520 t V_atof(char const*)
00112500 t V_atoi(char const*)
001d4a60 t BSpline(Vector const&, Vector const&, Vector const&, Vector const&, float, Vector&)
00161210 t dvertex(unsigned int)
0011bb10 t HashInt(int)
0013dad0 t qh_rand()
001cecc0 t _rsqrtf(float)
00107c20 t TestKVs(packedkv_t*, char const*)
001d65d0 t Approach(float, float, float)
001d7680 t CalcFovX(float, float)
001d75f0 t CalcFovY(float, float)
001d75b0 t CeilPow2(int)
001d8360 t HSVtoRGB(Vector const&, Vector&)
001b0bf0 t ivp_rand()
001afab0 t p_calloc(int, int)
001afaa0 t p_malloc(unsigned int)
001b2990 t p_strcmp(char const*, char const*)
001b24b0 t p_strdup(char const*)
001b2490 t p_strlen(char const*)
0013f660 t qh_clock()
001492d0 t qh_point(int)
0015b1f0 t qh_qhull()
0014cc80 t qh_setin(setT*, void*)
0013db20 t qh_srand(int)
001db270 t RandSIMD(int)
001db360 t RandSIMD()
001d8280 t RGBtoHSV(Vector const&, Vector&)
00112300 t V_atoi64(char const*)
001d6700 t AngleDiff(float, float)
001d75d0 t FloorPow2(int)
001a97f0 t get_float()
0011bdf0 t HashBlock(void const*, unsigned int)
0017b100 t IsCarBody(IVP_Core*)
001b0c20 t ivp_srand(int)
00104590 t nexttoken(char*, char const*, char)
000cc400 t ParseFile(char*, char*, bool*)
000cc1f0 t ParseFile(char const*, char*, bool*, characterset_t*)
001101b0 t pathmatch(char const*, char**, bool, char*, unsigned int)
001b2a70 t p_get_num()
001afaf0 t p_realloc(void*, int)
001b29c0 t p_str_tok(char*, char const*)
001402e0 t qh_init_A(_IO_FILE*, _IO_FILE*, _IO_FILE*, int, char**)
001417c0 t qh_init_B(double*, int, int, unsigned int)
0013d6e0 t qh_maxmin(double*, int, int)
00140340 t qh_option(char const*, int*, double*)
0014c8c0 t qh_setdel(setT*, void*)
0014cd60 t qh_setnew(int)
00150160 t qh_stddev(int, double, double, double*)
001411e0 t qh_strtod(char const*, char**)
00141230 t qh_strtol(char const*, char**)
001bdcf0 t ReportObj(IVP_Synapse_Real*, CFmtStrN<256>&)
00111ea0 t _V_memcmp(void const*, void const*, int)
00111e80 t _V_memcpy(void*, void const*, int)
00111e70 t _V_memset(void*, int, int)
00111f60 t _V_strcmp(char const*, char const*)
00111ef0 t _V_strcpy(char*, char const*)
00112870 t V_stristr(char*, char const*)
00112750 t V_stristr(char const*, char const*)
00114720 t V_StrLeft(char const*, int, char*, int)
00111ed0 t _V_strlen(char const*)
00112d50 t V_strncat(char*, char const*, unsigned int, int)
00112ae0 t V_strnchr(char const*, char, int)
00112130 t V_strncmp(char const*, char const*, int)
00112b30 t V_strncpy(char*, char const*, int)
00112190 t V_strnlwr(char*, unsigned int)
00112000 t _V_strstr(char const*, char const*)
00112010 t _V_strupr(char*)
00111f70 t _V_wcscmp(wchar_t const*, wchar_t const*)
00112880 t V_wcsistr(wchar_t const*, wchar_t const*)
00112970 t V_wcsistr(wchar_t*, wchar_t const*)
00111f00 t _V_wcslen(wchar_t const*)
00112dd0 t V_wcsncat(wchar_t*, wchar_t const*, unsigned int, int)
00112b70 t V_wcsncpy(wchar_t*, wchar_t const*, int)
001120b0 t _V_wcsupr(char const*, int, wchar_t*)
         U operator delete[](void*)@@GLIBCXX_3.4
         U operator delete(void*)@@GLIBCXX_3.4
00267c00 b guard variable for datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
00267068 b guard variable for datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
00267b88 b guard variable for datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
00267b08 b guard variable for datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
00267b30 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
00267b58 b guard variable for datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
00267090 b guard variable for datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
00267bd8 b guard variable for datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
00267bb0 b guard variable for datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
00267ad8 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
00267b00 b guard variable for datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
00267b60 b guard variable for datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
00267920 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
00267a30 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
002671c8 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
002671f0 b guard variable for datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
00267268 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
00267240 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
002678c0 b guard variable for datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
002672b8 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
00267218 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
002679c0 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
002679e8 b guard variable for datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
00267150 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
00267ab0 b guard variable for datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
002671a0 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
00267178 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
00267998 b guard variable for datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
00267290 b guard variable for datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
00267128 b guard variable for datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
00268b50 b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
0026e080 b guard variable for IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
00265668 b guard variable for NXU::ConvexHCrop(NXU::ConvexH&, NXU::Plane const&)::vertscoplanar
00265680 b guard variable for NXU::ConvexHCrop(NXU::ConvexH&, NXU::Plane const&)::edgesplit
00265608 b guard variable for NXU::RotationArc(NXU::float3, NXU::float3)::q
00265638 b guard variable for NXU::DistanceBetweenLines(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3*, NXU::float3*)::cp
00265620 b guard variable for NXU::PlaneLineIntersection(NXU::Plane const&, NXU::float3 const&, NXU::float3 const&)::dif
002655a8 b guard variable for NXU::Yaw(NXU::Quaternion const&)::v
002655c0 b guard variable for NXU::Pitch(NXU::Quaternion const&)::v
002655f0 b guard variable for NXU::Plane::Transform(NXU::float3 const&, NXU::Quaternion const&)::origin
002655d8 b guard variable for NXU::Plane::Transform(NXU::float3 const&, NXU::Quaternion const&)::newnormal
00265650 b guard variable for NXU::PolyHit(NXU::float3 const*, int, NXU::float3 const&, NXU::float3 const&, NXU::float3*, NXU::float3*)::the_point
0026a2e8 b guard variable for hk_Memory::get_instance()::s_memory_instance
0026a1a8 b guard variable for CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00267610 b guard variable for CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00268978 b guard variable for CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0026a1c8 b guard variable for CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00266b40 b g_BreakSet
001043e0 t ReadVector(char const*, Vector&)
002689c0 b s_BreakSet
00268488 b s_disabler
0026884c b nullsurface
00268b5c b s_bShowDiag
002689ac b s_nCVarFlag
00266d44 b vec2_origin
00266d58 b vec2_origin
00266d8c b vec2_origin
00266df8 b vec2_origin
00266f8c b vec2_origin
00266ff0 b vec2_origin
002670b8 b vec2_origin
002672f4 b vec2_origin
00267328 b vec2_origin
00267530 b vec2_origin
00267574 b vec2_origin
002675a8 b vec2_origin
002675e0 b vec2_origin
00267878 b vec2_origin
002678e8 b vec2_origin
0026795c b vec2_origin
002679f4 b vec2_origin
00267a58 b vec2_origin
00267c28 b vec2_origin
00267ce0 b vec2_origin
00267d14 b vec2_origin
00267d48 b vec2_origin
00267d7c b vec2_origin
00267db0 b vec2_origin
00267de4 b vec2_origin
00267e18 b vec2_origin
00267e4c b vec2_origin
00267e80 b vec2_origin
00267eb4 b vec2_origin
00267ee8 b vec2_origin
00267f1c b vec2_origin
00267f50 b vec2_origin
00267f84 b vec2_origin
00267fb8 b vec2_origin
00267fec b vec2_origin
00268494 b vec2_origin
002684c8 b vec2_origin
002684fc b vec2_origin
00268530 b vec2_origin
00268564 b vec2_origin
00268598 b vec2_origin
002685cc b vec2_origin
00268600 b vec2_origin
00268634 b vec2_origin
00268668 b vec2_origin
0026869c b vec2_origin
002686d0 b vec2_origin
00268704 b vec2_origin
00268738 b vec2_origin
0026876c b vec2_origin
002687a0 b vec2_origin
002687d4 b vec2_origin
00268808 b vec2_origin
002688bc b vec2_origin
002688f0 b vec2_origin
00268948 b vec2_origin
00268984 b vec2_origin
00268b0c b vec2_origin
00268b24 b vec2_origin
00268da4 b vec2_origin
00268dd4 b vec2_origin
0026a15c b vec2_origin
0026a170 b vec2_origin
0026a194 b vec2_origin
0026a1b4 b vec2_origin
0026a1d4 b vec2_origin
0026a1e8 b vec2_origin
0026a1fc b vec2_origin
0026a210 b vec2_origin
0026a224 b vec2_origin
0026a238 b vec2_origin
0026a24c b vec2_origin
0026a260 b vec2_origin
0026a274 b vec2_origin
0026a288 b vec2_origin
0026a29c b vec2_origin
0026a2b0 b vec2_origin
0026a2c4 b vec2_origin
0026a2d8 b vec2_origin
0026a2f8 b vec2_origin
0026a30c b vec2_origin
0026a320 b vec2_origin
0026a334 b vec2_origin
0026a348 b vec2_origin
0026a35c b vec2_origin
0026a370 b vec2_origin
0026a384 b vec2_origin
0026a398 b vec2_origin
0026a3ac b vec2_origin
0026a3d4 b vec2_origin
0026a3ec b vec2_origin
0026a400 b vec2_origin
0026a414 b vec2_origin
0026a428 b vec2_origin
0026a43c b vec2_origin
0026ae44 b vec2_origin
0026aecc b vec2_origin
0026aee0 b vec2_origin
0026aef4 b vec2_origin
0026af08 b vec2_origin
0026bc70 b vec2_origin
0026bc84 b vec2_origin
0026bc98 b vec2_origin
0026bcac b vec2_origin
0026bcc0 b vec2_origin
0026bcd4 b vec2_origin
0026bcf4 b vec2_origin
0026bd08 b vec2_origin
0026bd1c b vec2_origin
0026bd30 b vec2_origin
0026bd44 b vec2_origin
0026bd58 b vec2_origin
0026bd6c b vec2_origin
0026bd80 b vec2_origin
0026bd94 b vec2_origin
0026bdac b vec2_origin
0026bdc0 b vec2_origin
0026bdd4 b vec2_origin
0026bde8 b vec2_origin
0026bdfc b vec2_origin
0026be10 b vec2_origin
0026be24 b vec2_origin
0026be38 b vec2_origin
0026be4c b vec2_origin
0026be60 b vec2_origin
0026be74 b vec2_origin
0026be88 b vec2_origin
0026bea8 b vec2_origin
0026bebc b vec2_origin
0026bed4 b vec2_origin
0026bee8 b vec2_origin
0026befc b vec2_origin
0026bf10 b vec2_origin
0026bf24 b vec2_origin
0026bf38 b vec2_origin
0026bf4c b vec2_origin
0026bf60 b vec2_origin
0026bf74 b vec2_origin
0026bf88 b vec2_origin
0026bf9c b vec2_origin
0026bfb8 b vec2_origin
0026bfcc b vec2_origin
0026bfe0 b vec2_origin
0026bff4 b vec2_origin
0026e02c b vec2_origin
0026e044 b vec2_origin
0026e058 b vec2_origin
0026e06c b vec2_origin
0026e090 b vec2_origin
0026e0a4 b vec2_origin
0026e0b8 b vec2_origin
0026e0cc b vec2_origin
0026e0e0 b vec2_origin
0026e0f4 b vec2_origin
0026e108 b vec2_origin
0026e11c b vec2_origin
0026e130 b vec2_origin
0026e144 b vec2_origin
0026e158 b vec2_origin
0026e16c b vec2_origin
0026e180 b vec2_origin
0026e194 b vec2_origin
0026e1a8 b vec2_origin
0026e1bc b vec2_origin
0026e604 b vec2_origin
0026e618 b vec2_origin
0026e62c b vec2_origin
0026e78c b vec2_origin
0026e7a0 b vec2_origin
0026e7b4 b vec2_origin
0026e7c8 b vec2_origin
0026e918 b vec2_origin
0026e984 b vec2_origin
0026e9e4 b vec2_origin
0026e9fc b vec2_origin
0026ea10 b vec2_origin
0026ea24 b vec2_origin
0026ea38 b vec2_origin
0026ea4c b vec2_origin
0026ea60 b vec2_origin
0026ea7c b vec2_origin
0026ea90 b vec2_origin
0026eaa4 b vec2_origin
0026eab8 b vec2_origin
0026eacc b vec2_origin
0026eae0 b vec2_origin
0026ef40 b vec2_origin
0026ef84 b vec2_origin
00276044 b vec2_origin
00276058 b vec2_origin
0027dd84 b vec2_origin
00266d68 b vec4_origin
00266d9c b vec4_origin
00266e08 b vec4_origin
00266f9c b vec4_origin
00267000 b vec4_origin
002670c8 b vec4_origin
00267304 b vec4_origin
00267338 b vec4_origin
00267540 b vec4_origin
00267584 b vec4_origin
002675b8 b vec4_origin
002675f0 b vec4_origin
00267888 b vec4_origin
002678f8 b vec4_origin
0026796c b vec4_origin
00267a04 b vec4_origin
00267a68 b vec4_origin
00267c38 b vec4_origin
00267cf0 b vec4_origin
00267d24 b vec4_origin
00267d58 b vec4_origin
00267d8c b vec4_origin
00267dc0 b vec4_origin
00267df4 b vec4_origin
00267e28 b vec4_origin
00267e5c b vec4_origin
00267e90 b vec4_origin
00267ec4 b vec4_origin
00267ef8 b vec4_origin
00267f2c b vec4_origin
00267f60 b vec4_origin
00267f94 b vec4_origin
00267fc8 b vec4_origin
00267ffc b vec4_origin
002684a4 b vec4_origin
002684d8 b vec4_origin
0026850c b vec4_origin
00268540 b vec4_origin
00268574 b vec4_origin
002685a8 b vec4_origin
002685dc b vec4_origin
00268610 b vec4_origin
00268644 b vec4_origin
00268678 b vec4_origin
002686ac b vec4_origin
002686e0 b vec4_origin
00268714 b vec4_origin
00268748 b vec4_origin
0026877c b vec4_origin
002687b0 b vec4_origin
002687e4 b vec4_origin
00268818 b vec4_origin
002688cc b vec4_origin
00268900 b vec4_origin
00268958 b vec4_origin
00268de4 b vec4_origin
0026ef94 b vec4_origin
000cd450 t BuildVertMap(vertmap_t&, Vector const*, int, IVP_Compact_Ledge const*) [clone .constprop.18]
000d2370 t InitBoxVerts(Vector*, Vector**, Vector const&, Vector const&)
00170340 t ProcessPoint(IVP_Compact_Poly_Point&, IVP_U_BigVector<IVP_Compact_Poly_Point>*)
00104430 t ReadVector4D(char const*, Vector4D&)
00268dcc b s_bConnected
001efe70 r s_limit_mask
001efff0 r s_limit_mask
00266d4c b vec2_invalid
00266d60 b vec2_invalid
00266d94 b vec2_invalid
00266e00 b vec2_invalid
00266f94 b vec2_invalid
00266ff8 b vec2_invalid
002670c0 b vec2_invalid
002672fc b vec2_invalid
00267330 b vec2_invalid
00267538 b vec2_invalid
0026757c b vec2_invalid
002675b0 b vec2_invalid
002675e8 b vec2_invalid
00267880 b vec2_invalid
002678f0 b vec2_invalid
00267964 b vec2_invalid
002679fc b vec2_invalid
00267a60 b vec2_invalid
00267c30 b vec2_invalid
00267ce8 b vec2_invalid
00267d1c b vec2_invalid
00267d50 b vec2_invalid
00267d84 b vec2_invalid
00267db8 b vec2_invalid
00267dec b vec2_invalid
00267e20 b vec2_invalid
00267e54 b vec2_invalid
00267e88 b vec2_invalid
00267ebc b vec2_invalid
00267ef0 b vec2_invalid
00267f24 b vec2_invalid
00267f58 b vec2_invalid
00267f8c b vec2_invalid
00267fc0 b vec2_invalid
00267ff4 b vec2_invalid
0026849c b vec2_invalid
002684d0 b vec2_invalid
00268504 b vec2_invalid
00268538 b vec2_invalid
0026856c b vec2_invalid
002685a0 b vec2_invalid
002685d4 b vec2_invalid
00268608 b vec2_invalid
0026863c b vec2_invalid
00268670 b vec2_invalid
002686a4 b vec2_invalid
002686d8 b vec2_invalid
0026870c b vec2_invalid
00268740 b vec2_invalid
00268774 b vec2_invalid
002687a8 b vec2_invalid
002687dc b vec2_invalid
00268810 b vec2_invalid
002688c4 b vec2_invalid
002688f8 b vec2_invalid
00268950 b vec2_invalid
0026898c b vec2_invalid
00268b14 b vec2_invalid
00268b2c b vec2_invalid
00268dac b vec2_invalid
00268ddc b vec2_invalid
0026a164 b vec2_invalid
0026a178 b vec2_invalid
0026a19c b vec2_invalid
0026a1bc b vec2_invalid
0026a1dc b vec2_invalid
0026a1f0 b vec2_invalid
0026a204 b vec2_invalid
0026a218 b vec2_invalid
0026a22c b vec2_invalid
0026a240 b vec2_invalid
0026a254 b vec2_invalid
0026a268 b vec2_invalid
0026a27c b vec2_invalid
0026a290 b vec2_invalid
0026a2a4 b vec2_invalid
0026a2b8 b vec2_invalid
0026a2cc b vec2_invalid
0026a2e0 b vec2_invalid
0026a300 b vec2_invalid
0026a314 b vec2_invalid
0026a328 b vec2_invalid
0026a33c b vec2_invalid
0026a350 b vec2_invalid
0026a364 b vec2_invalid
0026a378 b vec2_invalid
0026a38c b vec2_invalid
0026a3a0 b vec2_invalid
0026a3b4 b vec2_invalid
0026a3dc b vec2_invalid
0026a3f4 b vec2_invalid
0026a408 b vec2_invalid
0026a41c b vec2_invalid
0026a430 b vec2_invalid
0026a444 b vec2_invalid
0026ae4c b vec2_invalid
0026aed4 b vec2_invalid
0026aee8 b vec2_invalid
0026aefc b vec2_invalid
0026af10 b vec2_invalid
0026bc78 b vec2_invalid
0026bc8c b vec2_invalid
0026bca0 b vec2_invalid
0026bcb4 b vec2_invalid
0026bcc8 b vec2_invalid
0026bcdc b vec2_invalid
0026bcfc b vec2_invalid
0026bd10 b vec2_invalid
0026bd24 b vec2_invalid
0026bd38 b vec2_invalid
0026bd4c b vec2_invalid
0026bd60 b vec2_invalid
0026bd74 b vec2_invalid
0026bd88 b vec2_invalid
0026bd9c b vec2_invalid
0026bdb4 b vec2_invalid
0026bdc8 b vec2_invalid
0026bddc b vec2_invalid
0026bdf0 b vec2_invalid
0026be04 b vec2_invalid
0026be18 b vec2_invalid
0026be2c b vec2_invalid
0026be40 b vec2_invalid
0026be54 b vec2_invalid
0026be68 b vec2_invalid
0026be7c b vec2_invalid
0026be90 b vec2_invalid
0026beb0 b vec2_invalid
0026bec4 b vec2_invalid
0026bedc b vec2_invalid
0026bef0 b vec2_invalid
0026bf04 b vec2_invalid
0026bf18 b vec2_invalid
0026bf2c b vec2_invalid
0026bf40 b vec2_invalid
0026bf54 b vec2_invalid
0026bf68 b vec2_invalid
0026bf7c b vec2_invalid
0026bf90 b vec2_invalid
0026bfa4 b vec2_invalid
0026bfc0 b vec2_invalid
0026bfd4 b vec2_invalid
0026bfe8 b vec2_invalid
0026bffc b vec2_invalid
0026e034 b vec2_invalid
0026e04c b vec2_invalid
0026e060 b vec2_invalid
0026e074 b vec2_invalid
0026e098 b vec2_invalid
0026e0ac b vec2_invalid
0026e0c0 b vec2_invalid
0026e0d4 b vec2_invalid
0026e0e8 b vec2_invalid
0026e0fc b vec2_invalid
0026e110 b vec2_invalid
0026e124 b vec2_invalid
0026e138 b vec2_invalid
0026e14c b vec2_invalid
0026e160 b vec2_invalid
0026e174 b vec2_invalid
0026e188 b vec2_invalid
0026e19c b vec2_invalid
0026e1b0 b vec2_invalid
0026e1c4 b vec2_invalid
0026e60c b vec2_invalid
0026e620 b vec2_invalid
0026e634 b vec2_invalid
0026e794 b vec2_invalid
0026e7a8 b vec2_invalid
0026e7bc b vec2_invalid
0026e7d0 b vec2_invalid
0026e920 b vec2_invalid
0026e98c b vec2_invalid
0026e9ec b vec2_invalid
0026ea04 b vec2_invalid
0026ea18 b vec2_invalid
0026ea2c b vec2_invalid
0026ea40 b vec2_invalid
0026ea54 b vec2_invalid
0026ea68 b vec2_invalid
0026ea84 b vec2_invalid
0026ea98 b vec2_invalid
0026eaac b vec2_invalid
0026eac0 b vec2_invalid
0026ead4 b vec2_invalid
0026eae8 b vec2_invalid
0026ef48 b vec2_invalid
0026ef8c b vec2_invalid
0027604c b vec2_invalid
00276060 b vec2_invalid
0027dd8c b vec2_invalid
00266d78 b vec4_invalid
00266dac b vec4_invalid
00266e18 b vec4_invalid
00266fac b vec4_invalid
00267010 b vec4_invalid
002670d8 b vec4_invalid
00267314 b vec4_invalid
00267348 b vec4_invalid
00267550 b vec4_invalid
00267594 b vec4_invalid
002675c8 b vec4_invalid
00267600 b vec4_invalid
00267898 b vec4_invalid
00267908 b vec4_invalid
0026797c b vec4_invalid
00267a14 b vec4_invalid
00267a78 b vec4_invalid
00267c48 b vec4_invalid
00267d00 b vec4_invalid
00267d34 b vec4_invalid
00267d68 b vec4_invalid
00267d9c b vec4_invalid
00267dd0 b vec4_invalid
00267e04 b vec4_invalid
00267e38 b vec4_invalid
00267e6c b vec4_invalid
00267ea0 b vec4_invalid
00267ed4 b vec4_invalid
00267f08 b vec4_invalid
00267f3c b vec4_invalid
00267f70 b vec4_invalid
00267fa4 b vec4_invalid
00267fd8 b vec4_invalid
0026800c b vec4_invalid
002684b4 b vec4_invalid
002684e8 b vec4_invalid
0026851c b vec4_invalid
00268550 b vec4_invalid
00268584 b vec4_invalid
002685b8 b vec4_invalid
002685ec b vec4_invalid
00268620 b vec4_invalid
00268654 b vec4_invalid
00268688 b vec4_invalid
002686bc b vec4_invalid
002686f0 b vec4_invalid
00268724 b vec4_invalid
00268758 b vec4_invalid
0026878c b vec4_invalid
002687c0 b vec4_invalid
002687f4 b vec4_invalid
00268828 b vec4_invalid
002688dc b vec4_invalid
00268910 b vec4_invalid
00268968 b vec4_invalid
00268df4 b vec4_invalid
0026efa4 b vec4_invalid
00267c80 b g_MeshManager
002634ec d IVP_RAND_SEED
00144550 t qh_intcompare(void const*, void const*)
002689a8 b s_bRegistered
00268ac0 b s_EmptyConVar
00268928 b s_VPhysPtrMap
0027b080 b texgammatable
0027b180 b lineartoscreen
00108c50 t NoPhysSaveFunc(physsaveparams_t const&, void*)
00262b40 d s_BackSlashMap
000f7200 t FlushFrameLocks()
001ef6e0 r g_nRandomValues
0027cd80 b lineartotexture
001690d0 t qh_compareangle(void const*, void const*)
00169100 t qh_comparemerge(void const*, void const*)
00169120 t qh_comparevisit(void const*, void const*)
0010f790 t Sys_LoadLibrary(char const*, Sys_Flags)
0027c180 b texturetolinear
002689b4 b s_bBuiltBreakSet
00262b38 d s_nDLLIdentifier
001ff339 r ivp_uqr_mod_table
00108c60 t NoPhysRestoreFunc(physrestoreparams_t const&, void**)
002689b0 b s_DefaultAccessor
00266dc0 b g_MainDLLInterface
000eca70 t InitObjectTemplate(IVP_Template_Real_Object&, int, objectparams_t*, bool) [clone .constprop.77]
0026f040 b s_SIMDRandContexts
0010f6a0 t Sys_LoadLibraryGuts(char const*, Sys_Flags)
000ce2f0 t vphys_sleep_timeout(CCommand const&)
0026a1a4 b g_CleanupSymbolTable
0015e9f0 t qh_compare_facetarea(void const*, void const*)
0026efc0 b s_nRandContextsInUse
000d6680 t IsBreakableConstraint(constraint_breakableparams_t const&)
0015ea30 t qh_compare_facetmerge(void const*, void const*)
0015ea60 t qh_compare_facetvisit(void const*, void const*)
00267528 b s_DefaultDebugOverlay
0026791c b g_MaterialIndexDataOps
00266fbc b physics2AgeiaRegistrar
0026ef64 b s_TempMemoryPolyhedron
0027c980 b g_Mathlib_GammaToLinear
0027c580 b g_Mathlib_LinearToGamma
00267944 b g_PostRestoreObjectList
00267cd4 b s_BuildVirtualMeshMutex
00266c40 b g_BreakSetIncludingColons
00266fc8 b physics2DisablerRegistrar
00266d40 b UNSPECIFIED_LOGGING_COLOR
00266d54 b UNSPECIFIED_LOGGING_COLOR
00266d88 b UNSPECIFIED_LOGGING_COLOR
00266df4 b UNSPECIFIED_LOGGING_COLOR
00266f88 b UNSPECIFIED_LOGGING_COLOR
00266fec b UNSPECIFIED_LOGGING_COLOR
002670b4 b UNSPECIFIED_LOGGING_COLOR
002672f0 b UNSPECIFIED_LOGGING_COLOR
00267324 b UNSPECIFIED_LOGGING_COLOR
0026752c b UNSPECIFIED_LOGGING_COLOR
00267570 b UNSPECIFIED_LOGGING_COLOR
002675a4 b UNSPECIFIED_LOGGING_COLOR
002675dc b UNSPECIFIED_LOGGING_COLOR
00267874 b UNSPECIFIED_LOGGING_COLOR
002678e4 b UNSPECIFIED_LOGGING_COLOR
00267958 b UNSPECIFIED_LOGGING_COLOR
002679f0 b UNSPECIFIED_LOGGING_COLOR
00267a54 b UNSPECIFIED_LOGGING_COLOR
00267c24 b UNSPECIFIED_LOGGING_COLOR
00267cdc b UNSPECIFIED_LOGGING_COLOR
00267d10 b UNSPECIFIED_LOGGING_COLOR
00267d44 b UNSPECIFIED_LOGGING_COLOR
00267d78 b UNSPECIFIED_LOGGING_COLOR
00267dac b UNSPECIFIED_LOGGING_COLOR
00267de0 b UNSPECIFIED_LOGGING_COLOR
00267e14 b UNSPECIFIED_LOGGING_COLOR
00267e48 b UNSPECIFIED_LOGGING_COLOR
00267e7c b UNSPECIFIED_LOGGING_COLOR
00267eb0 b UNSPECIFIED_LOGGING_COLOR
00267ee4 b UNSPECIFIED_LOGGING_COLOR
00267f18 b UNSPECIFIED_LOGGING_COLOR
00267f4c b UNSPECIFIED_LOGGING_COLOR
00267f80 b UNSPECIFIED_LOGGING_COLOR
00267fb4 b UNSPECIFIED_LOGGING_COLOR
00267fe8 b UNSPECIFIED_LOGGING_COLOR
00268490 b UNSPECIFIED_LOGGING_COLOR
002684c4 b UNSPECIFIED_LOGGING_COLOR
002684f8 b UNSPECIFIED_LOGGING_COLOR
0026852c b UNSPECIFIED_LOGGING_COLOR
00268560 b UNSPECIFIED_LOGGING_COLOR
00268594 b UNSPECIFIED_LOGGING_COLOR
002685c8 b UNSPECIFIED_LOGGING_COLOR
002685fc b UNSPECIFIED_LOGGING_COLOR
00268630 b UNSPECIFIED_LOGGING_COLOR
00268664 b UNSPECIFIED_LOGGING_COLOR
00268698 b UNSPECIFIED_LOGGING_COLOR
002686cc b UNSPECIFIED_LOGGING_COLOR
00268700 b UNSPECIFIED_LOGGING_COLOR
00268734 b UNSPECIFIED_LOGGING_COLOR
00268768 b UNSPECIFIED_LOGGING_COLOR
0026879c b UNSPECIFIED_LOGGING_COLOR
002687d0 b UNSPECIFIED_LOGGING_COLOR
00268804 b UNSPECIFIED_LOGGING_COLOR
002688b8 b UNSPECIFIED_LOGGING_COLOR
002688ec b UNSPECIFIED_LOGGING_COLOR
00268944 b UNSPECIFIED_LOGGING_COLOR
00268980 b UNSPECIFIED_LOGGING_COLOR
00268b08 b UNSPECIFIED_LOGGING_COLOR
00268b20 b UNSPECIFIED_LOGGING_COLOR
00268b49 b UNSPECIFIED_LOGGING_COLOR
00268da0 b UNSPECIFIED_LOGGING_COLOR
00268dcd b UNSPECIFIED_LOGGING_COLOR
0026a158 b UNSPECIFIED_LOGGING_COLOR
0026a16c b UNSPECIFIED_LOGGING_COLOR
0026a190 b UNSPECIFIED_LOGGING_COLOR
0026a1b0 b UNSPECIFIED_LOGGING_COLOR
0026a1d0 b UNSPECIFIED_LOGGING_COLOR
0026a1e4 b UNSPECIFIED_LOGGING_COLOR
0026a1f8 b UNSPECIFIED_LOGGING_COLOR
0026a20c b UNSPECIFIED_LOGGING_COLOR
0026a220 b UNSPECIFIED_LOGGING_COLOR
0026a234 b UNSPECIFIED_LOGGING_COLOR
0026a248 b UNSPECIFIED_LOGGING_COLOR
0026a25c b UNSPECIFIED_LOGGING_COLOR
0026a270 b UNSPECIFIED_LOGGING_COLOR
0026a284 b UNSPECIFIED_LOGGING_COLOR
0026a298 b UNSPECIFIED_LOGGING_COLOR
0026a2ac b UNSPECIFIED_LOGGING_COLOR
0026a2c0 b UNSPECIFIED_LOGGING_COLOR
0026a2d4 b UNSPECIFIED_LOGGING_COLOR
0026a2f4 b UNSPECIFIED_LOGGING_COLOR
0026a308 b UNSPECIFIED_LOGGING_COLOR
0026a31c b UNSPECIFIED_LOGGING_COLOR
0026a330 b UNSPECIFIED_LOGGING_COLOR
0026a344 b UNSPECIFIED_LOGGING_COLOR
0026a358 b UNSPECIFIED_LOGGING_COLOR
0026a36c b UNSPECIFIED_LOGGING_COLOR
0026a380 b UNSPECIFIED_LOGGING_COLOR
0026a394 b UNSPECIFIED_LOGGING_COLOR
0026a3a8 b UNSPECIFIED_LOGGING_COLOR
0026a3d0 b UNSPECIFIED_LOGGING_COLOR
0026a3e8 b UNSPECIFIED_LOGGING_COLOR
0026a3fc b UNSPECIFIED_LOGGING_COLOR
0026a410 b UNSPECIFIED_LOGGING_COLOR
0026a424 b UNSPECIFIED_LOGGING_COLOR
0026a438 b UNSPECIFIED_LOGGING_COLOR
0026ae40 b UNSPECIFIED_LOGGING_COLOR
0026aec8 b UNSPECIFIED_LOGGING_COLOR
0026aedc b UNSPECIFIED_LOGGING_COLOR
0026aef0 b UNSPECIFIED_LOGGING_COLOR
0026af04 b UNSPECIFIED_LOGGING_COLOR
0026bc6c b UNSPECIFIED_LOGGING_COLOR
0026bc80 b UNSPECIFIED_LOGGING_COLOR
0026bc94 b UNSPECIFIED_LOGGING_COLOR
0026bca8 b UNSPECIFIED_LOGGING_COLOR
0026bcbc b UNSPECIFIED_LOGGING_COLOR
0026bcd0 b UNSPECIFIED_LOGGING_COLOR
0026bcf0 b UNSPECIFIED_LOGGING_COLOR
0026bd04 b UNSPECIFIED_LOGGING_COLOR
0026bd18 b UNSPECIFIED_LOGGING_COLOR
0026bd2c b UNSPECIFIED_LOGGING_COLOR
0026bd40 b UNSPECIFIED_LOGGING_COLOR
0026bd54 b UNSPECIFIED_LOGGING_COLOR
0026bd68 b UNSPECIFIED_LOGGING_COLOR
0026bd7c b UNSPECIFIED_LOGGING_COLOR
0026bd90 b UNSPECIFIED_LOGGING_COLOR
0026bda8 b UNSPECIFIED_LOGGING_COLOR
0026bdbc b UNSPECIFIED_LOGGING_COLOR
0026bdd0 b UNSPECIFIED_LOGGING_COLOR
0026bde4 b UNSPECIFIED_LOGGING_COLOR
0026bdf8 b UNSPECIFIED_LOGGING_COLOR
0026be0c b UNSPECIFIED_LOGGING_COLOR
0026be20 b UNSPECIFIED_LOGGING_COLOR
0026be34 b UNSPECIFIED_LOGGING_COLOR
0026be48 b UNSPECIFIED_LOGGING_COLOR
0026be5c b UNSPECIFIED_LOGGING_COLOR
0026be70 b UNSPECIFIED_LOGGING_COLOR
0026be84 b UNSPECIFIED_LOGGING_COLOR
0026bea4 b UNSPECIFIED_LOGGING_COLOR
0026beb8 b UNSPECIFIED_LOGGING_COLOR
0026bed0 b UNSPECIFIED_LOGGING_COLOR
0026bee4 b UNSPECIFIED_LOGGING_COLOR
0026bef8 b UNSPECIFIED_LOGGING_COLOR
0026bf0c b UNSPECIFIED_LOGGING_COLOR
0026bf20 b UNSPECIFIED_LOGGING_COLOR
0026bf34 b UNSPECIFIED_LOGGING_COLOR
0026bf48 b UNSPECIFIED_LOGGING_COLOR
0026bf5c b UNSPECIFIED_LOGGING_COLOR
0026bf70 b UNSPECIFIED_LOGGING_COLOR
0026bf84 b UNSPECIFIED_LOGGING_COLOR
0026bf98 b UNSPECIFIED_LOGGING_COLOR
0026bfb4 b UNSPECIFIED_LOGGING_COLOR
0026bfc8 b UNSPECIFIED_LOGGING_COLOR
0026bfdc b UNSPECIFIED_LOGGING_COLOR
0026bff0 b UNSPECIFIED_LOGGING_COLOR
0026e028 b UNSPECIFIED_LOGGING_COLOR
0026e040 b UNSPECIFIED_LOGGING_COLOR
0026e054 b UNSPECIFIED_LOGGING_COLOR
0026e068 b UNSPECIFIED_LOGGING_COLOR
0026e08c b UNSPECIFIED_LOGGING_COLOR
0026e0a0 b UNSPECIFIED_LOGGING_COLOR
0026e0b4 b UNSPECIFIED_LOGGING_COLOR
0026e0c8 b UNSPECIFIED_LOGGING_COLOR
0026e0dc b UNSPECIFIED_LOGGING_COLOR
0026e0f0 b UNSPECIFIED_LOGGING_COLOR
0026e104 b UNSPECIFIED_LOGGING_COLOR
0026e118 b UNSPECIFIED_LOGGING_COLOR
0026e12c b UNSPECIFIED_LOGGING_COLOR
0026e140 b UNSPECIFIED_LOGGING_COLOR
0026e154 b UNSPECIFIED_LOGGING_COLOR
0026e168 b UNSPECIFIED_LOGGING_COLOR
0026e17c b UNSPECIFIED_LOGGING_COLOR
0026e190 b UNSPECIFIED_LOGGING_COLOR
0026e1a4 b UNSPECIFIED_LOGGING_COLOR
0026e1b8 b UNSPECIFIED_LOGGING_COLOR
0026e600 b UNSPECIFIED_LOGGING_COLOR
0026e614 b UNSPECIFIED_LOGGING_COLOR
0026e628 b UNSPECIFIED_LOGGING_COLOR
0026e788 b UNSPECIFIED_LOGGING_COLOR
0026e79c b UNSPECIFIED_LOGGING_COLOR
0026e7b0 b UNSPECIFIED_LOGGING_COLOR
0026e7c4 b UNSPECIFIED_LOGGING_COLOR
0026e914 b UNSPECIFIED_LOGGING_COLOR
0026e980 b UNSPECIFIED_LOGGING_COLOR
0026e9e0 b UNSPECIFIED_LOGGING_COLOR
0026e9f8 b UNSPECIFIED_LOGGING_COLOR
0026ea0c b UNSPECIFIED_LOGGING_COLOR
0026ea20 b UNSPECIFIED_LOGGING_COLOR
0026ea34 b UNSPECIFIED_LOGGING_COLOR
0026ea48 b UNSPECIFIED_LOGGING_COLOR
0026ea5c b UNSPECIFIED_LOGGING_COLOR
0026ea78 b UNSPECIFIED_LOGGING_COLOR
0026ea8c b UNSPECIFIED_LOGGING_COLOR
0026eaa0 b UNSPECIFIED_LOGGING_COLOR
0026eab4 b UNSPECIFIED_LOGGING_COLOR
0026eac8 b UNSPECIFIED_LOGGING_COLOR
0026eadc b UNSPECIFIED_LOGGING_COLOR
0026ef3c b UNSPECIFIED_LOGGING_COLOR
0026ef80 b UNSPECIFIED_LOGGING_COLOR
00276040 b UNSPECIFIED_LOGGING_COLOR
00276054 b UNSPECIFIED_LOGGING_COLOR
0027dd80 b UNSPECIFIED_LOGGING_COLOR
0027dda0 b UNSPECIFIED_LOGGING_COLOR
00268b48 b s_bRunningWithDebugModules
00266e40 b vphys_sleep_timeout_command
002672dc b g_ConstraintGroupActivateList
0026ef50 b s_TempMemoryPolyhedron_Buffer
000cecd0 t CreateObsoletePhysics2Interface()
0026ea70 b ivp_surface_manager_ball_global
00266fd4 b physics2AgeiaObsoleteRegistrar3
00266fe0 b physics2AgeiaObsoleteRegistrar4
00262bb8 d s_pConversionArrays_NoEscConversion
00266e28 b __g_CreateCPhysicsInterfaceIPhysics_reg
00262b60 d s_pConversionArrays_StringCharConversion
000ce290 t __CreateCPhysicsInterfaceIPhysics_interface()
002670e8 b __g_CreateCPhysicsCollisionIPhysicsCollision_reg
000d2070 t __CreateCPhysicsCollisionIPhysicsCollision_interface()
002678a8 b __g_CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_reg
000e7420 t __CreateCPhysicsSurfacePropsIPhysicsSurfaceProps_interface()
001ef501 r s_hex
00268870 b g_xneg
00268894 b g_xpos
0026887c b g_yneg
002688a0 b g_ypos
00268888 b g_zneg
002688ac b g_zpos
001e9e28 r axisMap
0010fdf0 t Descend(char*, unsigned int, bool, unsigned int)
00111dd0 t V_nibble(char)
0010b4a0 t ConCommand::CanAutoComplete()
0010d3b0 t ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
0010bba0 t ConCommand::Dispatch(CCommand const&)
0010c370 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
0010c2e0 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
0010c250 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0010c370 t ConCommand::ConCommand(char const*, ICommandCallback*, char const*, int, ICommandCompletionCallback*)
0010c2e0 t ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
0010c250 t ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
0010b6c0 t ConCommand::~ConCommand()
0010b480 t ConCommand::~ConCommand()
0010b480 t ConCommand::~ConCommand()
000fb410 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
000fb410 t CTraceAABB::CTraceAABB(Vector const&, Vector const&, bool)
00116d30 t CUtlBuffer::ParseToken(characterset_t*, char*, int, bool)
00116700 t CUtlBuffer::ParseToken(char const*, char const*, char*, int)
00117cc0 t CUtlBuffer::ConvertCRLF(CUtlBuffer&)
001153f0 t CUtlBuffer::GetOverflow(int)
00117060 t CUtlBuffer::IsBigEndian()
001181b0 t CUtlBuffer::PutOverflow(int)
00117c40 t CUtlBuffer::AssumeMemory(void*, int, int, int)
00115a20 t CUtlBuffer::CheckPeekGet(int, int)
00117030 t CUtlBuffer::SetBigEndian(bool)
00116bd0 t CUtlBuffer::EatCPPComment()
00116110 t CUtlBuffer::EatWhiteSpace()
001158d0 t CUtlBuffer::OnGetOverflow(int)
001158a0 t CUtlBuffer::OnPutOverflow(int)
00115750 t CUtlBuffer::SetBufferType(bool, bool)
001157a0 t CUtlBuffer::EnsureCapacity(int)
00115c70 t CUtlBuffer::PeekLineLength()
00115de0 t CUtlBuffer::PeekWhiteSpace(int)
00115d80 t CUtlBuffer::PeekStringMatch(int, char const*, int)
00116a00 t CUtlBuffer::GetDelimitedChar(CUtlCharConversion*)
00115e70 t CUtlBuffer::PeekStringLength()
00117720 t CUtlBuffer::PutDelimitedChar(CUtlCharConversion*, char)
00115870 t CUtlBuffer::SetOverflowFuncs(bool (CUtlBuffer::*)(int), bool (CUtlBuffer::*)(int))
00117bc0 t CUtlBuffer::SetExternalBuffer(void*, int, int, int)
00117070 t CUtlBuffer::AddNullTermination()
00116a90 t CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
00117400 t CUtlBuffer::PutDelimitedString(CUtlCharConversion*, char const*)
00117000 t CUtlBuffer::ActivateByteSwapping(bool)
00115bd0 t CUtlBuffer::CheckArbitraryPeekGet(int, int&)
00116900 t CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
00115fa0 t CUtlBuffer::PeekDelimitedStringLength(CUtlCharConversion*, bool)
00116180 t CUtlBuffer::Get(void*, int)
00117140 t CUtlBuffer::Put(void const*, int)
00117990 t CUtlBuffer::Swap(CUtlMemory<unsigned char, int>&)
00117930 t CUtlBuffer::Swap(CUtlBuffer&)
001166d0 t CUtlBuffer::Scanf(char const*, ...)
001173d0 t CUtlBuffer::Printf(char const*, ...)
001161d0 t CUtlBuffer::GetLine(char*, int)
00115d20 t CUtlBuffer::GetUpTo(void*, int)
00115b80 t CUtlBuffer::PeekGet(int, int)
00115900 t CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
001170e0 t CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
001163e0 t CUtlBuffer::VaScanf(char const*, char*)
00115990 t CUtlBuffer::CheckGet(int)
00116f90 t CUtlBuffer::CheckPut(int)
00115a50 t CUtlBuffer::GetToken(char const*)
00117380 t CUtlBuffer::VaPrintf(char const*, char*)
001162b0 t CUtlBuffer::GetString(char*, unsigned int)
001171c0 t CUtlBuffer::PutString(char const*)
00118090 t CUtlBuffer::CUtlBuffer(int, int, int)
00117b10 t CUtlBuffer::CUtlBuffer(void const*, int, int)
00118090 t CUtlBuffer::CUtlBuffer(int, int, int)
00117b10 t CUtlBuffer::CUtlBuffer(void const*, int, int)
0010d600 t CUtlMemory<CUtlString, int>::Grow(int)
000e95d0 t CUtlMemory<CUtlSymbol, int>::Grow(int)
000e9540 t CUtlMemory<CUtlSymbol, int>::Purge()
000d6430 t CUtlMemory<bboxcache_t, int>::Grow(int)
000d6320 t CUtlMemory<bboxcache_t, int>::Purge()
0011a2c0 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
0011a070 t CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Purge()
000e6680 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Grow(int)
000e3bc0 t CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short>::Purge()
001094d0 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Grow(int)
00109450 t CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short>::Purge()
0011dd90 t CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short>::Grow(int)
0011dcc0 t CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short>::Purge()
0010f2b0 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
000e10c0 t CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short>::Grow(int)
000ceb00 t CUtlMemory<CPhysicsCollisionSet, int>::Grow(int)
000ce8b0 t CUtlMemory<CPhysicsCollisionSet, int>::Purge()
000eef90 t CUtlMemory<postrestore_objectlist_t, int>::Grow(int)
000eef20 t CUtlMemory<postrestore_objectlist_t, int>::Purge()
000e9710 t CUtlMemory<CSurface, int>::Grow(int)
000e9500 t CUtlMemory<CSurface, int>::Purge()
001089c0 t CUtlMemory<kventry_t, int>::Grow(int)
001086e0 t CUtlMemory<kventry_t, int>::Purge()
00108920 t CUtlMemory<char, int>::Grow(int)
00108760 t CUtlMemory<char, int>::Purge()
001182b0 t CUtlMemory<unsigned char, int>::Grow(int)
00118270 t CUtlMemory<unsigned char, int>::Purge()
0010d5c0 t CUtlMemory<unsigned char, int>::~CUtlMemory()
0010d5c0 t CUtlMemory<unsigned char, int>::~CUtlMemory()
000ce190 t CUtlMemory<int, int>::Grow(int)
000ce0d0 t CUtlMemory<int, int>::Purge()
00108b10 t CUtlMemory<unsigned int, int>::Grow(int)
001087a0 t CUtlMemory<unsigned int, int>::Purge()
0010efb0 t CUtlMemory<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::ListElem_t, int>::Grow(int)
000e0f20 t CUtlMemory<CUtlMultiList<void*, unsigned short>::ListElem_t, int>::Grow(int)
000e0410 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::Grow(int)
000dfb90 t CUtlMemory<CCollisionSolver::realobjectpair_t, int>::Purge()
0011df70 t CUtlMemory<CCountedStringPool::hash_item_t, int>::Grow(int)
0011dd00 t CUtlMemory<CCountedStringPool::hash_item_t, int>::Purge()
0010f170 t CUtlMemory<memhandle_t__*, int>::Grow(int)
000dffe0 t CUtlMemory<CPhysicsObject*, int>::Grow(int)
000dfab0 t CUtlMemory<CPhysicsObject*, int>::Purge()
000e01c0 t CUtlMemory<IPhysicsObject*, int>::Grow(int)
000df640 t CUtlMemory<IPhysicsObject*, int>::Purge()
000e2740 t CUtlMemory<IVP_Real_Object*, int>::Grow(int)
000e2700 t CUtlMemory<IVP_Real_Object*, int>::Purge()
000dfea0 t CUtlMemory<IDeleteQueueItem*, int>::Grow(int)
000dfd60 t CUtlMemory<IDeleteQueueItem*, int>::Purge()
000ce9c0 t CUtlMemory<IPhysicsEnvironment*, int>::Grow(int)
000ce8f0 t CUtlMemory<IPhysicsEnvironment*, int>::Purge()
000f8510 t CUtlMemory<CPhysCollideVirtualMesh*, int>::Grow(int)
000f83e0 t CUtlMemory<CPhysCollideVirtualMesh*, int>::Purge()
000dbd70 t CUtlMemory<CPhysicsConstraintGroup*, int>::Grow(int)
000dbd00 t CUtlMemory<CPhysicsConstraintGroup*, int>::Purge()
000e0700 t CUtlMemory<CPhysicsFluidController*, int>::Grow(int)
000dfce0 t CUtlMemory<CPhysicsFluidController*, int>::Purge()
000e0840 t CUtlMemory<IPhysicsPlayerController*, int>::Grow(int)
000dfd20 t CUtlMemory<IPhysicsPlayerController*, int>::Purge()
000ea6f0 t CUtlMemory<IVP_Core*, int>::Grow(int)
000ea6b0 t CUtlMemory<IVP_Core*, int>::Purge()
00114fc0 t CUtlMemory<char*, int>::Grow(int)
000d6280 t CUtlMemory<char*, int>::Purge()
001041e0 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::Grow(int)
001041a0 t CUtlMemory<IVP_Compact_Ledgetree_Node const*, int>::Purge()
0011a180 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Grow(int)
0011a0b0 t CUtlMemory<CUtlSymbolTable::StringPool_t*, int>::Purge()
0010ee70 t CUtlMemory<void*, int>::Grow(int)
0010ee30 t CUtlMemory<void*, int>::Purge()
00115100 t CUtlMemory<wchar_t*, int>::Grow(int)
001087e0 t CUtlMemory<unsigned short, int>::Grow(int)
00108720 t CUtlMemory<unsigned short, int>::Purge()
0011a4b0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
0011a9a0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
0011ae60 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
0011b810 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
0011a3a0 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
00119f80 t CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RemoveAll()
000e3db0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
000e42a0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
000e6870 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
000e4760 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RemoveRebalance(unsigned short)
000e7230 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Insert(CPhysicsListenerCollision::corepair_t const&)
000e5960 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
000e6760 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NewNode()
000e3c00 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::RemoveAll()
001096b0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
00109bc0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RotateRight(unsigned short)
0010a0d0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
0010aad0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Insert(CUtlMap<void*, void*, unsigned short>::Node_t const&)
001095a0 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::NewNode()
00109370 t CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::RemoveAll()
0011e070 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
0011e560 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RotateRight(unsigned short)
0011ea20 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
0011f3e0 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Insert(char const* const&)
0011de60 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::NewNode()
0011dbd0 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::RemoveAll()
00118620 t CUtlString::StripTrailingSlash()
001186c0 t CUtlString::Get()
001189e0 t CUtlString::Set(char const*)
001186a0 t CUtlString::Clear()
00118670 t CUtlString::Purge()
00118a20 t CUtlString::Format(char const*, ...)
00118c50 t CUtlString::SetDirect(char const*, int)
001186f0 t CUtlString::SetLength(int)
00118a80 t CUtlString::operator=(char const*)
00118be0 t CUtlString::operator=(CUtlString const&)
00118b60 t CUtlString::CUtlString(char const*)
00118500 t CUtlString::CUtlString(void const*, int)
001184e0 t CUtlString::CUtlString(void*, int, int)
00118ab0 t CUtlString::CUtlString(CUtlString const&)
001184b0 t CUtlString::CUtlString()
00118b60 t CUtlString::CUtlString(char const*)
00118500 t CUtlString::CUtlString(void const*, int)
001184e0 t CUtlString::CUtlString(void*, int, int)
00118ab0 t CUtlString::CUtlString(CUtlString const&)
001184b0 t CUtlString::CUtlString()
00118710 t CUtlString::operator+=(char)
00118810 t CUtlString::operator+=(double)
00118860 t CUtlString::operator+=(int)
00118b10 t CUtlString::operator+(char const*)
00118770 t CUtlString::operator+=(char const*)
001188b0 t CUtlString::operator+=(CUtlString const&)
00119910 t CUtlSymbol::Initialize()
0026a180 b CUtlSymbol::s_pSymbolTable
00118d80 t CUtlSymbol::DisableStaticSymbolTable()
00262bc0 d CUtlSymbol::s_bAllowStaticSymbolTable
00119a30 t CUtlSymbol::CurrTable()
00119f20 t CUtlSymbol::CUtlSymbol(char const*)
00119f20 t CUtlSymbol::CUtlSymbol(char const*)
0010d6b0 t CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
000e9680 t CUtlVector<CUtlSymbol, CUtlMemory<CUtlSymbol, int> >::InsertBefore(int, CUtlSymbol const&)
000cebb0 t CUtlVector<CPhysicsCollisionSet, CUtlMemory<CPhysicsCollisionSet, int> >::InsertBefore(int)
000ef040 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::InsertBefore(int, postrestore_objectlist_t const&)
000eef60 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
000eef60 t CUtlVector<postrestore_objectlist_t, CUtlMemory<postrestore_objectlist_t, int> >::~CUtlVector()
000e97c0 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::GrowVector(int)
000e9580 t CUtlVector<CSurface, CUtlMemory<CSurface, int> >::ShiftElementsRight(int, int)
00108a70 t CUtlVector<kventry_t, CUtlMemory<kventry_t, int> >::InsertBefore(int, kventry_t const&)
001db0c0 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::SetCount(int)
001db090 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
001db090 t CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
000ce240 t CUtlVector<int, CUtlMemory<int, int> >::GrowVector(int)
000cd400 t CUtlVector<int, CUtlMemory<int, int> >::EnsureCount(int) [clone .part.17]
000ce140 t CUtlVector<int, CUtlMemory<int, int> >::ShiftElementsRight(int, int)
000ce110 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
000ce110 t CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
00108bc0 t CUtlVector<unsigned int, CUtlMemory<unsigned int, int> >::InsertBefore(int, unsigned int const&)
000e04c0 t CUtlVector<CCollisionSolver::realobjectpair_t, CUtlMemory<CCollisionSolver::realobjectpair_t, int> >::InsertBefore(int, CCollisionSolver::realobjectpair_t const&)
0011e020 t CUtlVector<CCountedStringPool::hash_item_t, CUtlMemory<CCountedStringPool::hash_item_t, int> >::GrowVector(int)
0011dd40 t CUtlVector<CCountedStringPool::hash_item_t, CUtlMemory<CCountedStringPool::hash_item_t, int> >::ShiftElementsRight(int, int)
0010f220 t CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >::InsertBefore(int, memhandle_t__* const&)
000e0090 t CUtlVector<CPhysicsObject*, CUtlMemory<CPhysicsObject*, int> >::InsertBefore(int, CPhysicsObject* const&)
000df3f0 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::FastRemove(int)
000e0270 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::InsertBefore(int, IPhysicsObject* const&)
000df680 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
000df680 t CUtlVector<IPhysicsObject*, CUtlMemory<IPhysicsObject*, int> >::~CUtlVector()
000e27f0 t CUtlVector<IVP_Real_Object*, CUtlMemory<IVP_Real_Object*, int> >::InsertBefore(int, IVP_Real_Object* const&)
000dff50 t CUtlVector<IDeleteQueueItem*, CUtlMemory<IDeleteQueueItem*, int> >::InsertBefore(int, IDeleteQueueItem* const&)
000cea70 t CUtlVector<IPhysicsEnvironment*, CUtlMemory<IPhysicsEnvironment*, int> >::InsertBefore(int, IPhysicsEnvironment* const&)
000f85c0 t CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> >::InsertBefore(int, CPhysCollideVirtualMesh* const&)
000dbe20 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::InsertBefore(int, CPhysicsConstraintGroup* const&)
000dbd40 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
000dbd40 t CUtlVector<CPhysicsConstraintGroup*, CUtlMemory<CPhysicsConstraintGroup*, int> >::~CUtlVector()
000e07b0 t CUtlVector<CPhysicsFluidController*, CUtlMemory<CPhysicsFluidController*, int> >::InsertBefore(int, CPhysicsFluidController* const&)
000e08f0 t CUtlVector<IPhysicsPlayerController*, CUtlMemory<IPhysicsPlayerController*, int> >::InsertBefore(int, IPhysicsPlayerController* const&)
000ea7a0 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::InsertBefore(int, IVP_Core* const&)
000ea5c0 t CUtlVector<IVP_Core*, CUtlMemory<IVP_Core*, int> >::Remove(int)
00115070 t CUtlVector<char*, CUtlMemory<char*, int> >::InsertBefore(int, char* const&)
00104290 t CUtlVector<IVP_Compact_Ledgetree_Node const*, CUtlMemoryFixedGrowable<IVP_Compact_Ledgetree_Node const*, 64u, int> >::GrowVector(int)
0011a230 t CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::InsertBefore(int, CUtlSymbolTable::StringPool_t* const&)
0010ef20 t CUtlVector<void*, CUtlMemory<void*, int> >::InsertBefore(int, void* const&)
001151b0 t CUtlVector<wchar_t*, CUtlMemory<wchar_t*, int> >::InsertBefore(int, wchar_t* const&)
00108890 t CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::InsertBefore(int, unsigned short const&)
00101ae0 t CVisitHash::CVisitHash()
00101ae0 t CVisitHash::CVisitHash()
         U CVProfNode::EnterScope()
         U CVProfNode::GetSubNode(char const*, int, char const*, int)
         U CVProfNode::ExitScope()
001dc140 t hk_Console::get_instance()
0027dd94 b hk_Console::m_default_console_buffer
001dc0c0 t hk_Console::printf(char const*, ...)
0027dd98 b hk_Console::m_console
001206d0 t hk_Link_EF::get_controller_name()
001206c0 t hk_Link_EF::get_controller_priority()
001206e0 t hk_Link_EF::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001206f0 t hk_Link_EF::anchor_will_be_deleted_event(IVP_Anchor*)
001206b0 t hk_Link_EF::get_associated_controlled_cores()
00120710 t hk_Link_EF::core_is_going_to_be_deleted_event(IVP_Core*)
001207a0 t hk_Link_EF::~hk_Link_EF()
00120740 t hk_Link_EF::~hk_Link_EF()
00120740 t hk_Link_EF::~hk_Link_EF()
00133380 t hk_Matrix3::set_diagonal(float, float, float)
001337c0 t hk_Matrix3::set_mul3_inv(hk_Rotation const&, hk_Matrix3 const&)
00133720 t hk_Matrix3::set_mul3_inv2(hk_Matrix3 const&, hk_Rotation const&)
001335c0 t hk_Matrix3::set_cross_skew(hk_Vector3 const&, hk_Matrix3 const&)
001332c0 t hk_Matrix3::set_identity_rotation()
00133ae0 t hk_Matrix3::set_rotated_diagonal_matrix(hk_Rotation const&, hk_Vector3 const&)
001333b0 t hk_Matrix3::invert(float)
00133920 t hk_Matrix3::rotate(int, float)
00133270 t hk_Matrix3::set_cols(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00133660 t hk_Matrix3::set_mul3(hk_Matrix3 const&, hk_Matrix3 const&)
00133200 t hk_Matrix3::set_rows(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00133350 t hk_Matrix3::set_zero()
00133590 t hk_Matrix3::transpose()
001338d0 t hk_Matrix3::operator-=(hk_Matrix3 const&)
00133880 t hk_Matrix3::operator+=(hk_Matrix3 const&)
00134790 t hk_Vector3::set_rotated_dir(hk_Rotation const&, hk_Vector3 const&)
00134820 t hk_Vector3::set_rotated_inv_dir(hk_Rotation const&, hk_Vector3 const&)
00134650 t hk_Vector3::set_transformed_pos(hk_Transform const&, hk_Vector3 const&)
001346f0 t hk_Vector3::set_transformed_inv_pos(hk_Transform const&, hk_Vector3 const&)
00175290 t IVP_Anchor::init_anchor(IVP_Actuator*, IVP_Template_Anchor*)
00177100 t IVP_Anchor::get_next_anchor()
00177110 t IVP_Anchor::get_prev_anchor()
00177120 t IVP_Anchor::anchor_get_real_object()
00176920 t IVP_Anchor::object_is_going_to_be_deleted_event(IVP_Real_Object*)
001770f0 t IVP_Anchor::IVP_Anchor()
001770f0 t IVP_Anchor::IVP_Anchor()
00175a30 t IVP_Anchor::~IVP_Anchor()
00175a30 t IVP_Anchor::~IVP_Anchor()
0019c730 t IVP_Object::to_cluster()
0019b5d0 t IVP_Object::init(IVP_Environment*)
0019c750 t IVP_Object::to_ball()
0019c720 t IVP_Object::to_poly()
0019c740 t IVP_Object::to_real()
0019c6e0 t IVP_Object::set_type(IVP_OBJECT_TYPE)
0019b380 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
0019b590 t IVP_Object::IVP_Object(IVP_Environment*)
0019b380 t IVP_Object::IVP_Object(IVP_Cluster*, IVP_Template_Object const*)
0019b590 t IVP_Object::IVP_Object(IVP_Environment*)
00199f90 t IVP_Object::~IVP_Object()
00199ec0 t IVP_Object::~IVP_Object()
00199ec0 t IVP_Object::~IVP_Object()
001b0cb0 t IVP_U_Quat::get_angles(IVP_U_Float_Point*)
001b1bb0 t IVP_U_Quat::invert_quat()
001b1830 t IVP_U_Quat::normize_quat()
001b1e80 t IVP_U_Quat::set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
001b12c0 t IVP_U_Quat::set_quaternion(float const (*) [4])
001b18c0 t IVP_U_Quat::set_quaternion(IVP_U_Matrix3 const*)
001b2090 t IVP_U_Quat::set_invert_mult(IVP_U_Quat const*, IVP_U_Quat const*)
001b1ab0 t IVP_U_Quat::fast_normize_quat()
001b1f80 t IVP_U_Quat::set_div_unit_quat(IVP_U_Quat const*, IVP_U_Quat const*)
001b0d20 t IVP_U_Quat::set_fast_multiple(IVP_U_Point const*, float)
001aea60 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Float_Quat const*)
001ae960 t IVP_U_Quat::inline_set_mult_quat(IVP_U_Quat const*, IVP_U_Quat const*)
001aeb60 t IVP_U_Quat::normize_correct_step(int)
001b1c40 t IVP_U_Quat::set_invert_unit_quat(IVP_U_Quat const*)
001b1750 t IVP_U_Quat::set_interpolate_linear(IVP_U_Quat const*, IVP_U_Quat const*, float)
001b0df0 t IVP_U_Quat::set_very_fast_multiple(IVP_U_Float_Point const*, float)
001b1480 t IVP_U_Quat::set_interpolate_smoothly(IVP_U_Quat const*, IVP_U_Quat const*, float)
001b1c80 t IVP_U_Quat::set_from_rotation_vectors(float, float, float, float, float, float)
001b0ea0 t IVP_U_Quat::set_fast_multiple_with_clip(IVP_U_Float_Point const*, float)
001b0fe0 t IVP_U_Quat::set(float, float, float)
001ae8f0 t IVP_U_Quat::init()
001ae160 t IVP_U_Quat::byte_swap()
001ae150 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
001ae120 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
001ae110 t IVP_U_Quat::IVP_U_Quat()
001ae150 t IVP_U_Quat::IVP_U_Quat(IVP_U_Matrix3 const*)
001ae120 t IVP_U_Quat::IVP_U_Quat(IVP_U_Point const&)
001ae110 t IVP_U_Quat::IVP_U_Quat()
001d8880 t CPolyhedron::Center()
001db070 t CPolyhedron::~CPolyhedron()
001daff0 t CPolyhedron::~CPolyhedron()
001daff0 t CPolyhedron::~CPolyhedron()
0011c7c0 t CStringPool::Find(char const*)
0011c880 t CStringPool::FreeAll()
0011cd50 t CStringPool::Allocate(char const*)
0011bf20 t CStringPool::CStringPool(StringPoolCase_t)
0011bf20 t CStringPool::CStringPool(StringPoolCase_t)
0011c9c0 t CStringPool::~CStringPool()
0011c9c0 t CStringPool::~CStringPool()
000fbd40 t CTracePhys2::SetConvexIndex(unsigned int, int)
00103d00 t CTracePhys2::GetPhysics2ActorCount()
00103d20 t CTracePhys2::GetPhysics2ActorShapeCount(unsigned int)
00104050 t CTracePhys3::SetConvexIndex(unsigned int, int)
00103d50 t CTracePhys3::GetPhysics2ActorCount()
00103d70 t CTracePhys3::GetPhysics2ActorShapeCount(unsigned int)
00103fe0 t CTracePhys4::SetConvexIndex(unsigned int, int)
00103d90 t CTracePhys4::GetPhysics2ActorCount()
00103da0 t CTracePhys4::GetPhysics2ActorShapeCount(unsigned int)
00118cc0 t CVProfScope::~CVProfScope() [clone .isra.10]
000f9900 t CVProfScope::~CVProfScope() [clone .isra.42]
001db430 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&)
001db520 t FourVectors::RotateManyBy(FourVectors*, unsigned int, matrix3x4_t const&, FourVectors*)
001342e0 t hk_Rotation::set_axis_angle(hk_Vector3 const&, float)
001341e0 t hk_Rotation::set(hk_Quaternion const&)
0019b6f0 t IVP_Cluster::add_object(IVP_Object*)
0019b720 t IVP_Cluster::remove_object(IVP_Object*)
0019c770 t IVP_Cluster::get_next_object_in_cluster(IVP_Object*)
0019c760 t IVP_Cluster::get_first_object_of_cluster()
0019b6b0 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
0019b670 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
0019b6b0 t IVP_Cluster::IVP_Cluster(IVP_Environment*)
0019b670 t IVP_Cluster::IVP_Cluster(IVP_Cluster*, IVP_Template_Cluster*)
00199f70 t IVP_Cluster::~IVP_Cluster()
00199f20 t IVP_Cluster::~IVP_Cluster()
00199f20 t IVP_Cluster::~IVP_Cluster()
001b7f50 t IVP_Mindist::init_mindist(IVP_Real_Object*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_Compact_Edge const*)
001b90f0 t IVP_Mindist::is_recursive()
001b9390 t IVP_Mindist::get_coll_dist()
001bd9c0 t IVP_Mindist::recalc_mindist()
001b93b0 t IVP_Mindist::get_environment()
001bd820 t IVP_Mindist::mindist_rescue_push()
001b7440 t IVP_Mindist::simulate_time_event(IVP_Environment*)
001b6930 t IVP_Mindist::hull_manager_is_reset(float, float)
001bdb10 t IVP_Mindist::recalc_invalid_mindist()
001b6c40 t IVP_Mindist::exact_mindist_went_invalid(IVP_Mindist_Manager*)
001b6f60 t IVP_Mindist::update_exact_mindist_events(IVP_BOOL, IVP_MINDIST_EVENT_HINT)
001b6950 t IVP_Mindist::create_cp_in_advance_pretension(IVP_Real_Object*, float)
001959e0 t IVP_Mindist::try_to_generate_managed_friction(IVP_Friction_System**, IVP_BOOL*, IVP_Simulation_Unit*, IVP_BOOL)
001b7b00 t IVP_Mindist::mindist_hull_limit_exceeded_event(float)
001b5dd0 t IVP_Mindist::print(char const*)
00197350 t IVP_Mindist::do_impact()
001b5d80 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
001b5d80 t IVP_Mindist::IVP_Mindist(IVP_Environment*, IVP_Collision_Delegator*)
001b7a00 t IVP_Mindist::~IVP_Mindist()
001b7890 t IVP_Mindist::~IVP_Mindist()
001b7890 t IVP_Mindist::~IVP_Mindist()
001b3dd0 t IVP_OV_Node::IVP_OV_Node()
001b3dd0 t IVP_OV_Node::IVP_OV_Node()
001b3e10 t IVP_OV_Node::~IVP_OV_Node()
001b3e10 t IVP_OV_Node::~IVP_OV_Node()
0019eee0 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
0019eee0 t IVP_Polygon::IVP_Polygon(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
0019efb0 t IVP_Polygon::~IVP_Polygon()
0019ef90 t IVP_Polygon::~IVP_Polygon()
0019ef90 t IVP_Polygon::~IVP_Polygon()
001b91c0 t IVP_Synapse::get_object()
001b9220 t IVP_Synapse::init_synapse_real(IVP_Mindist_Base*, IVP_Real_Object*)
001b9200 t IVP_Synapse::set_synapse_mindist(IVP_Mindist_Base*)
001b5af0 t IVP_Synapse::hull_manager_is_reset(float, float)
001b7f30 t IVP_Synapse::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
001b5b20 t IVP_Synapse::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
001b9040 t IVP_Synapse::get_type()
001b9130 t IVP_Synapse::~IVP_Synapse()
001b9050 t IVP_Synapse::~IVP_Synapse()
001b9050 t IVP_Synapse::~IVP_Synapse()
001aa780 t IVP_U_Hesse::calc_hesse(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001aa8a0 t IVP_U_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001aa740 t IVP_U_Hesse::mult_hesse(float)
001aa700 t IVP_U_Hesse::calc_hesse_val(IVP_U_Point const*)
001aa9c0 t IVP_U_Hesse::normize()
001ade60 t IVP_U_Hesse::byte_swap()
001a8bb0 t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
001a8c20 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001a8bb0 t IVP_U_Plain::IVP_U_Plain(IVP_U_Hesse const*)
001a8c20 t IVP_U_Plain::IVP_U_Plain(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001aaff0 t IVP_U_Point::set_crossing(IVP_U_Hesse*, IVP_U_Hesse*, IVP_U_Hesse*)
001adb50 t IVP_U_Point::calc_an_orthogonal(IVP_U_Point const*)
001a9b90 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Float_Point const*)
001a9b10 t IVP_U_Point::set_orthogonal_part(IVP_U_Point const*, IVP_U_Point const*)
001a9d00 t IVP_U_Point::solve_quadratic_equation_fast(IVP_U_Point const*)
001a9dd0 t IVP_U_Point::solve_quadratic_equation_accurate(IVP_U_Point const*)
001a9fc0 t IVP_U_Point::print(char const*)
001aa120 t IVP_U_Point::rotate(IVP_COORDINATE_INDEX, float)
001aa0f0 t IVP_U_Point::line_max(IVP_U_Point const*)
001aa0c0 t IVP_U_Point::line_min(IVP_U_Point const*)
001add40 t IVP_U_Point::byte_swap()
001add20 t IVP_U_Point::IVP_U_Point(float, float, float)
001af1f0 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
001add10 t IVP_U_Point::IVP_U_Point()
001add20 t IVP_U_Point::IVP_U_Point(float, float, float)
001af1f0 t IVP_U_Point::IVP_U_Point(IVP_U_Float_Point const&)
001add10 t IVP_U_Point::IVP_U_Point()
000827e0 t NxJointDesc::setToDefault()
00082b30 t NxJointDesc::~NxJointDesc()
000827d0 t NxJointDesc::~NxJointDesc()
000827d0 t NxJointDesc::~NxJointDesc()
0006e700 t NxShapeDesc::setToDefault()
0006e850 t NxShapeDesc::~NxShapeDesc()
0006e6f0 t NxShapeDesc::~NxShapeDesc()
0006e6f0 t NxShapeDesc::~NxShapeDesc()
000f8120 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::GetRealSize(void*)
000f8330 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::DestroyResourceStorage(void*)
000f81d0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Lock()
000f82b0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::Unlock()
000f8180 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::TryLock()
000f82e0 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
000f8130 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
000f8130 t CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>::~CDataManager()
000def40 t CDeleteProxy<IPhysicsConstraint>::Delete()
000def70 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
000def30 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
000def30 t CDeleteProxy<IPhysicsConstraint>::~CDeleteProxy()
0010d500 t CEmptyConVar::SetValue(float)
0010d520 t CEmptyConVar::SetValue(int)
0010d4e0 t CEmptyConVar::SetValue(char const*)
0010d590 t CEmptyConVar::~CEmptyConVar()
0010d570 t CEmptyConVar::~CEmptyConVar()
0010d570 t CEmptyConVar::~CEmptyConVar()
000d5ee0 t CPhysCollide::SetOrthographicAreas(Vector const&)
000d53c0 t CPhysCollide::UnserializeFromBuffer(char const*, unsigned int, int, bool)
000d5ed0 t CPhysCollide::ComputeOrthographicAreas(float)
000d6030 t CPhysCollide::~CPhysCollide()
000d6020 t CPhysCollide::~CPhysCollide()
000d6020 t CPhysCollide::~CPhysCollide()
00107cb0 t CStringTable::AddString(char const*)
         U CThreadEvent::Set()
         U CThreadEvent::CThreadEvent(bool)
000ff2b0 t CTraceSolver::SweepSingleConvex()
000fef20 t CTraceSolver::SolveMeshIntersection(simplex_t&)
000ff270 t CTraceSolver::SolveMeshIntersection2D(simplex_t&)
001040c0 t CTraceSolver::DoSweep()
000fb7f0 t CTraceSolver::CTraceSolver(CGameTrace*, ITraceObject*, CTraceRay*, ITraceObject*, Vector const&)
000fb7f0 t CTraceSolver::CTraceSolver(CGameTrace*, ITraceObject*, CTraceRay*, ITraceObject*, Vector const&)
001d7c20 t fourplanes_t::Get2Planes(VPlane*)
001d7bd0 t fourplanes_t::Get4Planes(VPlane*)
001d7b70 t fourplanes_t::Set2Planes(VPlane const*)
001d7b10 t fourplanes_t::Set4Planes(VPlane const*)
001d7a20 t fourplanes_t::ComputeSignbits()
001d7ac0 t fourplanes_t::SetPlane(int, Vector const&, float)
001343c0 t hk_Transform::set_transform(hk_Quaternion const&, hk_Vector3 const&)
00134530 t hk_Transform::set_interpolate(hk_QTransform&, hk_QTransform&, float)
00134470 t hk_Transform::set_identity_transform()
00134400 t hk_Transform::set_cols4(hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&)
00134380 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
00134380 t hk_Transform::hk_Transform(hk_Quaternion const&, hk_Vector3 const&)
0010f8e0 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
0010f8e0 t InterfaceReg::InterfaceReg(void* (*)(), char const*)
000d6050 t IPhysCollide::~IPhysCollide()
000d5e60 t IPhysCollide::~IPhysCollide()
000d5e60 t IPhysCollide::~IPhysCollide()
00177060 t IVP_Actuator::get_controller_name()
00177050 t IVP_Actuator::get_controller_priority()
00174380 t IVP_Actuator::anchor_will_be_deleted_event(IVP_Anchor*)
00177040 t IVP_Actuator::get_associated_controlled_cores()
001743a0 t IVP_Actuator::core_is_going_to_be_deleted_event(IVP_Core*)
001753d0 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
001753d0 t IVP_Actuator::IVP_Actuator(IVP_Environment*)
00174880 t IVP_Actuator::~IVP_Actuator()
00174820 t IVP_Actuator::~IVP_Actuator()
00174820 t IVP_Actuator::~IVP_Actuator()
00172370 t IVP_KK_Input::calc_quad_distance_edge_edge()
00171530 t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00171530 t IVP_KK_Input::IVP_KK_Input(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001a52d0 t IVP_Material::IVP_Material(IVP_Material const&)
001a52b0 t IVP_Material::IVP_Material()
001a52d0 t IVP_Material::IVP_Material(IVP_Material const&)
001a52b0 t IVP_Material::IVP_Material()
001a50b0 t IVP_Material::~IVP_Material()
001a4f20 t IVP_Material::~IVP_Material()
001a4f20 t IVP_Material::~IVP_Material()
001525a0 t IVP_Triangle::calc_hesse()
001525e0 t IVP_Triangle::calc_areasize()
00152640 t IVP_Triangle::print(char const*)
00154af0 t IVP_Triangle::IVP_Triangle()
00154af0 t IVP_Triangle::IVP_Triangle()
001522f0 t IVP_Triangle::~IVP_Triangle()
001522e0 t IVP_Triangle::~IVP_Triangle()
001522e0 t IVP_Triangle::~IVP_Triangle()
00152650 t IVP_Tri_Edge::other_side()
00152710 t IVP_Tri_Edge::check_concavity(IVP_Tri_Edge*)
001526f0 t IVP_Tri_Edge::p()
001571e0 t IVP_Tri_Edge::search_nearest_edge_to(IVP_U_Point*, float*)
00152680 t IVP_Tri_Edge::print(char const*)
001abdd0 t IVP_U_Matrix::init_rows4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001ae020 t IVP_U_Matrix::set_matrix(IVP_U_Matrix const*)
001aacb0 t IVP_U_Matrix::interpolate(IVP_U_Matrix const*, IVP_U_Matrix const*, float)
001aad90 t IVP_U_Matrix::real_invert(float)
001ab460 t IVP_U_Matrix::real_invert(IVP_U_Matrix const*, float)
001ae000 t IVP_U_Matrix::get_position()
001ac4b0 t IVP_U_Matrix::init_columns4(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001ad000 t IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
001ad260 t IVP_U_Matrix::set_transpose(IVP_U_Matrix const*)
001ad6c0 t IVP_U_Matrix::write_to_file(_IO_FILE*, char const*)
001ad8f0 t IVP_U_Matrix::read_from_file(_IO_FILE*)
001adae0 t IVP_U_Matrix::quad_distance_to(IVP_U_Matrix const*)
001ac550 t IVP_U_Matrix::init_rot_multiple(IVP_U_Point const*, float)
001ab360 t IVP_U_Matrix::init()
001ad810 t IVP_U_Matrix::print(char const*)
001ab4e0 t IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)
001ad620 t IVP_U_Matrix::shift_os(IVP_U_Point const*)
001ad5e0 t IVP_U_Matrix::shift_ws(IVP_U_Point const*)
001ae090 t IVP_U_Matrix::byte_swap()
001ad0c0 t IVP_U_Matrix::transpose()
001afbd0 t IVP_U_Memory::neuer_sp_block(unsigned int)
001afe60 t IVP_U_Memory::get_mem_transaction(unsigned int)
001afe00 t IVP_U_Memory::align_to_next_adress(void*)
001afb70 t IVP_U_Memory::free_mem_transaction()
001afe10 t IVP_U_Memory::end_memory_transaction()
001afdf0 t IVP_U_Memory::start_memory_transaction()
001afc30 t IVP_U_Memory::init_mem_transaction_usage(char*, int)
001afe30 t IVP_U_Memory::get_mem(unsigned int)
001afd80 t IVP_U_Memory::free_mem()
001afca0 t IVP_U_Memory::get_memc(unsigned int)
001afd40 t IVP_U_Memory::init_mem()
001afd00 t IVP_U_Memory::IVP_U_Memory()
001afd00 t IVP_U_Memory::IVP_U_Memory()
001afde0 t IVP_U_Memory::~IVP_U_Memory()
001afde0 t IVP_U_Memory::~IVP_U_Memory()
00138850 t IVP_U_Vector<IVV_Sphere>::clear()
00134e60 t IVP_U_Vector<IVP_U_Hesse>::clear()
000d6240 t IVP_U_Vector<IVP_U_Point>::clear()
0013a960 t IVP_U_Vector<IVP_Triangle>::clear()
00185470 t IVP_U_Vector<IVP_Controller>::~IVP_U_Vector()
00185470 t IVP_U_Vector<IVP_Controller>::~IVP_U_Vector()
00188380 t IVP_U_Vector<IVP_Listener_PSI>::~IVP_U_Vector()
00188380 t IVP_U_Vector<IVP_Listener_PSI>::~IVP_U_Vector()
00138890 t IVP_U_Vector<IVP_Compact_Ledge>::clear()
00188400 t IVP_U_Vector<IVP_Listener_Object>::~IVP_U_Vector()
00188400 t IVP_U_Vector<IVP_Listener_Object>::~IVP_U_Vector()
00181b20 t IVP_U_Vector<IVP_Listener_Phantom>::~IVP_U_Vector()
00181b20 t IVP_U_Vector<IVP_Listener_Phantom>::~IVP_U_Vector()
00188300 t IVP_U_Vector<IVP_Hull_Manager_Base>::~IVP_U_Vector()
00188300 t IVP_U_Vector<IVP_Hull_Manager_Base>::~IVP_U_Vector()
00188340 t IVP_U_Vector<IVP_Listener_Collision>::~IVP_U_Vector()
00188340 t IVP_U_Vector<IVP_Listener_Collision>::~IVP_U_Vector()
001883c0 t IVP_U_Vector<IVP_Listener_Constraint>::~IVP_U_Vector()
001883c0 t IVP_U_Vector<IVP_Listener_Constraint>::~IVP_U_Vector()
001884c0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Real_Object> >::~IVP_U_Vector()
001884c0 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Real_Object> >::~IVP_U_Vector()
00181b60 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Mindist_Base> >::~IVP_U_Vector()
00181b60 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Mindist_Base> >::~IVP_U_Vector()
00188480 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Core> >::~IVP_U_Vector()
00188480 t IVP_U_Vector<IVP_Listener_Set_Active<IVP_Core> >::~IVP_U_Vector()
001a8920 t IVP_U_Vector<IVP_U_Active_Int_Delayed>::clear()
0017b3a0 t IVP_U_Vector<IVP_Constraint_Car_Object>::clear()
001a88e0 t IVP_U_Vector<IVP_U_Active_Float_Delayed>::clear()
00188440 t IVP_U_Vector<IVP_Collision_Delegator_Root>::clear()
001771a0 t IVP_U_Vector<IVP_Listener_Check_Dist_Event>::~IVP_U_Vector()
001771a0 t IVP_U_Vector<IVP_Listener_Check_Dist_Event>::~IVP_U_Vector()
0019ee40 t IVP_U_Vector<IVP_Core>::clear()
001882c0 t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
001882c0 t IVP_U_Vector<IVP_Core>::~IVP_U_Vector()
000f6f10 t CMeshInstance::EstimatedSize(virtualmeshlist_t const&)
000f7150 t CMeshInstance::CreateResource(virtualmeshlist_t const&)
000f6f70 t CMeshInstance::ComputeRootLedgeSize(unsigned char const*)
000f6fb0 t CMeshInstance::Init(virtualmeshlist_t const&)
000f6ee0 t CMeshInstance::~CMeshInstance()
000f6ee0 t CMeshInstance::~CMeshInstance()
00103830 t CPhysicsTrace::SweepBoxIVP(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00103ae0 t CPhysicsTrace::SweepBoxIVP(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00100a00 t CPhysicsTrace::SweepBoxHullList(Ray_t const&, unsigned int, CConvexHullList const*, Vector const&, QAngle const&, CGameTrace*)
00100e00 t CPhysicsTrace::SweepBoxPhysics2(Ray_t const&, unsigned int, IConvexInfo*, CPhysics2Shape*, Vector const&, QAngle const&, CGameTrace*)
00101080 t CPhysicsTrace::SweepBoxPhysics2(Ray_t const&, unsigned int, IConvexInfo*, Physics2VCollide_t const*, Vector const&, QAngle const&, CGameTrace*)
00101300 t CPhysicsTrace::SweepBoxPhysics2(Ray_t const&, unsigned int, IConvexInfo*, IPhysics2ActorArray const*, Vector const&, QAngle const&, CGameTrace*)
00101580 t CPhysicsTrace::SweepBoxPhysics2(Vector const&, Vector const&, Vector const&, Vector const&, IPhysics2ActorArray const*, Vector const&, QAngle const&, CGameTrace*)
00101740 t CPhysicsTrace::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
00101ff0 t CPhysicsTrace::GetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
001032a0 t CPhysicsTrace::SweepIVP(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
00102320 t CPhysicsTrace::GetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
00101ac0 t CPhysicsTrace::CPhysicsTrace()
00101ac0 t CPhysicsTrace::CPhysicsTrace()
00101ad0 t CPhysicsTrace::~CPhysicsTrace()
00101ad0 t CPhysicsTrace::~CPhysicsTrace()
000d57f0 t CPhysPolysoup::CPhysPolysoup()
000d57f0 t CPhysPolysoup::CPhysPolysoup()
000df090 t CSleepObjects::event_object_frozen(IVP_Event_Object*)
000dec60 t CSleepObjects::event_object_created(IVP_Event_Object*)
000df370 t CSleepObjects::event_object_deleted(IVP_Event_Object*)
000e0120 t CSleepObjects::event_object_revived(IVP_Event_Object*)
000dfaf0 t CSleepObjects::~CSleepObjects()
000dfb40 t CSleepObjects::~CSleepObjects()
000dfb40 t CSleepObjects::~CSleepObjects()
         U CThreadRWLock::UnlockWrite()
         U CThreadRWLock::WaitForRead()
         U CThreadRWLock::LockForWrite()
000fba90 t CTraceObject2::SetConvex(Physics2ShapeDesc_t&)
0010f5f0 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CreateList()
0010ec50 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
0010f060 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()
0010eb60 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Unlink(unsigned short, unsigned short)
0010ed40 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::LinkAfter(unsigned short, unsigned short, unsigned short)
0010e960 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
0010e960 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::CUtlMultiList(int, int)
0010ea00 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
0010ea00 t CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::~CUtlMultiList()
000e1350 t CUtlMultiList<void*, unsigned short>::CreateList()
000dfda0 t CUtlMultiList<void*, unsigned short>::LinkBefore(unsigned short, unsigned short, unsigned short)
000e0fd0 t CUtlMultiList<void*, unsigned short>::Alloc()
000dfa30 t CUtlMultiList<void*, unsigned short>::Remove(unsigned short, unsigned short)
000df950 t CUtlMultiList<void*, unsigned short>::Unlink(unsigned short, unsigned short)
000df420 t CUtlMultiList<void*, unsigned short>::CUtlMultiList(int, int)
000df420 t CUtlMultiList<void*, unsigned short>::CUtlMultiList(int, int)
000df740 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
000df740 t CUtlMultiList<void*, unsigned short>::~CUtlMultiList()
000df030 t CVoidPairHash::~CVoidPairHash()
000df010 t CVoidPairHash::~CVoidPairHash()
000df010 t CVoidPairHash::~CVoidPairHash()
00131db0 t hk_Array_Base::grow_mem(int)
00131e70 t hk_Array_Base::grow_mem(int, int)
00131d60 t hk_Array_Base::alloc_mem(int, int)
00122ad0 t hk_Constraint::get_constraint_dof()
00122ac0 t hk_Constraint::get_constraint_type()
00122a50 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
00122a50 t hk_Constraint::hk_Constraint(hk_Local_Constraint_System*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY, int)
001229c0 t hk_Constraint::~hk_Constraint()
00122980 t hk_Constraint::~hk_Constraint()
00122980 t hk_Constraint::~hk_Constraint()
00133df0 t hk_Quaternion::set_axis_angle(hk_Vector3 const&, float)
00133bf0 t hk_Quaternion::set(hk_Rotation const&)
00133e60 t hk_Quaternion::set_slerp(hk_Quaternion const&, hk_Quaternion const&, float)
001caa30 t IVP_3D_Solver::calc_nullstelle(IVP_Time, IVP_Time, float, float, float, IVP_Real_Object*, IVP_Real_Object*)
001cb450 t IVP_3D_Solver::set_max_deviation(float)
001caf20 t IVP_3D_Solver::find_first_t_for_value_coll(float, float, IVP_Time, IVP_Time, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, float*, IVP_Time*)
001cac20 t IVP_3D_Solver::find_first_t_for_value_max_dev(float, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, float*, IVP_Time*)
001caf10 t IVP_3D_Solver::find_first_t_for_value_max_dev2(float, IVP_Time, IVP_Time, int, IVP_U_Matrix_Cache*, IVP_U_Matrix_Cache*, float*, IVP_Time*)
0016ff30 t IVP_CFEP_Hash::pair_to_index(IVP_CFEP_Objectpair*)
0016ff70 t IVP_CFEP_Hash::add(IVP_CFEP_Objectpair*)
00170010 t IVP_CFEP_Hash::find(IVP_CFEP_Objectpair*)
0016ffc0 t IVP_CFEP_Hash::remove(IVP_CFEP_Objectpair*)
001700a0 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
001700a0 t IVP_CFEP_Hash::IVP_CFEP_Hash(int)
0016fdf0 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
0016fd70 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
0016fd70 t IVP_CFEP_Hash::~IVP_CFEP_Hash()
001b58d0 t IVP_Collision::set_fvector_index(int, int)
001b5820 t IVP_Collision::delegator_is_going_to_be_deleted_event(IVP_Collision_Delegator*)
001b5900 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
001b5900 t IVP_Collision::IVP_Collision(IVP_Collision_Delegator*)
001b5860 t IVP_Collision::~IVP_Collision()
001b5840 t IVP_Collision::~IVP_Collision()
001b5840 t IVP_Collision::~IVP_Collision()
0017e8e0 t IVP_MI_Vector::add_multiple(IVP_MI_Vector const*, float)
0017ea30 t IVP_MI_Vector::set_time_stamp(IVP_Time)
0017f0f0 t IVP_MI_Vector::malloc_mi_vector(int)
0017f130 t IVP_MI_Vector::malloc_and_set_mi_vector(int, float*)
0017e8b0 t IVP_MI_Vector::add(IVP_MI_Vector const*)
0017f1e0 t IVP_MI_Vector::set(int, float)
0017e840 t IVP_MI_Vector::set(IVP_MI_Vector const*)
0017e920 t IVP_MI_Vector::mult(float)
0017e880 t IVP_MI_Vector::subtract(IVP_MI_Vector const*)
001bfc70 t IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
001bfc70 t IVP_U_FVector<IVP_Collision>::~IVP_U_FVector()
001ab7c0 t IVP_U_Matrix3::get_angles(float*, float*, float*)
001ac400 t IVP_U_Matrix3::init_rows3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001ad190 t IVP_U_Matrix3::transpose3()
001aa240 t IVP_U_Matrix3::orthogonize()
001ab180 t IVP_U_Matrix3::real_invert(float)
001aa340 t IVP_U_Matrix3::orthonormize()
001ac460 t IVP_U_Matrix3::init_columns3(IVP_U_Point const*, IVP_U_Point const*, IVP_U_Point const*)
001abcb0 t IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)
001ad1d0 t IVP_U_Matrix3::set_transpose3(IVP_U_Matrix3 const*)
001aa360 t IVP_U_Matrix3::calc_eigen_vector(float, IVP_U_Point*)
001abe80 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX)
001ac140 t IVP_U_Matrix3::init_normized3_col(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
001abfe0 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX)
001ac2a0 t IVP_U_Matrix3::init_normized3_row(IVP_U_Point const*, IVP_COORDINATE_INDEX, IVP_U_Point const*)
001ada10 t IVP_U_Matrix3::quad_rot_distance_to(IVP_U_Matrix3 const*)
001ab3e0 t IVP_U_Matrix3::init3()
001aa2e0 t IVP_U_Matrix3::normize()
001af190 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Point const*)
001af1c0 t IVP_U_Matrix3::set_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
001af130 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Point const*)
001af160 t IVP_U_Matrix3::set_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point const*)
001adf80 t IVP_U_Matrix3::set_elem(int, int, float)
001adfa0 t IVP_U_Matrix3::byte_swap()
00183860 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
00183860 t IVP_Vec_PCore::IVP_Vec_PCore(IVP_Core const*, IVP_U_Float_Point const*)
00083660 t NxD6JointDesc::setToDefault()
000829d0 t NxD6JointDesc::~NxD6JointDesc()
00082960 t NxD6JointDesc::~NxD6JointDesc()
00082960 t NxD6JointDesc::~NxD6JointDesc()
00152aa0 t P_Sur_2D_Line::has_points(P_Sur_2D_Point*, P_Sur_2D_Point*)
00152b30 t P_Sur_2D_Line::dist_to_point(IVP_U_Point*)
00152e10 t P_Sur_2D_Line::is_crossing_line(P_Sur_2D_Line*)
00152d00 t P_Sur_2D_Line::overlaps_with_line(P_Sur_2D_Line*)
00152be0 t P_Sur_2D_Line::hesse_dist_to_point(IVP_U_Point*)
00152c20 t P_Sur_2D_Line::point_lies_in_interval(IVP_U_Point*)
00152a50 t P_Sur_2D_Line::point_lies_to_the_left(IVP_U_Point*)
00152990 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
00152990 t P_Sur_2D_Line::P_Sur_2D_Line(P_Sur_2D_Point*, P_Sur_2D_Point*)
00152a40 t P_Sur_2D_Line::~P_Sur_2D_Line()
00152a40 t P_Sur_2D_Line::~P_Sur_2D_Line()
000f8f90 t CBaseAppSystem<IPhysics2Disabler>::Disconnect()
000f8f70 t CBaseAppSystem<IPhysics2Disabler>::QueryInterface(char const*)
000f8fa0 t CBaseAppSystem<IPhysics2Disabler>::Init()
000f8f80 t CBaseAppSystem<IPhysics2Disabler>::Connect(void* (*)(char const*, int*))
000f8fb0 t CBaseAppSystem<IPhysics2Disabler>::Shutdown()
000ce770 t CBaseAppSystem<IPhysics>::Disconnect()
000ce750 t CBaseAppSystem<IPhysics>::QueryInterface(char const*)
000ce780 t CBaseAppSystem<IPhysics>::Init()
000ce760 t CBaseAppSystem<IPhysics>::Connect(void* (*)(char const*, int*))
000ce790 t CBaseAppSystem<IPhysics>::Shutdown()
00103cf0 t CDefConvexInfo::GetContents(int)
0010bf40 t ConCommandBase::CopyString(char const*)
0010b430 t ConCommandBase::RemoveFlags(int)
002689a0 b ConCommandBase::s_pAccessor
002689a4 b ConCommandBase::s_pConCommandBases
0010b3d0 t ConCommandBase::Init()
0010b360 t ConCommandBase::Create(char const*, char const*, int)
0010bf30 t ConCommandBase::GetNext()
0010b420 t ConCommandBase::AddFlags(int)
0010bf00 t ConCommandBase::Shutdown()
0010bee0 t ConCommandBase::ConCommandBase(char const*, char const*, int)
0010beb0 t ConCommandBase::ConCommandBase()
0010bee0 t ConCommandBase::ConCommandBase(char const*, char const*, int)
0010beb0 t ConCommandBase::ConCommandBase()
0010b6e0 t ConCommandBase::~ConCommandBase()
0010b330 t ConCommandBase::~ConCommandBase()
0010b330 t ConCommandBase::~ConCommandBase()
000ec8f0 t CPhysicsObject::EnableDrag(bool)
000eced0 t CPhysicsObject::NotifyWake()
000eabe0 t CPhysicsObject::SetDamping(float const*, float const*)
000ebec0 t CPhysicsObject::SetInertia(Vector const&)
000ed910 t CPhysicsObject::AddVelocity(Vector const*, Vector const*)
000ecea0 t CPhysicsObject::NotifySleep()
000eac20 t CPhysicsObject::SetContents(unsigned int)
000eaab0 t CPhysicsObject::SetGameData(void*)
000eb700 t CPhysicsObject::SetPosition(Vector const&, QAngle const&, bool)
000ed690 t CPhysicsObject::SetVelocity(Vector const*, Vector const*)
000eb4f0 t CPhysicsObject::BecomeHinged(int)
000ec190 t CPhysicsObject::EnableMotion(bool)
000eb4d0 t CPhysicsObject::RemoveHinged()
000ea850 t CPhysicsObject::SetGameFlags(unsigned short)
000ea870 t CPhysicsObject::SetGameIndex(unsigned short)
000eac30 t CPhysicsObject::UpdateShadow(Vector const&, QAngle const&, bool, float)
000ec760 t CPhysicsObject::BecomeTrigger()
000ed660 t CPhysicsObject::ClampVelocity()
000ec240 t CPhysicsObject::EnableGravity(bool)
000eae70 t CPhysicsObject::RemoveTrigger()
000ec370 t CPhysicsObject::SetSphereRadius(float)
000ee2b0 t CPhysicsObject::WriteToTemplate(vphysics_save_cphysicsobject_t&)
000edb90 t CPhysicsObject::ApplyForceCenter(Vector const&)
000edac0 t CPhysicsObject::ApplyForceOffset(Vector const&, Vector const&)
000ec2c0 t CPhysicsObject::EnableCollisions(bool)
000ee4a0 t CPhysicsObject::InitFromTemplate(CPhysicsEnvironment*, void*, vphysics_save_cphysicsobject_t const&)
000eac10 t CPhysicsObject::SetBuoyancyRatio(float)
000ea830 t CPhysicsObject::SetCallbackFlags(unsigned short)
000ec100 t CPhysicsObject::SetMaterialIndex(int)
000eda20 t CPhysicsObject::ApplyTorqueCenter(Vector const&)
000ea8b0 t CPhysicsObject::SetCollisionHints(unsigned int)
000eb820 t CPhysicsObject::SetPositionMatrix(matrix3x4_t const&, bool)
000ecf80 t CPhysicsObject::RecomputeDragBases()
000eaa50 t CPhysicsObject::SetDragCoefficient(float*, float*)
000eb5c0 t CPhysicsObject::ComputeShadowControl(hlshadowcontrol_params_t const&, float, float)
000ea930 t CPhysicsObject::RecheckContactPoints()
000ebf30 t CPhysicsObject::CreateFrictionSnapshot()
000eedb0 t CPhysicsObject::GetCollisionRulesCache()
000ecee0 t CPhysicsObject::GetVPhysicsEnvironment()
000ec6a0 t CPhysicsObject::RecheckCollisionFilter()
000eace0 t CPhysicsObject::RemoveShadowController()
000ec6e0 t CPhysicsObject::SetCollisionRulesCache(PhysicsCollisionRulesCache_t const&, bool)
000eaa20 t CPhysicsObject::SetUseAlternateGravity(bool)
000ebf20 t CPhysicsObject::DestroyFrictionSnapshot(IPhysicsFrictionSnapshot*)
000edc50 t CPhysicsObject::RestoreShadowController(IPhysicsShadowController*)
000ed7d0 t CPhysicsObject::SetVelocityInstantaneous(Vector const*, Vector const*)
000ed570 t CPhysicsObject::Init(CPhysCollide const*, IVP_Real_Object*, int, float, float, float)
000ebf70 t CPhysicsObject::Wake()
000ebf50 t CPhysicsObject::Sleep()
000ed4a0 t CPhysicsObject::SetMass(float)
000ec860 t CPhysicsObject::SetShadow(float, float, bool, bool)
000ed3e0 t CPhysicsObject::SetVolume(float)
000ece10 t CPhysicsObject::CPhysicsObject()
000ece10 t CPhysicsObject::CPhysicsObject()
000ec0c0 t CPhysicsObject::~CPhysicsObject()
000ebf90 t CPhysicsObject::~CPhysicsObject()
000ebf90 t CPhysicsObject::~CPhysicsObject()
000f2e60 t CPhysicsSpring::GetEndObject()
000f2520 t CPhysicsSpring::GetEndpoints(Vector*, Vector*)
000f2800 t CPhysicsSpring::AttachListener()
000f28a0 t CPhysicsSpring::DetachListener()
000f2e50 t CPhysicsSpring::GetStartObject()
000f2600 t CPhysicsSpring::SetSpringLength(float)
000f29d0 t CPhysicsSpring::WriteToTemplate(vphysics_save_cphysicsspring_t&)
000f2670 t CPhysicsSpring::SetSpringDamping(float)
000f26a0 t CPhysicsSpring::SetSpringConstant(float)
000f2ec0 t CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
000f2e80 t CPhysicsSpring::event_object_created(IVP_Event_Object*)
000f2920 t CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
000f2ea0 t CPhysicsSpring::event_object_revived(IVP_Event_Object*)
000f2850 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
000f2850 t CPhysicsSpring::CPhysicsSpring(CPhysicsObject*, CPhysicsObject*, IVP_Actuator_Spring*)
000f29b0 t CPhysicsSpring::~CPhysicsSpring()
000f2940 t CPhysicsSpring::~CPhysicsSpring()
000f2940 t CPhysicsSpring::~CPhysicsSpring()
000fbe60 t CTraceHullList::SetConvexIndex(int)
0010f380 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
0010f540 t CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
000e1190 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)
000e0980 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::Unlink(unsigned short)
000df6b0 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
000df6b0 t CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::~CUtlLinkedList()
001070c0 t CVPhysicsParse::ParseFluid(fluid_t*, IVPhysicsKeyHandler*)
001077f0 t CVPhysicsParse::ParseSolid(solid_t*, IVPhysicsKeyHandler*)
00106ce0 t CVPhysicsParse::ParseCustom(void*, IVPhysicsKeyHandler*)
00106df0 t CVPhysicsParse::ParseVehicle(vehicleparams_t*, IVPhysicsKeyHandler*)
00106590 t CVPhysicsParse::ParseVehicleAxle(vehicle_axleparams_t&)
00105eb0 t CVPhysicsParse::ParseVehicleBody(vehicle_bodyparams_t&)
00107000 t CVPhysicsParse::ParseSurfaceTable(int*, IVPhysicsKeyHandler*)
001062f0 t CVPhysicsParse::ParseVehicleWheel(vehicle_wheelparams_t&)
00105a80 t CVPhysicsParse::ParseVehicleEngine(vehicle_engineparams_t&)
00104340 t CVPhysicsParse::GetCurrentBlockName()
00106b50 t CVPhysicsParse::ParseCollisionRules(ragdollcollisionrules_t*, IVPhysicsKeyHandler*)
00105350 t CVPhysicsParse::ParseVehicleSteering(vehicle_steeringparams_t&)
00107370 t CVPhysicsParse::ParseRagdollConstraint(constraint_ragdollparams_t*, IVPhysicsKeyHandler*)
00106130 t CVPhysicsParse::ParseVehicleSuspension(vehicle_suspensionparams_t&)
001058c0 t CVPhysicsParse::ParseVehicleEngineBoost(vehicle_engineparams_t&)
00106900 t CVPhysicsParse::ParseRagdollAnimatedFriction(ragdollanimatedfriction_t*, IVPhysicsKeyHandler*)
00104360 t CVPhysicsParse::Finished()
001067c0 t CVPhysicsParse::NextBlock()
00108610 t CVPhysicsParse::SkipBlock()
00106840 t CVPhysicsParse::CVPhysicsParse(char const*)
00106840 t CVPhysicsParse::CVPhysicsParse(char const*)
001086a0 t CVPhysicsParse::~CVPhysicsParse()
00108600 t CVPhysicsParse::~CVPhysicsParse()
00108600 t CVPhysicsParse::~CVPhysicsParse()
000eed40 t IPhysicsObject::GetPhysics2Actor()
000eee70 t IPhysicsObject::~IPhysicsObject()
000eed30 t IPhysicsObject::~IPhysicsObject()
000eed30 t IPhysicsObject::~IPhysicsObject()
000f2ed0 t IPhysicsSpring::~IPhysicsSpring()
000f2e40 t IPhysicsSpring::~IPhysicsSpring()
000f2e40 t IPhysicsSpring::~IPhysicsSpring()
00178bb0 t IVP_Car_System::calc_ackerman_angle(float, float, float)
00179980 t IVP_Car_System::event_object_deleted(IVP_Event_Object*)
00179870 t IVP_Car_System::IVP_Car_System()
00179870 t IVP_Car_System::IVP_Car_System()
001781a0 t IVP_Car_System::~IVP_Car_System()
00178180 t IVP_Car_System::~IVP_Car_System()
00178180 t IVP_Car_System::~IVP_Car_System()
001ceba0 t IVP_Constraint::deactivate()
001ceb50 t IVP_Constraint::get_environment()
001ce950 t IVP_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
001ce940 t IVP_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
001ce930 t IVP_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
001ce9b0 t IVP_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
001ce9a0 t IVP_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
001ce990 t IVP_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
001ce9f0 t IVP_Constraint::change_fixing_point_Ros(IVP_U_Point const*)
001c7d00 t IVP_Constraint::get_controller_priority()
001ce970 t IVP_Constraint::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
001ce920 t IVP_Constraint::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001ce9d0 t IVP_Constraint::change_translation_axes_Ros(IVP_U_Matrix3 const*)
001ce980 t IVP_Constraint::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001ce9e0 t IVP_Constraint::change_target_fixing_point_Ros(IVP_U_Point const*)
001ce910 t IVP_Constraint::change_Aos_to_relaxe_constraint()
001ce900 t IVP_Constraint::change_Ros_to_relaxe_constraint()
001ce960 t IVP_Constraint::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
001c7d10 t IVP_Constraint::get_associated_controlled_cores()
001ce8f0 t IVP_Constraint::get_minimum_simulation_frequency()
001ce8d0 t IVP_Constraint::core_is_going_to_be_deleted_event(IVP_Core*)
001ce9c0 t IVP_Constraint::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
001ceb60 t IVP_Constraint::activate()
001ceb20 t IVP_Constraint::IVP_Constraint()
001ceb20 t IVP_Constraint::IVP_Constraint()
001ceaa0 t IVP_Constraint::~IVP_Constraint()
001cea00 t IVP_Constraint::~IVP_Constraint()
001cea00 t IVP_Constraint::~IVP_Constraint()
000d1e50 t IVP_Controller::reset_time(IVP_Time)
000d1e60 t IVP_Controller::get_controller_name()
000d1e40 t IVP_Controller::get_minimum_simulation_frequency()
000d1e30 t IVP_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
000d2010 t IVP_Controller::~IVP_Controller()
000d1e70 t IVP_Controller::~IVP_Controller()
000d1e70 t IVP_Controller::~IVP_Controller()
00174ea0 t IVP_Extra_Info::IVP_Extra_Info()
00174ea0 t IVP_Extra_Info::IVP_Extra_Info()
00197980 t IVP_Merge_Core::set_radius()
001980e0 t IVP_Merge_Core::place_objects()
001976e0 t IVP_Merge_Core::find_main_axis()
00197500 t IVP_Merge_Core::find_mass_center()
001975f0 t IVP_Merge_Core::find_damp_factors()
00197fd0 t IVP_Merge_Core::synchronize_motion()
00198040 t IVP_Merge_Core::check_for_unmovable_core()
00198200 t IVP_Merge_Core::calc_calc()
00197a30 t IVP_Merge_Core::set_speed()
00197f20 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
00197ec0 t IVP_Merge_Core::IVP_Merge_Core()
00197f20 t IVP_Merge_Core::IVP_Merge_Core(IVP_Core_Merged*, IVP_Core*, IVP_Core*)
00197ec0 t IVP_Merge_Core::IVP_Merge_Core()
00197fa0 t IVP_Merge_Core::~IVP_Merge_Core()
00197fa0 t IVP_Merge_Core::~IVP_Merge_Core()
001bf9f0 t IVP_OO_Watcher::get_ledges(IVP_Compact_Ledge const**)
001bf9d0 t IVP_OO_Watcher::get_objects(IVP_Real_Object**)
001b9280 t IVP_OO_Watcher::get_synapse(int)
001bf6b0 t IVP_OO_Watcher::hull_limit_exceeded_event()
001bf950 t IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
001bf920 t IVP_OO_Watcher::hull_manager_is_going_to_be_deleted_event()
001bfb80 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
001bfb80 t IVP_OO_Watcher::IVP_OO_Watcher(IVP_Collision_Delegator*, IVP_Real_Object*, IVP_Real_Object*)
001bfb60 t IVP_OO_Watcher::~IVP_OO_Watcher()
001bfa20 t IVP_OO_Watcher::~IVP_OO_Watcher()
001bfa20 t IVP_OO_Watcher::~IVP_OO_Watcher()
001b3cd0 t IVP_OV_Element::add_oo_collision(IVP_Collision*)
001b3bf0 t IVP_OV_Element::add_to_hull_manager(IVP_Hull_Manager*, float)
001b3d50 t IVP_OV_Element::remove_oo_collision(IVP_Collision*)
001b3ad0 t IVP_OV_Element::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
001b3ab0 t IVP_OV_Element::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
001b3aa0 t IVP_OV_Element::get_type()
001b3b90 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
001b3b90 t IVP_OV_Element::IVP_OV_Element(IVP_Real_Object*)
001b53e0 t IVP_OV_Element::~IVP_OV_Element()
001b5320 t IVP_OV_Element::~IVP_OV_Element()
001b5320 t IVP_OV_Element::~IVP_OV_Element()
00152080 t IVP_point_hash::find_point(IVP_Poly_Point*)
00152020 t IVP_point_hash::remove_point(IVP_Poly_Point*)
00151f40 t IVP_point_hash::point_to_index(IVP_Poly_Point*)
00151fc0 t IVP_point_hash::add_point(IVP_Poly_Point*)
00152110 t IVP_point_hash::IVP_point_hash(int)
00152110 t IVP_point_hash::IVP_point_hash(int)
00151eb0 t IVP_point_hash::~IVP_point_hash()
00151e90 t IVP_point_hash::~IVP_point_hash()
00151e90 t IVP_point_hash::~IVP_point_hash()
001523e0 t IVP_Poly_Point::p()
00152390 t IVP_Poly_Point::print(char const*)
00152370 t IVP_Poly_Point::point_num()
00173940 t IVP_Ray_Solver::check_ray_against_ball(IVP_Ball*)
00172a60 t IVP_Ray_Solver::check_ray_against_cube(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00173cd0 t IVP_Ray_Solver::check_ray_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
00173b40 t IVP_Ray_Solver::check_ray_against_object(IVP_Real_Object*)
001729b0 t IVP_Ray_Solver::check_ray_against_square(float, float, IVP_U_Float_Point const*, IVP_U_Float_Point const*, int, int)
00174030 t IVP_Ray_Solver::check_ray_against_all_objects_in_sim(IVP_Environment const*)
001728d0 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
001728d0 t IVP_Ray_Solver::IVP_Ray_Solver(IVP_Ray_Solver_Template const*)
00174200 t IVP_Ray_Solver::~IVP_Ray_Solver()
001741c0 t IVP_Ray_Solver::~IVP_Ray_Solver()
001741c0 t IVP_Ray_Solver::~IVP_Ray_Solver()
001bf8b0 t IVP_Synapse_OO::init_synapse_oo(IVP_OO_Watcher*, IVP_Real_Object*)
001bf810 t IVP_Synapse_OO::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
001bf830 t IVP_Synapse_OO::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
001b90d0 t IVP_Synapse_OO::get_type()
001b9270 t IVP_Synapse_OO::IVP_Synapse_OO()
001b9270 t IVP_Synapse_OO::IVP_Synapse_OO()
001bf890 t IVP_Synapse_OO::~IVP_Synapse_OO()
001bf860 t IVP_Synapse_OO::~IVP_Synapse_OO()
001bf860 t IVP_Synapse_OO::~IVP_Synapse_OO()
00157340 t IVP_Tetra_Edge::p()
001572d0 t IVP_Tetra_Edge::print(char const*)
001a30d0 t IVP_Time_Event::simulate_time_event(IVP_Environment*)
001a3100 t IVP_Time_Event::IVP_Time_Event()
001a3100 t IVP_Time_Event::IVP_Time_Event()
001b02d0 t IVP_U_Min_Hash::remove_min()
001b0230 t IVP_U_Min_Hash::change_value(void*, float)
001b0300 t IVP_U_Min_Hash::find_min_elem()
001b0320 t IVP_U_Min_Hash::find_min_value()
001affc0 t IVP_U_Min_Hash::min_added_at_index(IVP_U_Min_Hash_Elem*, int)
001b0010 t IVP_U_Min_Hash::min_removed_at_index(IVP_U_Min_Hash_Elem*, int)
001b00e0 t IVP_U_Min_Hash::add(void*, float)
001b0190 t IVP_U_Min_Hash::remove(void*)
001afef0 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
001afef0 t IVP_U_Min_Hash::IVP_U_Min_Hash(int)
001aff40 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
001aff40 t IVP_U_Min_Hash::~IVP_U_Min_Hash()
001b0a80 t IVP_U_Min_List::has_elements()
001b0a60 t IVP_U_Min_List::find_min_elem()
001b0aa0 t IVP_U_Min_List::find_min_value()
001b0ab0 t IVP_U_Min_List::prefetch0_minlist()
001b0ac0 t IVP_U_Min_List::prefetch1_minlist()
001b0900 t IVP_U_Min_List::remove_minlist_elem(unsigned int)
001b0550 t IVP_U_Min_List::add(void*, float)
001b0a10 t IVP_U_Min_List::check()
001b0480 t IVP_U_Min_List::IVP_U_Min_List(int)
001b0480 t IVP_U_Min_List::IVP_U_Min_List(int)
001b0520 t IVP_U_Min_List::~IVP_U_Min_List()
001b0520 t IVP_U_Min_List::~IVP_U_Min_List()
001a9030 t IVP_U_Straight::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*, float*)
001a8d20 t IVP_U_Straight::set(IVP_U_Point const*, IVP_U_Point const*)
001a8d70 t IVP_U_Straight::set(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001a8cd0 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
001a8cd0 t IVP_U_Straight::IVP_U_Straight(IVP_U_Point const*, IVP_U_Point const*)
0006ebe0 t NxBoxShapeDesc::setToDefault()
0006e7d0 t NxBoxShapeDesc::~NxBoxShapeDesc()
0006e790 t NxBoxShapeDesc::~NxBoxShapeDesc()
0006e790 t NxBoxShapeDesc::~NxBoxShapeDesc()
00082730 t NxEffectorDesc::setToDefault()
00082b50 t NxEffectorDesc::~NxEffectorDesc()
00082720 t NxEffectorDesc::~NxEffectorDesc()
00082720 t NxEffectorDesc::~NxEffectorDesc()
00152900 t P_Sur_2D_Point::P_Sur_2D_Point(int)
00152900 t P_Sur_2D_Point::P_Sur_2D_Point(int)
00152980 t P_Sur_2D_Point::~P_Sur_2D_Point()
00152980 t P_Sur_2D_Point::~P_Sur_2D_Point()
000d2930 t CCollisionQuery::ConvexCount()
000d2960 t CCollisionQuery::GetGameData(int)
000d2940 t CCollisionQuery::TriangleCount(int)
000d2980 t CCollisionQuery::GetTriangleVerts(int, int, Vector*)
000d2a10 t CCollisionQuery::SetTriangleVerts(int, int, Vector const*)
000d2a20 t CCollisionQuery::GetTriangleMaterialIndex(int, int)
000d2a50 t CCollisionQuery::SetTriangleMaterialIndex(int, int, int)
000d4ad0 t CCollisionQuery::Triangle(IVP_Compact_Ledge*, int)
000d4b00 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
000d4b00 t CCollisionQuery::CCollisionQuery(CPhysCollide*)
000d6120 t CCollisionQuery::~CCollisionQuery()
000d60c0 t CCollisionQuery::~CCollisionQuery()
000d60c0 t CCollisionQuery::~CCollisionQuery()
000dee50 t CDragController::get_controller_name()
000dee60 t CDragController::get_controller_priority()
000df0f0 t CDragController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000def90 t CDragController::~CDragController()
000dee40 t CDragController::~CDragController()
000dee40 t CDragController::~CDragController()
000e1400 t CObjectPairHash::AddObjectPair(void*, void*)
000df060 t CObjectPairHash::IsObjectInHash(void*)
000e0cc0 t CObjectPairHash::RemoveObjectPair(void*, void*)
000def00 t CObjectPairHash::IsObjectPairInHash(void*, void*)
000df510 t CObjectPairHash::GetPairListForObject(void*, int, void**)
000df5c0 t CObjectPairHash::GetPairCountForObject(void*)
000e0a30 t CObjectPairHash::RemoveAllPairsForObject(void*)
000df8b0 t CObjectPairHash::~CObjectPairHash()
000df820 t CObjectPairHash::~CObjectPairHash()
000df820 t CObjectPairHash::~CObjectPairHash()
000f8ff0 t CTier1AppSystem<IPhysics2Disabler, 0>::Disconnect()
000f90f0 t CTier1AppSystem<IPhysics2Disabler, 0>::Init()
000f9010 t CTier1AppSystem<IPhysics2Disabler, 0>::Connect(void* (*)(char const*, int*))
000f8fc0 t CTier1AppSystem<IPhysics2Disabler, 0>::Shutdown()
000ce7f0 t CTier1AppSystem<IPhysics, 0>::Disconnect()
000ce840 t CTier1AppSystem<IPhysics, 0>::Init()
000ce810 t CTier1AppSystem<IPhysics, 0>::Connect(void* (*)(char const*, int*))
000ce7c0 t CTier1AppSystem<IPhysics, 0>::Shutdown()
00118960 t CUtlBinaryBlock::Set(void const*, int)
001185c0 t CUtlBinaryBlock::SetLength(int)
00118bb0 t CUtlBinaryBlock::operator=(CUtlBinaryBlock const&)
001183b0 t CUtlBinaryBlock::CUtlBinaryBlock(int, int)
00118410 t CUtlBinaryBlock::CUtlBinaryBlock(void const*, int)
001183f0 t CUtlBinaryBlock::CUtlBinaryBlock(void*, int, int)
00118c10 t CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
001183b0 t CUtlBinaryBlock::CUtlBinaryBlock(int, int)
00118410 t CUtlBinaryBlock::CUtlBinaryBlock(void const*, int)
001183f0 t CUtlBinaryBlock::CUtlBinaryBlock(void*, int, int)
00118c10 t CUtlBinaryBlock::CUtlBinaryBlock(CUtlBinaryBlock const&)
00119b60 t CUtlSymbolTable::AddString(char const*)
00119840 t CUtlSymbolTable::RemoveAll()
00118e90 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
00118e90 t CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
001198a0 t CUtlSymbolTable::~CUtlSymbolTable()
001198a0 t CUtlSymbolTable::~CUtlSymbolTable()
00134910 t hk_Vector3_Util::random_vec()
00134940 t hk_Vector3_Util::perp_vec(hk_Vector3 const&)
000d6070 t ICollisionQuery::~ICollisionQuery()
000d5e50 t ICollisionQuery::~ICollisionQuery()
000d5e50 t ICollisionQuery::~ICollisionQuery()
00198310 t IVP_Core_Merged::set_by_merge(IVP_Core*, IVP_Core*)
001850a0 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
00184f60 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
001850a0 t IVP_Core_Merged::IVP_Core_Merged(IVP_Real_Object*)
00184f60 t IVP_Core_Merged::IVP_Core_Merged(IVP_Core*, IVP_Core*)
00185b40 t IVP_Environment::reset_time()
00185ec0 t IVP_Environment::create_ball(IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00186a20 t IVP_Environment::do_d_events()
00188250 t IVP_Environment::get_gravity()
00185620 t IVP_Environment::set_gravity(IVP_U_Point*)
00185820 t IVP_Environment::create_force(IVP_Template_Force*)
00186af0 t IVP_Environment::simulate_psi(IVP_Time)
001856a0 t IVP_Environment::create_rotmot(IVP_Template_Rot_Mot*)
001858c0 t IVP_Environment::create_spring(IVP_Template_Spring*)
00185740 t IVP_Environment::create_torque(IVP_Template_Torque*)
001880b0 t IVP_Environment::get_env_state()
00186d30 t IVP_Environment::merge_objects(IVP_U_Vector<IVP_Real_Object>*)
00185e50 t IVP_Environment::create_polygon(IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
00186540 t IVP_Environment::fire_event_PSI()
00185bd0 t IVP_Environment::simulate_dtime(float)
00185a90 t IVP_Environment::simulate_until(IVP_Time)
00186aa0 t IVP_Environment::add_draw_vector(IVP_U_Point const*, IVP_U_Float_Point const*, char const*, int)
0019eb80 t IVP_Environment::add_revive_core(IVP_Core*)
00186750 t IVP_Environment::add_listener_PSI(IVP_Listener_PSI*)
00188230 t IVP_Environment::get_current_time()
00185a60 t IVP_Environment::get_root_cluster()
00188160 t IVP_Environment::get_sim_unit_mem()
00188240 t IVP_Environment::get_wakeup_count()
0019ebf0 t IVP_Environment::revive_cores_PSI()
00185c40 t IVP_Environment::set_current_time(IVP_Time)
00185a10 t IVP_Environment::create_check_dist(IVP_Template_Check_Dist*)
00180470 t IVP_Environment::create_constraint(IVP_Template_Constraint const*)
001859c0 t IVP_Environment::create_stabilizer(IVP_Template_Stabilizer*)
00185970 t IVP_Environment::create_suspension(IVP_Template_Suspension*)
00188040 t IVP_Environment::get_next_PSI_time()
00188080 t IVP_Environment::get_delta_PSI_time()
00188220 t IVP_Environment::get_freeze_manager()
00188170 t IVP_Environment::get_short_term_mem()
0019eaf0 t IVP_Environment::remove_revive_core(IVP_Core*)
00185570 t IVP_Environment::set_delta_PSI_time(float)
00185c00 t IVP_Environment::simulate_time_step(float)
001867a0 t IVP_Environment::remove_listener_PSI(IVP_Listener_PSI*)
001880a0 t IVP_Environment::get_current_time_code()
001881b0 t IVP_Environment::get_statistic_manager()
00188270 t IVP_Environment::get_gravity_controller()
00188090 t IVP_Environment::get_inv_delta_PSI_time()
00188150 t IVP_Environment::get_performancecounter()
001857d0 t IVP_Environment::create_controller_motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
00185df0 t IVP_Environment::delete_draw_vector_debug()
001861e0 t IVP_Environment::fire_event_object_frozen(IVP_Event_Object*)
001862a0 t IVP_Environment::fire_event_pre_collision(IVP_Event_Collision*)
00188060 t IVP_Environment::get_old_time_of_last_PSI()
00186120 t IVP_Environment::fire_event_object_created(IVP_Event_Object*)
00186180 t IVP_Environment::fire_event_object_deleted(IVP_Event_Object*)
00186240 t IVP_Environment::fire_event_object_revived(IVP_Event_Object*)
00186310 t IVP_Environment::fire_event_post_collision(IVP_Event_Collision*)
00185fb0 t IVP_Environment::add_listener_object_global(IVP_Listener_Object*)
00188030 t IVP_Environment::get_integrated_energy_damp()
00185f30 t IVP_Environment::add_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
00186380 t IVP_Environment::fire_event_friction_created(IVP_Event_Friction*)
001863f0 t IVP_Environment::fire_event_friction_deleted(IVP_Event_Friction*)
001881c0 t IVP_Environment::get_betterstatisticsmanager()
00187fe0 t IVP_Environment::must_perform_movement_check()
00185ae0 t IVP_Environment::simulate_variable_time_step(float)
001865a0 t IVP_Environment::fire_event_constraint_broken(IVP_Constraint*)
00186600 t IVP_Environment::fire_event_constraint_broken(hk_Breakable_Constraint*)
00185c60 t IVP_Environment::force_psi_on_next_simulation()
00186660 t IVP_Environment::add_listener_collision_global(IVP_Listener_Collision*)
00186080 t IVP_Environment::remove_listener_object_global(IVP_Listener_Object*)
00185f70 t IVP_Environment::add_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
00186840 t IVP_Environment::add_listener_constraint_global(IVP_Listener_Constraint*)
00186ae0 t IVP_Environment::get_global_collision_tolerance()
00186000 t IVP_Environment::install_listener_object_global(IVP_Listener_Object*)
00185f50 t IVP_Environment::remove_listener_object_private(IVP_Real_Object*, IVP_Listener_Object*)
00186ab0 t IVP_Environment::set_global_collision_tolerance(float, float)
00186460 t IVP_Environment::fire_event_friction_pair_created(IVP_Friction_Core_Pair*)
001864d0 t IVP_Environment::fire_event_friction_pair_deleted(IVP_Friction_Core_Pair*)
001866b0 t IVP_Environment::remove_listener_collision_global(IVP_Listener_Collision*)
00185f90 t IVP_Environment::remove_listener_collision_private(IVP_Real_Object*, IVP_Listener_Collision*)
00186890 t IVP_Environment::remove_listener_constraint_global(IVP_Listener_Constraint*)
001855c0 t IVP_Environment::fire_object_is_removed_from_collision_detection(IVP_Real_Object*)
00186f50 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
00186f50 t IVP_Environment::IVP_Environment(IVP_Environment_Manager*, IVP_Application_Environment*, char const*, unsigned int)
001876f0 t IVP_Environment::~IVP_Environment()
001876f0 t IVP_Environment::~IVP_Environment()
001aee00 t IVP_Inline_Math::save_acosf(float)
001aeed0 t IVP_Inline_Math::approx5_cos(float)
001aee90 t IVP_Inline_Math::approx5_sin(float)
001a9820 t IVP_Inline_Math::isqrt_float(float)
001a9860 t IVP_Inline_Math::isqrt_double(float)
001aee50 t IVP_Inline_Math::fast_approx_asin(float)
001aef10 t IVP_Inline_Math::upper_limit_asin(float)
001aefe0 t IVP_Inline_Math::invert_2x2_matrix(float, float, float, float, float*, float*, float*, float*)
001aef90 t IVP_Inline_Math::fast_anywhere_asin(float)
001ade00 t IVP_Inline_Math::cosd(float)
001addf0 t IVP_Inline_Math::sind(float)
001ade10 t IVP_Inline_Math::acosd(float)
001ade20 t IVP_Inline_Math::asind(float)
001ade30 t IVP_Inline_Math::atand(float)
001add70 t IVP_Inline_Math::fabsd(float)
001addb0 t IVP_Inline_Math::sqrtd(float)
001ade50 t IVP_Inline_Math::atan2d(float, float)
001adde0 t IVP_Inline_Math::ivp_cosf(float)
001ade40 t IVP_Inline_Math::ivp_expf(float)
001addd0 t IVP_Inline_Math::ivp_sinf(float)
001aef50 t IVP_Inline_Math::fast_asin(float)
001aee30 t IVP_Inline_Math::int_div_2(int)
001add90 t IVP_Inline_Math::ivp_sqrtf(float)
0019a580 t IVP_Real_Object::reset_time(IVP_Time)
0019aa50 t IVP_Real_Object::set_pinned(IVP_BOOL)
0019a170 t IVP_Real_Object::change_mass(float)
0019a290 t IVP_Real_Object::insert_anchor(IVP_Anchor*)
0019a2c0 t IVP_Real_Object::remove_anchor(IVP_Anchor*)
0019c880 t IVP_Real_Object::set_is_debris(IVP_BOOL)
0019c810 t IVP_Real_Object::get_ov_element()
0019a5a0 t IVP_Real_Object::delete_silently()
001a4c20 t IVP_Real_Object::get_cache_object()
0019c7c0 t IVP_Real_Object::get_first_anchor()
0019c7f0 t IVP_Real_Object::get_hull_manager()
0019bbd0 t IVP_Real_Object::init_object_core(IVP_Environment*, IVP_Template_Real_Object const*)
0019a4e0 t IVP_Real_Object::set_extra_radius(float)
0019c110 t IVP_Real_Object::do_radar_checking(IVP_Radar*)
0019c290 t IVP_Real_Object::convert_to_phantom(IVP_Template_Phantom const*)
0019abc0 t IVP_Real_Object::disable_simulation()
0019c870 t IVP_Real_Object::get_movement_state()
0019a3d0 t IVP_Real_Object::recalc_core_radius()
0019c820 t IVP_Real_Object::set_movement_state(IVP_Movement_Type)
0019a230 t IVP_Real_Object::add_listener_object(IVP_Listener_Object*)
0019c460 t IVP_Real_Object::async_push_object_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
0019b610 t IVP_Real_Object::calc_m_core_f_object(IVP_U_Matrix*)
0019c420 t IVP_Real_Object::ensure_in_simulation()
0019af10 t IVP_Real_Object::change_unmovable_flag(IVP_BOOL)
0019a680 t IVP_Real_Object::get_all_near_mindists()
0019a800 t IVP_Real_Object::unlink_contact_points(IVP_BOOL)
0019a1d0 t IVP_Real_Object::add_listener_collision(IVP_Listener_Collision*)
0019c8b0 t IVP_Real_Object::get_controller_phantom()
0019a260 t IVP_Real_Object::remove_listener_object(IVP_Listener_Object*)
0019ad00 t IVP_Real_Object::disable_simulation_list(IVP_Environment*, IVP_Real_Object**, int)
0019c7d0 t IVP_Real_Object::get_first_exact_synapse()
00199fb0 t IVP_Real_Object::set_new_m_object_f_core(IVP_U_Matrix const*)
0019a920 t IVP_Real_Object::set_new_surface_manager(IVP_SurfaceManager*)
0019a3b0 t IVP_Real_Object::ensure_in_simulation_now()
001a4bb0 t IVP_Real_Object::get_cache_object_no_lock()
0019a6e0 t IVP_Real_Object::recheck_collision_filter()
0019a190 t IVP_Real_Object::recompile_values_changed()
0019c570 t IVP_Real_Object::async_add_speed_object_ws(IVP_U_Float_Point const*)
0019b150 t IVP_Real_Object::clear_internal_references()
0019a790 t IVP_Real_Object::delete_and_check_vicinity()
0019a200 t IVP_Real_Object::remove_listener_collision(IVP_Listener_Collision*)
0019a150 t IVP_Real_Object::change_fast_piling_allowed(IVP_BOOL)
0019a890 t IVP_Real_Object::enable_collision_detection(IVP_BOOL)
0019a710 t IVP_Real_Object::force_grow_friction_system()
0019c7e0 t IVP_Real_Object::get_first_friction_synapse()
0019a1b0 t IVP_Real_Object::recompile_material_changed()
00199e10 t IVP_Real_Object::set_new_quat_object_f_core(IVP_U_Quat const*, IVP_U_Point const*)
0019c300 t IVP_Real_Object::beam_object_to_new_position(IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
0019a370 t IVP_Real_Object::revive_object_for_simulation()
0019c500 t IVP_Real_Object::async_add_rot_speed_object_cs(IVP_U_Float_Point const*)
0019c8a0 t IVP_Real_Object::is_collision_detection_enabled()
0019a740 t IVP_Real_Object::revive_nearest_objects_grow_fs()
0019a630 t IVP_Real_Object::recalc_exact_mindists_of_object()
0019b0e0 t IVP_Real_Object::unlink_contact_points_for_object(IVP_Real_Object*)
0019a5c0 t IVP_Real_Object::recalc_invalid_mindists_of_object()
0019c010 t IVP_Real_Object::get_collision_check_reference_count()
0019a2f0 t IVP_Real_Object::update_exact_mindist_events_of_object()
0019b3f0 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
0019b3f0 t IVP_Real_Object::IVP_Real_Object(IVP_Cluster*, IVP_SurfaceManager*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
0019b360 t IVP_Real_Object::~IVP_Real_Object()
0019b1e0 t IVP_Real_Object::~IVP_Real_Object()
0019b1e0 t IVP_Real_Object::~IVP_Real_Object()
001572b0 t IVP_Tetra_Point::p()
001575a0 t IVP_Tetra_Point::init(IVP_Tetra_Intrude*)
00157250 t IVP_Tetra_Point::print(char const*)
000d6200 t IVP_U_BigVector<IVP_Compact_Ledge>::~IVP_U_BigVector()
000d6200 t IVP_U_BigVector<IVP_Compact_Ledge>::~IVP_U_BigVector()
001b3900 t IVP_VHash_Store::change_elem(void*, void*)
001b37c0 t IVP_VHash_Store::remove_elem(void*)
001b36a0 t IVP_VHash_Store::remove_elem(void*, unsigned int)
001b3470 t IVP_VHash_Store::untouch_all()
001b39b0 t IVP_VHash_Store::touch_element(void*, unsigned int)
001b3810 t IVP_VHash_Store::check()
001b3a20 t IVP_VHash_Store::print()
001b35f0 t IVP_VHash_Store::rehash(int)
001b3590 t IVP_VHash_Store::add_elem(void*, void*)
001b34b0 t IVP_VHash_Store::add_elem(void*, void*, int)
001b38b0 t IVP_VHash_Store::find_elem(void*)
001b3820 t IVP_VHash_Store::find_elem(void*, unsigned int)
001b33d0 t IVP_VHash_Store::IVP_VHash_Store(int)
001b3410 t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
001b33d0 t IVP_VHash_Store::IVP_VHash_Store(int)
001b3410 t IVP_VHash_Store::IVP_VHash_Store(IVP_VHash_Store_Elem*, int)
001b3440 t IVP_VHash_Store::~IVP_VHash_Store()
001b3440 t IVP_VHash_Store::~IVP_VHash_Store()
000f3cf0 t vehicleparams_t::GetBaseMap()
002609c0 d vehicleparams_t::m_DataMap
000e0570 t CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, float)
000df300 t CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
000ded90 t CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
000dee00 t CCollisionSolver::max_collision_checks_exceeded(int)
000e0310 t CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
000dec70 t CCollisionSolver::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
000dedb0 t CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
000dfc60 t CCollisionSolver::~CCollisionSolver()
000dfbe0 t CCollisionSolver::~CCollisionSolver()
000dfbe0 t CCollisionSolver::~CCollisionSolver()
0010d910 t CDataManagerBase::TargetSize()
0010e240 t CDataManagerBase::MarkAsStale(memhandle_t__*)
0010e670 t CDataManagerBase::CreateHandle(bool)
0010e160 t CDataManagerBase::LockResource(memhandle_t__*)
0010dce0 t CDataManagerBase::TouchByIndex(unsigned short)
0010d920 t CDataManagerBase::AvailableSize()
0010da70 t CDataManagerBase::BreakAllLocks()
0010d7f0 t CDataManagerBase::SetTargetSize(unsigned int)
0010dd60 t CDataManagerBase::TouchResource(memhandle_t__*)
0010dbe0 t CDataManagerBase::EnsureCapacity(unsigned int)
0010d980 t CDataManagerBase::UnlockResource(memhandle_t__*)
0010df50 t CDataManagerBase::DestroyResource(memhandle_t__*)
0010e500 t CDataManagerBase::FlushAllUnlocked()
0010e820 t CDataManagerBase::GetLRUHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0010dcc0 t CDataManagerBase::FlushToTargetSize()
0010db20 t CDataManagerBase::GetForFreeByIndex(unsigned short)
0010e7a0 t CDataManagerBase::GetLockHandleList(CUtlVector<memhandle_t__*, CUtlMemory<memhandle_t__*, int> >&)
0010d7b0 t CDataManagerBase::NotifySizeChanged(memhandle_t__*, unsigned int, unsigned int)
0010ddd0 t CDataManagerBase::GetResource_NoLock(memhandle_t__*)
0010d880 t CDataManagerBase::StoreResourceInHandle(unsigned short, void*, unsigned int)
0010e070 t CDataManagerBase::LockResourceReturnCount(int*, memhandle_t__*)
0010d800 t CDataManagerBase::GetResource_NoLockNoLRUTouch(memhandle_t__*)
0010e930 t CDataManagerBase::Lock()
0010dca0 t CDataManagerBase::Purge(unsigned int)
0010e950 t CDataManagerBase::Unlock()
0010e940 t CDataManagerBase::TryLock()
0010e300 t CDataManagerBase::FlushAll()
0010d8e0 t CDataManagerBase::ToHandle(unsigned short)
0010d930 t CDataManagerBase::UsedSize()
0010de70 t CDataManagerBase::BreakLock(memhandle_t__*)
0010e8a0 t CDataManagerBase::CDataManagerBase(unsigned int)
0010e8a0 t CDataManagerBase::CDataManagerBase(unsigned int)
0010d960 t CDataManagerBase::~CDataManagerBase()
0010d940 t CDataManagerBase::~CDataManagerBase()
0010d940 t CDataManagerBase::~CDataManagerBase()
0010d4a0 t CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
0010fd20 t CDllDemandLoader::GetFactory()
0010fd70 t CDllDemandLoader::Unload()
0010fd00 t CDllDemandLoader::CDllDemandLoader(char const*)
0010fd00 t CDllDemandLoader::CDllDemandLoader(char const*)
0010fdc0 t CDllDemandLoader::~CDllDemandLoader()
0010fda0 t CDllDemandLoader::~CDllDemandLoader()
0010fda0 t CDllDemandLoader::~CDllDemandLoader()
000d1f00 t CPhysics_Airboat::IsBoosting()
000cf270 t CPhysics_Airboat::do_steering(float, bool)
000cf450 t CPhysics_Airboat::InitAirboat(IVP_Template_Car_System const*)
000d0060 t CPhysics_Airboat::PreRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
000d01d0 t CPhysics_Airboat::PostRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Airboat_Impact*)
000cefc0 t CPhysics_Airboat::get_skid_info(IVP_Wheel_Skid_Info*)
000cfc70 t CPhysics_Airboat::GetWaterDepth(Ray_t*, IPhysicsObject*)
000ceee0 t CPhysics_Airboat::get_body_speed(IVP_COORDINATE_INDEX)
000d1ef0 t CPhysics_Airboat::set_powerslide(float, float)
000d1f30 t CPhysics_Airboat::update_booster(float)
000cf200 t CPhysics_Airboat::update_throttle(float)
000d1f20 t CPhysics_Airboat::activate_booster(float, float, float)
000d0800 t CPhysics_Airboat::DoSimulationDrag(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000cee10 t CPhysics_Airboat::get_wheel_torque(IVP_POS_WHEEL)
000cf4e0 t CPhysics_Airboat::SetWheelFriction(int, float)
000cf1b0 t CPhysics_Airboat::do_steering_wheel(IVP_POS_WHEEL, float)
000d1f40 t CPhysics_Airboat::get_booster_delay()
000d1d70 t CPhysics_Airboat::InitRaycastCarAxes(IVP_Template_Car_System const*)
000d1960 t CPhysics_Airboat::InitRaycastCarBody(IVP_Template_Car_System const*)
000cf170 t CPhysics_Airboat::change_wheel_torque(IVP_POS_WHEEL, float)
000d1260 t CPhysics_Airboat::DoSimulationGravity(IVP_Event_Sim*)
000d0e20 t CPhysics_Airboat::DoSimulationTurbine(IVP_Event_Sim*)
000d1ec0 t CPhysics_Airboat::get_controller_name()
000d0110 t CPhysics_Airboat::UpdateAirborneState(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000cedf0 t CPhysics_Airboat::change_spring_length(IVP_POS_WHEEL, float)
000cfd30 t CPhysics_Airboat::do_raycasts_gameside(int, IVP_Ray_Solver_Template*, IVP_Raycast_Airboat_Impact*)
000d06c0 t CPhysics_Airboat::DoSimulationPontoons(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000d0f30 t CPhysics_Airboat::DoSimulationSteering(IVP_Event_Sim*)
000d1a30 t CPhysics_Airboat::InitRaycastCarWheels(IVP_Template_Car_System const*)
000cee80 t CPhysics_Airboat::change_body_downforce(float)
000d1ed0 t CPhysics_Airboat::change_max_body_force(IVP_POS_WHEEL, float)
000cf0a0 t CPhysics_Airboat::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
000cf5d0 t CPhysics_Airboat::pre_raycasts_gameside(int, IVP_Ray_Solver_Template*, Ray_t*, IVP_Raycast_Airboat_Impact*)
000cf020 t CPhysics_Airboat::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
000ced60 t CPhysics_Airboat::change_spring_constant(IVP_POS_WHEEL, float)
000d1f50 t CPhysics_Airboat::get_booster_time_to_go()
000d1ea0 t CPhysics_Airboat::update_wheel_positions()
000cee70 t CPhysics_Airboat::change_fast_turn_factor(float)
000ced80 t CPhysics_Airboat::change_spring_dampening(IVP_POS_WHEEL, float)
000ceeb0 t CPhysics_Airboat::get_controller_priority()
000cef80 t CPhysics_Airboat::get_orig_axles_distance()
000d1820 t CPhysics_Airboat::change_friction_of_wheel(IVP_POS_WHEEL, float)
000d16e0 t CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000d1f10 t CPhysics_Airboat::set_booster_acceleration(float)
000cedc0 t CPhysics_Airboat::change_spring_pre_tension(IVP_POS_WHEEL, float)
000d1270 t CPhysics_Airboat::CountSurfaceContactPoints(IVP_Raycast_Airboat_Impact*)
000d0620 t CPhysics_Airboat::DoSimulationPontoonsWater(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000d1840 t CPhysics_Airboat::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
000d1ee0 t CPhysics_Airboat::update_body_countertorque()
000cee50 t CPhysics_Airboat::change_stabilizer_constant(IVP_POS_AXIS, float)
000d0510 t CPhysics_Airboat::DoSimulationPontoonsGround(IVP_Raycast_Airboat_Wheel*, IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000ceec0 t CPhysics_Airboat::get_wheel_angular_velocity(IVP_POS_WHEEL)
000d14c0 t CPhysics_Airboat::DoSimulationKeepUprightRoll(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000d0760 t CPhysics_Airboat::PerformFrictionNotification(float, float, int, IPhysicsCollisionData*)
000cf500 t CPhysics_Airboat::ComputeFrontPontoonWaveNoise(int, float)
000d12b0 t CPhysics_Airboat::DoSimulationKeepUprightPitch(IVP_Raycast_Airboat_Impact*, IVP_Event_Sim*)
000cef40 t CPhysics_Airboat::get_orig_front_wheel_distance()
000cf130 t CPhysics_Airboat::get_associated_controlled_cores()
000cf150 t CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
000ceda0 t CPhysics_Airboat::change_spring_dampening_compression(IVP_POS_WHEEL, float)
000d1dd0 t CPhysics_Airboat::get_axle(IVP_POS_AXIS)
000cf4c0 t CPhysics_Airboat::GetWheel(int)
000cee30 t CPhysics_Airboat::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
000d1df0 t CPhysics_Airboat::get_wheel(IVP_POS_WHEEL)
000d1c30 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
000d1c30 t CPhysics_Airboat::CPhysics_Airboat(IVP_Environment*, IVP_Template_Car_System const*, IPhysicsGameTrace*)
000cf430 t CPhysics_Airboat::~CPhysics_Airboat()
000cf370 t CPhysics_Airboat::~CPhysics_Airboat()
000cf370 t CPhysics_Airboat::~CPhysics_Airboat()
000defb0 t IDeleteQueueItem::~IDeleteQueueItem()
000dec50 t IDeleteQueueItem::~IDeleteQueueItem()
000dec50 t IDeleteQueueItem::~IDeleteQueueItem()
001a4710 t IVP_Cache_Object::get_core_pos()
001a4700 t IVP_Cache_Object::remove_reference()
001a43d0 t IVP_Cache_Object::update_cache_object()
00262c94 d IVP_Compact_Edge::next_table
00262c84 d IVP_Compact_Edge::prev_table
00170c30 t IVP_Compact_Edge::get_opposite()
00170780 t IVP_Compact_Edge::set_is_virtual(unsigned int)
00170760 t IVP_Compact_Edge::set_opposite_index(int)
00170750 t IVP_Compact_Edge::set_start_point_index(int)
00170bb0 t IVP_Compact_Edge::get_next()
00170bf0 t IVP_Compact_Edge::get_prev()
00170460 t IVP_Compact_Edge::byte_swap()
00170440 t IVP_Compact_Edge::IVP_Compact_Edge()
00170440 t IVP_Compact_Edge::IVP_Compact_Edge()
00193970 t IVP_Hull_Manager::reset_time(IVP_Time)
001938a0 t IVP_Hull_Manager::reset_times()
00193860 t IVP_Hull_Manager::delete_hull_manager()
001939b0 t IVP_Hull_Manager::get_synapse_check_count(IVP_Environment*)
00193990 t IVP_Hull_Manager::too_many_synapses_checked_error_get_additional(IVP_Environment*, int)
001b5ab0 t IVP_Mindist_Base::get_ledges(IVP_Compact_Ledge const**)
001b5a90 t IVP_Mindist_Base::get_objects(IVP_Real_Object**)
001b9240 t IVP_Mindist_Base::get_mindist_synapse(int)
001b5d20 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
001b5d20 t IVP_Mindist_Base::IVP_Mindist_Base(IVP_Collision_Delegator*)
001b9150 t IVP_Mindist_Base::~IVP_Mindist_Base()
001b9060 t IVP_Mindist_Base::~IVP_Mindist_Base()
001b9060 t IVP_Mindist_Base::~IVP_Mindist_Base()
001b55c0 t IVP_ov_tree_hash::node_to_index(IVP_OV_Node*)
001b54f0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
001b54d0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
001b54d0 t IVP_ov_tree_hash::~IVP_ov_tree_hash()
00153d00 t IVP_Poly_Surface::get_surface_index()
00153cf0 t IVP_Poly_Surface::set(IVP_Template_Surface*, IVP_Object_Polygon_Tetra*)
001b9350 t IVP_Synapse_Real::get_mindist()
001b92d0 t IVP_Synapse_Real::init_synapse(IVP_Mindist*, IVP_Real_Object*, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
001b92a0 t IVP_Synapse_Real::update_synapse(IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS)
001b9320 t IVP_Synapse_Real::get_hull_manager()
001b5b40 t IVP_Synapse_Real::print()
001b9330 t IVP_Synapse_Real::get_next()
001b9340 t IVP_Synapse_Real::get_prev()
001b92c0 t IVP_Synapse_Real::IVP_Synapse_Real()
001b92c0 t IVP_Synapse_Real::IVP_Synapse_Real()
001b9110 t IVP_Synapse_Real::~IVP_Synapse_Real()
001b90e0 t IVP_Synapse_Real::~IVP_Synapse_Real()
001b90e0 t IVP_Synapse_Real::~IVP_Synapse_Real()
00186930 t IVP_Time_Event_D::simulate_time_event(IVP_Environment*)
00186a80 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
00186a80 t IVP_Time_Event_D::IVP_Time_Event_D(IVP_Time)
001869b0 t IVP_Time_Event_N::simulate_time_event(IVP_Environment*)
00186a90 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
00186a90 t IVP_Time_Event_N::IVP_Time_Event_N(IVP_Time)
001a2ed0 t IVP_Time_Manager::event_loop(IVP_Environment*, IVP_Time)
001a2fc0 t IVP_Time_Manager::reset_time(IVP_Time)
001a2b00 t IVP_Time_Manager::insert_event(IVP_Time_Event*, IVP_Time)
001a2d20 t IVP_Time_Manager::remove_event(IVP_Time_Event*)
001a2d40 t IVP_Time_Manager::update_event(IVP_Time_Event*, IVP_Time)
001a2e60 t IVP_Time_Manager::get_next_event(IVP_Time)
001a2db0 t IVP_Time_Manager::get_next_event()
001a2eb0 t IVP_Time_Manager::get_event_count()
001a2fa0 t IVP_Time_Manager::env_set_current_time(IVP_Environment*, IVP_Time)
001a2f30 t IVP_Time_Manager::simulate_variable_time_step(IVP_Environment*, float)
001a2c20 t IVP_Time_Manager::IVP_Time_Manager()
001a2c20 t IVP_Time_Manager::IVP_Time_Manager()
001a2df0 t IVP_Time_Manager::~IVP_Time_Manager()
001a2df0 t IVP_Time_Manager::~IVP_Time_Manager()
001a6f80 t IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
001a6110 t IVP_U_Active_Add::print()
001a80a0 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a80a0 t IVP_U_Active_Add::IVP_U_Active_Add(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a7630 t IVP_U_Active_Add::~IVP_U_Active_Add()
001a75d0 t IVP_U_Active_Add::~IVP_U_Active_Add()
001a75d0 t IVP_U_Active_Add::~IVP_U_Active_Add()
001a77a0 t IVP_U_Active_Int::add_dependency(IVP_U_Active_Int_Listener*)
001a87c0 t IVP_U_Active_Int::give_int_value()
001a7170 t IVP_U_Active_Int::update_derived()
001a77e0 t IVP_U_Active_Int::remove_dependency(IVP_U_Active_Int_Listener*)
001a6d10 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
001a6d10 t IVP_U_Active_Int::IVP_U_Active_Int(char const*)
001a6620 t IVP_U_Active_Int::~IVP_U_Active_Int()
001a65c0 t IVP_U_Active_Int::~IVP_U_Active_Int()
001a65c0 t IVP_U_Active_Int::~IVP_U_Active_Int()
001a6f30 t IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
001a60d0 t IVP_U_Active_Sub::print()
001a8130 t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a8130 t IVP_U_Active_Sub::IVP_U_Active_Sub(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a75b0 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
001a7550 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
001a7550 t IVP_U_Active_Sub::~IVP_U_Active_Sub()
001aec60 t IVP_U_Float_Quat::set(IVP_U_Quat const*)
001ae1a0 t IVP_U_Float_Quat::byte_swap()
00181860 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
001816c0 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
001816c0 t IVP_U_Set_Active<IVP_Real_Object>::~IVP_U_Set_Active()
00181930 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
00181ba0 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
00181ba0 t IVP_U_Set_Active<IVP_Mindist_Base>::~IVP_U_Set_Active()
00181790 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
00181a00 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
00181a00 t IVP_U_Set_Active<IVP_Core>::~IVP_U_Set_Active()
000833e0 t NxFixedJointDesc::setToDefault()
000829f0 t NxFixedJointDesc::~NxFixedJointDesc()
00082950 t NxFixedJointDesc::~NxFixedJointDesc()
00082950 t NxFixedJointDesc::~NxFixedJointDesc()
000830e0 t NxPlaneShapeDesc::setToDefault()
00082b70 t NxPlaneShapeDesc::~NxPlaneShapeDesc()
00082980 t NxPlaneShapeDesc::~NxPlaneShapeDesc()
00082980 t NxPlaneShapeDesc::~NxPlaneShapeDesc()
00083180 t NxWheelShapeDesc::setToDefault(bool)
00082b90 t NxWheelShapeDesc::~NxWheelShapeDesc()
00082870 t NxWheelShapeDesc::~NxWheelShapeDesc()
00082870 t NxWheelShapeDesc::~NxWheelShapeDesc()
000dbce0 t CAlignedNewDelete<16, aligned_tmp_t>::operator delete(void*)
000e1730 t CBuoyancyAttacher::get_parameters_per_core(IVP_Core*)
000e18c0 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000e18c0 t CBuoyancyAttacher::CBuoyancyAttacher(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
000e1f50 t CBuoyancyAttacher::~CBuoyancyAttacher()
000e1ff0 t CBuoyancyAttacher::~CBuoyancyAttacher()
000e1ff0 t CBuoyancyAttacher::~CBuoyancyAttacher()
000e2350 t CFrictionSnapshot::GetMaterial(int)
000e2290 t CFrictionSnapshot::GetNormalForce()
000e2170 t CFrictionSnapshot::GetContactPoint(Vector&)
000e22c0 t CFrictionSnapshot::GetSurfaceNormal(Vector&)
000e21d0 t CFrictionSnapshot::NextFrictionData()
000e2260 t CFrictionSnapshot::GetEnergyAbsorbed()
000e2240 t CFrictionSnapshot::RecomputeFriction()
000e2220 t CFrictionSnapshot::ClearFrictionForce()
000e24d0 t CFrictionSnapshot::SetFrictionSynapse(IVP_Synapse_Friction*)
000e2630 t CFrictionSnapshot::MarkContactForDelete()
000e21c0 t CFrictionSnapshot::GetFrictionCoefficient()
000e2390 t CFrictionSnapshot::DeleteAllMarkedContacts(bool)
000e2120 t CFrictionSnapshot::IsValid()
000e2130 t CFrictionSnapshot::GetObject(int)
000e2470 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
000e2470 t CFrictionSnapshot::CFrictionSnapshot(IVP_Real_Object*)
000e2610 t CFrictionSnapshot::~CFrictionSnapshot()
000e25c0 t CFrictionSnapshot::~CFrictionSnapshot()
000e25c0 t CFrictionSnapshot::~CFrictionSnapshot()
000eee90 t CMaterialIndexOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
000eee40 t CMaterialIndexOps::IsEmpty(SaveRestoreFieldInfo_t const&)
000eede0 t CMaterialIndexOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
000eee60 t CMaterialIndexOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
00108660 t collision_rules_t::SetDefaults(void*)
00108640 t collision_rules_t::ParseKeyValue(void*, char const*, char const*)
000f8f60 t CPhysics2Disabler::GetCreatedPhysics2()
000f9040 t CPhysics2Disabler::Init()
000f8f40 t CPhysics2Disabler::Enable(bool)
000f8f30 t CPhysics2Disabler::Shutdown()
000d2fd0 t CPhysicsCollision::ConvexFree(CPhysConvex*)
000d23e0 t CPhysicsCollision::CollideSize(CPhysCollide*)
000d49d0 t CPhysicsCollision::IsBBoxCache(CPhysCollide*)
000d5b30 t CPhysicsCollision::AddBBoxCache(CPhysCollideCompactSurface*, Vector const&, Vector const&)
000d5a60 t CPhysicsCollision::BBoxToConvex(Vector const&, Vector const&)
000d2830 t CPhysicsCollision::CollideIndex(CPhysCollide const*)
000d2400 t CPhysicsCollision::CollideWrite(char*, CPhysCollide*, bool)
000d2180 t CPhysicsCollision::ConvexVolume(CPhysConvex*)
000d4a40 t CPhysicsCollision::GetBBoxCache(Vector const&, Vector const&)
000d2d00 t CPhysicsCollision::TraceCollide(Vector const&, Vector const&, CPhysCollide const*, QAngle const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000d54f0 t CPhysicsCollision::VCollideLoad(vcollide_t*, int, char const*, int, bool)
000d5d70 t CPhysicsCollision::BBoxToCollide(Vector const&, Vector const&)
000d4c80 t CPhysicsCollision::CollideVolume(CPhysCollide*)
000d2470 t CPhysicsCollision::CreateCapsule(Vector const&, Vector const&, float)
000d5c10 t CPhysicsCollision::InitBBoxCache()
000d2ba0 t CPhysicsCollision::VCollideCheck(vcollide_t*, char const*)
000d3d70 t CPhysicsCollision::CollideGetAABB(Vector*, Vector*, CPhysCollide const*, Vector const&, QAngle const&)
000d3e70 t CPhysicsCollision::DestroyCollide(CPhysCollide*)
000d5900 t CPhysicsCollision::PolysoupCreate()
000d2c50 t CPhysicsCollision::VCollideUnload(vcollide_t*)
000d5ab0 t CPhysicsCollision::ConvexFromVerts(Vector**, int)
000d4d40 t CPhysicsCollision::CreateDebugMesh(CPhysCollide const*, Vector**)
000d48d0 t CPhysicsCollision::FastBboxCollide(CPhysCollideCompactSurface const*, Vector const&, Vector const&)
000d2880 t CPhysicsCollision::OutputDebugInfo(CPhysCollide const*)
000d4030 t CPhysicsCollision::PolysoupDestroy(CPhysPolysoup*)
000d3cf0 t CPhysicsCollision::CollideGetExtent(CPhysCollide const*, Vector const&, QAngle const&, Vector const&)
000d2790 t CPhysicsCollision::CollideGetRadius(CPhysCollide const*)
000d3a40 t CPhysicsCollision::ConvexFromPlanes(float*, int, float)
000d4b70 t CPhysicsCollision::CreateQueryModel(CPhysCollide*)
000d2c30 t CPhysicsCollision::DestroyDebugMesh(int, Vector*)
000d28a0 t CPhysicsCollision::GetBBoxCacheSize(int*, int*)
000d3ed0 t CPhysicsCollision::ConvexSurfaceArea(CPhysConvex*)
000d60b0 t CPhysicsCollision::CreateVirtualMesh(virtualmeshparams_t const&)
000d2910 t CPhysicsCollision::DestroyQueryModel(ICollisionQuery*)
000d2630 t CPhysicsCollision::SetConvexGameData(CPhysConvex*, unsigned int)
000d4bc0 t CPhysicsCollision::CollideSurfaceArea(CPhysCollide*)
000d2420 t CPhysicsCollision::CopyMassProperties(CPhysCollide*, CPhysCollide const*)
000d5630 t CPhysicsCollision::UnserializeCollide(char*, int, int)
000d5940 t CPhysicsCollision::ConvexFromVertsFast(Vector**, int)
000d2e00 t CPhysicsCollision::PolysoupAddTriangle(CPhysPolysoup*, Vector const&, Vector const&, Vector const&, int)
000d5f80 t CPhysicsCollision::SupportsVirtualMesh()
000d27b0 t CPhysicsCollision::ThreadContextCreate()
000d27d0 t CPhysicsCollision::CollideGetMassCenter(CPhysCollide*, Vector*)
000d2810 t CPhysicsCollision::CollideSetMassCenter(CPhysCollide*, Vector const&)
000d31a0 t CPhysicsCollision::PolyhedronFromConvex(CPhysConvex*, bool)
000d27c0 t CPhysicsCollision::ThreadContextDestroy(IPhysicsCollision*)
000d2a90 t CPhysicsCollision::VCollideFreeUserData(vcollide_t*)
000d2ce0 t CPhysicsCollision::IsBoxIntersectingCone(Vector const&, Vector const&, truncatedcone_t const&)
000d2ac0 t CPhysicsCollision::VCollideAllocUserData(vcollide_t*, unsigned int)
000d2320 t CPhysicsCollision::ConvertConvexToCollide(CPhysConvex**, int)
000d47b0 t CPhysicsCollision::RebuildConvexFromPlanes(CPhysConvex*, float)
000d2b60 t CPhysicsCollision::VPhysicsKeyParserCreate(vcollide_t*)
000d2b80 t CPhysicsCollision::VPhysicsKeyParserCreate(char const*)
000d5660 t CPhysicsCollision::ConvertPolysoupToCollide(CPhysPolysoup*, bool)
000d2b50 t CPhysicsCollision::VPhysicsKeyParserDestroy(IVPhysicsKeyParser*)
000d3060 t CPhysicsCollision::ConvexesFromConvexPolygon(Vector const&, Vector const*, int, CPhysConvex**)
000d3810 t CPhysicsCollision::ConvexFromConvexPolyhedron(CPolyhedron const&)
000d3ca0 t CPhysicsCollision::CollideGetOrthographicAreas(CPhysCollide const*)
000d2850 t CPhysicsCollision::CollideSetOrthographicAreas(CPhysCollide*, Vector const&)
000d50d0 t CPhysicsCollision::ConvertConvexToCollideParams(CPhysConvex**, int, convertconvexparams_t const&)
000d4ee0 t CPhysicsCollision::GetConvexesUsedInCollideable(CPhysCollide const*, CPhysConvex**, int)
000d5f70 t CPhysicsCollision::ReadStat(int)
000d2dc0 t CPhysicsCollision::TraceBox(Ray_t const&, unsigned int, IConvexInfo*, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000d2d60 t CPhysicsCollision::TraceBox(Ray_t const&, unsigned int, IConvexInfo*, Physics2VCollide_t const*, Vector const&, QAngle const&, CGameTrace*)
000d2d80 t CPhysicsCollision::TraceBox(Ray_t const&, unsigned int, IConvexInfo*, IPhysics2ActorArray const*, Vector const&, QAngle const&, CGameTrace*)
000d2650 t CPhysicsCollision::TraceBox(Ray_t const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000d26f0 t CPhysicsCollision::TraceBox(Ray_t const&, Physics2VCollide_t const*, Vector const&, QAngle const&, CGameTrace*)
000d26a0 t CPhysicsCollision::TraceBox(Ray_t const&, IPhysics2ActorArray const*, Vector const&, QAngle const&, CGameTrace*)
000d2de0 t CPhysicsCollision::TraceBox(Vector const&, Vector const&, Vector const&, Vector const&, CPhysCollide const*, Vector const&, QAngle const&, CGameTrace*)
000d2da0 t CPhysicsCollision::TraceBox(Vector const&, Vector const&, Vector const&, Vector const&, IPhysics2ActorArray const*, Vector const&, QAngle const&, CGameTrace*)
000d2d20 t CPhysicsCollision::TraceRay(Ray_t const&, unsigned int, CConvexHullList const*, Vector const&, QAngle const&, CGameTrace*)
000d2d40 t CPhysicsCollision::TraceBox2(Ray_t const&, unsigned int, IConvexInfo*, CPhysics2Shape*, Vector const&, QAngle const&, CGameTrace*)
000d2740 t CPhysicsCollision::TraceBox2(Ray_t const&, CPhysics2Shape*, Vector const&, QAngle const&, CGameTrace*)
000d63c0 t CPhysicsCollision::~CPhysicsCollision()
000d6360 t CPhysicsCollision::~CPhysicsCollision()
000d6360 t CPhysicsCollision::~CPhysicsCollision()
000ce450 t CPhysicsInterface::QueryInterface(char const*)
000ce360 t CPhysicsInterface::FindCollisionSet(unsigned int)
000ce550 t CPhysicsInterface::CreateEnvironment()
000ce3b0 t CPhysicsInterface::DestroyEnvironment(IPhysicsEnvironment*)
000ce440 t CPhysicsInterface::CreateObjectPairHash()
000ce2d0 t CPhysicsInterface::DestroyObjectPairHash(IPhysicsObjectPairHash*)
000ce4d0 t CPhysicsInterface::DestroyAllCollisionSets()
000ce590 t CPhysicsInterface::FindOrCreateCollisionSet(unsigned int, int)
000ce2a0 t CPhysicsInterface::GetActiveEnvironmentByIndex(int)
000ce930 t CPhysicsInterface::~CPhysicsInterface()
000ce930 t CPhysicsInterface::~CPhysicsInterface()
000ef310 t CPlayerController::IsInContact()
000eff00 t CPlayerController::AttachObject()
000f0030 t CPlayerController::DetachObject()
000f20c0 t CPlayerController::GetLastImpulse(Vector*)
000ef110 t CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
000f2180 t CPlayerController::GetPushMassLimit()
000f2140 t CPlayerController::SetPushMassLimit(float)
000f21a0 t CPlayerController::GetPushSpeedLimit()
000f2480 t CPlayerController::GetShadowPosition(Vector*, QAngle*)
000ef390 t CPlayerController::GetShadowVelocity(Vector*)
000f2160 t CPlayerController::SetPushSpeedLimit(float)
000f01c0 t CPlayerController::TryTeleportObject()
000f2220 t CPlayerController::event_object_frozen(IVP_Event_Object*)
000f2070 t CPlayerController::get_controller_name()
000f21e0 t CPlayerController::event_object_created(IVP_Event_Object*)
000f21c0 t CPlayerController::event_object_deleted(IVP_Event_Object*)
000f2200 t CPlayerController::event_object_revived(IVP_Event_Object*)
000f2060 t CPlayerController::get_controller_priority()
000f02f0 t CPlayerController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ef0f0 t CPlayerController::Jump()
000ef5a0 t CPlayerController::StepUp(float)
000efd00 t CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
000ef480 t CPlayerController::MaxSpeed(Vector const&)
000f2120 t CPlayerController::GetObject()
000efc80 t CPlayerController::SetGround(CPhysicsObject*)
000f00b0 t CPlayerController::SetObject(IPhysicsObject*)
000f2090 t CPlayerController::WasFrozen()
000eff80 t CPlayerController::CPlayerController(CPhysicsObject*)
000eff80 t CPlayerController::CPlayerController(CPhysicsObject*)
000f01a0 t CPlayerController::~CPlayerController()
000f0120 t CPlayerController::~CPlayerController()
000f0120 t CPlayerController::~CPlayerController()
000ef1c0 t CShadowController::GetMaxSpeed(float*, float*)
000f15a0 t CShadowController::AttachObject()
000f1860 t CShadowController::DetachObject()
000f2290 t CShadowController::AllowsRotation()
000f22c0 t CShadowController::GetLastImpulse(Vector*)
000f1c20 t CShadowController::WriteToTemplate(vphysics_save_cshadowcontroller_t&)
000f1ce0 t CShadowController::InitFromTemplate(vphysics_save_cshadowcontroller_t const&)
000f2260 t CShadowController::AllowsTranslation()
000ef200 t CShadowController::GetTargetPosition(Vector*, QAngle*)
000f2390 t CShadowController::UseShadowMaterial(bool)
000f2240 t CShadowController::get_controller_name()
000ef160 t CShadowController::GetTeleportDistance()
000ef130 t CShadowController::SetTeleportDistance(float)
000f2410 t CShadowController::ObjectMaterialChanged(int)
000f2360 t CShadowController::IsPhysicallyControlled()
000f2230 t CShadowController::get_controller_priority()
000f2320 t CShadowController::SetPhysicallyControlled(bool)
000f1200 t CShadowController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ef280 t CShadowController::StepUp(float)
000ef640 t CShadowController::Update(Vector const&, QAngle const&, float)
000ef190 t CShadowController::MaxSpeed(float, float)
000f19e0 t CShadowController::SetObject(IPhysicsObject*)
000f1770 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
000f1550 t CShadowController::CShadowController()
000f1770 t CShadowController::CShadowController(CPhysicsObject*, bool, bool)
000f1550 t CShadowController::CShadowController()
000f19b0 t CShadowController::~CShadowController()
000f1950 t CShadowController::~CShadowController()
000f1950 t CShadowController::~CShadowController()
         U CThreadSpinRWLock::UnlockRead()
         U CThreadSpinRWLock::LockForRead()
         U CThreadSpinRWLock::UnlockWrite()
         U CThreadSpinRWLock::SpinLockForWrite(unsigned int)
         U CThreadSyncObject::~CThreadSyncObject()
001179e0 t CUtlInplaceBuffer::InplaceGetLinePtr(char**, int*)
00117a90 t CUtlInplaceBuffer::InplaceGetLinePtr()
001181a0 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
001181a0 t CUtlInplaceBuffer::CUtlInplaceBuffer(int, int, int)
000e9440 t CUtlSymbolTableMT::AddString(char const*)
000e9490 t CUtlSymbolTableMT::~CUtlSymbolTableMT()
000e9490 t CUtlSymbolTableMT::~CUtlSymbolTableMT()
000d6090 t IPhysicsCollision::~IPhysicsCollision()
000d5e40 t IPhysicsCollision::~IPhysicsCollision()
000d5e40 t IPhysicsCollision::~IPhysicsCollision()
00170a40 t IVP_Compact_Ledge::is_compact()
00170570 t IVP_Compact_Ledge::c_ledge_init()
00170600 t IVP_Compact_Ledge::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
00170960 t IVP_Compact_Ledge::set_is_compact(IVP_BOOL)
00170990 t IVP_Compact_Ledge::get_point_array()
00170a70 t IVP_Compact_Ledge::set_client_data(unsigned int)
00170aa0 t IVP_Compact_Ledge::set_cache_handle(unsigned short)
001709b0 t IVP_Compact_Ledge::get_first_triangle()
00170930 t IVP_Compact_Ledge::set_offset_ledge_points(int)
00170940 t IVP_Compact_Ledge::set_size(int)
001705a0 t IVP_Compact_Ledge::byte_swap()
00199120 t IVP_Contact_Point::reset_time(IVP_Time)
00195860 t IVP_Contact_Point::get_material_info(IVP_Material**)
00196700 t IVP_Contact_Point::calc_coll_distance()
00199c50 t IVP_Contact_Point::get_contact_normal(IVP_U_Float_Point*)
00199c00 t IVP_Contact_Point::recompute_friction()
00199c80 t IVP_Contact_Point::set_contact_normal(IVP_U_Float_Point const&)
00188790 t IVP_Contact_Point::two_values_friction(IVP_U_Float_Point*)
001987c0 t IVP_Contact_Point::p_calc_friction_s_PK(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
001986d0 t IVP_Contact_Point::p_calc_friction_s_PP(IVP_U_Point const*, IVP_U_Point const*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
001983d0 t IVP_Contact_Point::p_calc_friction_qr_PF(IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
00198aa0 t IVP_Contact_Point::p_calc_friction_ss_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_Impact_Solver_Long_Term*, IVP_U_Float_Point*)
00199140 t IVP_Contact_Point::recalc_friction_s_vals(IVP_Environment*)
00188b90 t IVP_Contact_Point::static_friction_single(IVP_Event_Sim const*, float, float)
0018a1f0 t IVP_Contact_Point::ease_the_friction_force(IVP_U_Float_Point*)
00196690 t IVP_Contact_Point::get_rescue_speed_impact(IVP_Environment*)
0018a190 t IVP_Contact_Point::set_friction_to_neutral()
001965b0 t IVP_Contact_Point::get_rot_speed_uncertainty()
0018c8f0 t IVP_Contact_Point::calc_virtual_mass_of_mindist()
00188ae0 t IVP_Contact_Point::get_and_set_real_friction_len(IVP_U_Float_Point*)
00189ac0 t IVP_Contact_Point::friction_force_local_constraint_1d(IVP_Event_Sim const*)
001897c0 t IVP_Contact_Point::friction_force_local_constraint_2d(IVP_Event_Sim const*)
00195960 t IVP_Contact_Point::read_materials_for_contact_situation(IVP_Impact_Solver_Long_Term*)
00188e70 t IVP_Contact_Point::friction_force_local_constraint_2d_wheel(IVP_Core*, IVP_Impact_Solver_Long_Term*, IVP_Event_Sim const*, float&)
00188570 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
00188570 t IVP_Contact_Point::IVP_Contact_Point(IVP_Mindist*)
0018a7b0 t IVP_Contact_Point::~IVP_Contact_Point()
0018a7b0 t IVP_Contact_Point::~IVP_Contact_Point()
00185d60 t IVP_Debug_Manager::init_debug_manager()
00185d20 t IVP_Debug_Manager::clear_debug_manager()
00185de0 t IVP_Debug_Manager::IVP_Debug_Manager()
00185de0 t IVP_Debug_Manager::IVP_Debug_Manager()
00185d50 t IVP_Debug_Manager::~IVP_Debug_Manager()
00185d50 t IVP_Debug_Manager::~IVP_Debug_Manager()
001a2ec0 t IVP_Event_Manager::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
001a29e0 t IVP_Event_Manager::simulate_variable_time_step(IVP_Time_Manager*, IVP_Environment*, IVP_Time_Event_PSI*, float)
001a30b0 t IVP_Event_Manager::~IVP_Event_Manager()
001a3040 t IVP_Event_Manager::~IVP_Event_Manager()
001a3040 t IVP_Event_Manager::~IVP_Event_Manager()
00197490 t IVP_Friction_Hash::~IVP_Friction_Hash()
00197490 t IVP_Friction_Hash::~IVP_Friction_Hash()
00134b40 t IVP_Halfspacesoup::add_halfspace(IVP_U_Hesse const*)
00134d50 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
00134a80 t IVP_Halfspacesoup::IVP_Halfspacesoup()
00134d50 t IVP_Halfspacesoup::IVP_Halfspacesoup(IVP_Compact_Ledge const*)
00134a80 t IVP_Halfspacesoup::IVP_Halfspacesoup()
00134aa0 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
00134aa0 t IVP_Halfspacesoup::~IVP_Halfspacesoup()
00193f00 t IVP_Impact_Solver::confirm_impact(int)
00194920 t IVP_Impact_Solver::delay_decision(IVP_Core**)
00194090 t IVP_Impact_Solver::do_rescue_push(IVP_U_Float_Point*, IVP_BOOL)
00194810 t IVP_Impact_Solver::delay_of_impact(int)
00194730 t IVP_Impact_Solver::do_push_on_core(IVP_U_Float_Point*, int)
00193a20 t IVP_Impact_Solver::get_total_energy()
00194ee0 t IVP_Impact_Solver::estimate_push_impulse()
001958e0 t IVP_Impact_Solver::get_cos_sin_for_impact(float, float, float*, float*)
00193d30 t IVP_Impact_Solver::get_world_push_direction()
001948b0 t IVP_Impact_Solver::clear_change_values_cores()
00193a80 t IVP_Impact_Solver::get_relative_speed_vector()
00194df0 t IVP_Impact_Solver::calc_virt_masses_impact_solver(IVP_U_Float_Point const*)
001962b0 t IVP_Impact_Solver::get_world_direction_second_friction(IVP_Contact_Point*)
00193b20 t IVP_Impact_Solver::get_world_push_direction_two_friction(float)
00194b40 t IVP_Impact_Solver::do_push(float)
00194f70 t IVP_Impact_Solver::do_impact(IVP_Core**, IVP_BOOL, int, float)
00193fa0 t IVP_Impact_Solver::undo_push()
00196950 t IVP_Impact_System::test_loop_all_pairs()
00196060 t IVP_Impact_System::add_pair_to_impact_system(IVP_Friction_Core_Pair*)
001961f0 t IVP_Impact_System::pair_is_already_in_system(IVP_Friction_Core_Pair*)
00196b70 t IVP_Impact_System::recalc_all_affected_cores()
00196260 t IVP_Impact_System::invalidate_impact_mindists(IVP_Core*)
00196880 t IVP_Impact_System::debug_check_all_dists_at_end()
00196dd0 t IVP_Impact_System::init_and_solve_impact_system(IVP_Mindist*, IVP_Friction_System*, IVP_Friction_Core_Pair*, IVP_Contact_Point*)
00195fc0 t IVP_Impact_System::impact_system_check_start_pair(IVP_Friction_Core_Pair*, IVP_Contact_Point*)
001960d0 t IVP_Impact_System::add_pushed_core_with_pairs_except(IVP_Core*, IVP_Friction_Core_Pair*)
001960a0 t IVP_Impact_System::synchronize_core_for_impact_system(IVP_Core*)
00152210 t IVP_I_Point_VHash::find_point(IVP_U_Point*)
001521b0 t IVP_I_Point_VHash::remove_point(IVP_U_Point*)
00151f80 t IVP_I_Point_VHash::point_to_index(IVP_U_Point*)
00152150 t IVP_I_Point_VHash::add_point(IVP_U_Point*)
001522a0 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
001522a0 t IVP_I_Point_VHash::IVP_I_Point_VHash(int)
00151e60 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
00151e40 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
00151e40 t IVP_I_Point_VHash::~IVP_I_Point_VHash()
00193790 t IVP_Listener_Hull::hull_manager_is_reset(float, float)
001bfda0 t IVP_Range_Manager::get_coll_range_in_world(IVP_Real_Object const*)
001bfe20 t IVP_Range_Manager::environment_will_be_deleted(IVP_Environment*)
001bfcb0 t IVP_Range_Manager::get_coll_range_intra_objects(IVP_Real_Object const*, IVP_Real_Object const*, float*, float*)
001bfea0 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
001bfea0 t IVP_Range_Manager::IVP_Range_Manager(IVP_Environment*, IVP_BOOL)
00173110 t IVP_Ray_Solver_Os::check_ray_against_compact_ledge_os(IVP_Compact_Ledge const*)
00173720 t IVP_Ray_Solver_Os::check_ray_against_compact_surface_os(IVP_Compact_Surface const*)
001735f0 t IVP_Ray_Solver_Os::check_ray_against_ledge_tree_node_os(IVP_Compact_Ledgetree_Node const*)
00173740 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
00173740 t IVP_Ray_Solver_Os::IVP_Ray_Solver_Os(IVP_Ray_Solver*, IVP_Real_Object*)
001579c0 t IVP_Tetra_Intrude::checkin_edge(IVP_Tri_Edge*)
001577f0 t IVP_Tetra_Intrude::point_2_bits(IVP_U_Point*, IVP_U_Point*, int*)
00157af0 t IVP_Tetra_Intrude::checkout_edge(IVP_Tri_Edge*)
001582d0 t IVP_Tetra_Intrude::check_intrusion(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int, IVP_Intrusion_Status*)
00157880 t IVP_Tetra_Intrude::init_tetra_edge(IVP_Tetra_Edge*, IVP_Tetra_Point*, IVP_Tetra_Point*, IVP_Tri_Edge*)
00158d70 t IVP_Tetra_Intrude::calc_intrusion_status(IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Extra_Point*, int)
00157750 t IVP_Tetra_Intrude::pe(int)
001575b0 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
001575b0 t IVP_Tetra_Intrude::IVP_Tetra_Intrude(IVP_Tetra_Point*, int)
00157700 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
00157700 t IVP_Tetra_Intrude::~IVP_Tetra_Intrude()
001a6e80 t IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
001a62d0 t IVP_U_Active_Mult::print()
001a8250 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a8250 t IVP_U_Active_Mult::IVP_U_Active_Mult(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a74b0 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
001a7450 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
001a7450 t IVP_U_Active_Mult::~IVP_U_Active_Mult()
001a70c0 t IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
001a6480 t IVP_U_Active_Sine::print()
001a7f30 t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, float, float, float, float)
001a7f30 t IVP_U_Active_Sine::IVP_U_Active_Sine(char const*, IVP_U_Active_Float*, float, float, float, float)
001a7780 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
001a7730 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
001a7730 t IVP_U_Active_Sine::~IVP_U_Active_Sine()
001aab40 t IVP_U_Float_Hesse::calc_hesse(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001aaa40 t IVP_U_Float_Hesse::mult_hesse(float)
001aac10 t IVP_U_Float_Hesse::calc_hesse_val(IVP_U_Float_Point const*)
001adea0 t IVP_U_Float_Hesse::set4(IVP_U_Float_Hesse const*)
001aac50 t IVP_U_Float_Hesse::normize()
001adf10 t IVP_U_Float_Hesse::byte_swap()
001adef0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse(float, float, float, float)
001adee0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
001adef0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse(float, float, float, float)
001adee0 t IVP_U_Float_Hesse::IVP_U_Float_Hesse()
001ae1e0 t IVP_U_Float_Point::set_to_zero()
001aed70 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, float)
001ae320 t IVP_U_Float_Point::add_multiple(IVP_U_Float_Point const*, IVP_U_Float_Point const*, float)
001a99e0 t IVP_U_Float_Point::fast_normize()
001aedc0 t IVP_U_Float_Point::set_multiple(IVP_U_Quat const*, float)
001ae220 t IVP_U_Float_Point::set_multiple(IVP_U_Float_Point const*, float)
001ae260 t IVP_U_Float_Point::set_negative(IVP_U_Float_Point const*)
001a98a0 t IVP_U_Float_Point::set_interpolate(IVP_U_Float_Point const*, IVP_U_Float_Point const*, float)
001ae370 t IVP_U_Float_Point::set_pairwise_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001a9c90 t IVP_U_Float_Point::calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001a9c10 t IVP_U_Float_Point::set_orthogonal_part(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001ae430 t IVP_U_Float_Point::inline_subtract_and_mult(IVP_U_Float_Point const*, IVP_U_Float_Point const*, float)
001a9950 t IVP_U_Float_Point::real_length_plus_normize()
001ae7f0 t IVP_U_Float_Point::inline_calc_cross_product(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001af960 t IVP_U_Float_Point::inline_calc_cross_product_and_normize(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001aed30 t IVP_U_Float_Point::add(IVP_U_Float_Point const*)
001ae3b0 t IVP_U_Float_Point::add(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001aec90 t IVP_U_Float_Point::set(float, float, float)
001aecd0 t IVP_U_Float_Point::set(float const*)
001ae200 t IVP_U_Float_Point::set(IVP_U_Float_Point const*)
001ae860 t IVP_U_Float_Point::inline_set_vert_to_area_defined_by_three_points(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001ae2a0 t IVP_U_Float_Point::mult(float)
001aa1b0 t IVP_U_Float_Point::rotate(IVP_COORDINATE_INDEX, float)
001a9a60 t IVP_U_Float_Point::normize()
001aecf0 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*)
001ae3f0 t IVP_U_Float_Point::subtract(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001adcd0 t IVP_U_Float_Point::byte_swap()
001a9ae0 t IVP_U_Float_Point::line_sqrt()
001adcb0 t IVP_U_Float_Point::IVP_U_Float_Point(float, float, float)
001af210 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
001adca0 t IVP_U_Float_Point::IVP_U_Float_Point()
001adcb0 t IVP_U_Float_Point::IVP_U_Float_Point(float, float, float)
001af210 t IVP_U_Float_Point::IVP_U_Float_Point(IVP_U_Float_Point const*)
001adca0 t IVP_U_Float_Point::IVP_U_Float_Point()
001a9630 t IVP_U_String_Hash::add(char const*, void*)
001a96d0 t IVP_U_String_Hash::remove(char const*)
001a94f0 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
001a94f0 t IVP_U_String_Hash::IVP_U_String_Hash(int, void*)
001a9520 t IVP_U_String_Hash::~IVP_U_String_Hash()
001a9520 t IVP_U_String_Hash::~IVP_U_String_Hash()
001b2c20 t IVP_U_Vector_Base::increment_mem()
0006ea10 t NxConvexShapeDesc::setToDefault()
0006e830 t NxConvexShapeDesc::~NxConvexShapeDesc()
0006e7c0 t NxConvexShapeDesc::~NxConvexShapeDesc()
0006e7c0 t NxConvexShapeDesc::~NxConvexShapeDesc()
00083880 t NxPulleyJointDesc::setToDefault()
00082a10 t NxPulleyJointDesc::~NxPulleyJointDesc()
00082940 t NxPulleyJointDesc::~NxPulleyJointDesc()
00082940 t NxPulleyJointDesc::~NxPulleyJointDesc()
0006eab0 t NxSphereShapeDesc::setToDefault()
0006e7f0 t NxSphereShapeDesc::~NxSphereShapeDesc()
0006e7a0 t NxSphereShapeDesc::~NxSphereShapeDesc()
0006e7a0 t NxSphereShapeDesc::~NxSphereShapeDesc()
001528d0 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
001528d0 t P_Sur_2D_Triangle::P_Sur_2D_Triangle(int, int, int)
0011c040 t CCountedStringPool::FindString(char const*)
0011c1b0 t CCountedStringPool::SpewStrings()
0011c220 t CCountedStringPool::SaveToBuffer(CUtlBuffer&)
0011c190 t CCountedStringPool::HandleToString(unsigned short)
0011cb70 t CCountedStringPool::ReferenceString(char const*)
0011bfc0 t CCountedStringPool::FindStringHandle(char const*)
0011c070 t CCountedStringPool::DereferenceString(char const*)
0011cdc0 t CCountedStringPool::RestoreFromBuffer(CUtlBuffer&)
0011ca10 t CCountedStringPool::ReferenceStringHandle(char const*)
0011bf90 t CCountedStringPool::Hash(char const*)
0011cba0 t CCountedStringPool::FreeAll()
0011d560 t CCountedStringPool::CCountedStringPool(StringPoolCase_t)
0011d560 t CCountedStringPool::CCountedStringPool(StringPoolCase_t)
0011cd30 t CCountedStringPool::~CCountedStringPool()
0011cc70 t CCountedStringPool::~CCountedStringPool()
0011cc70 t CCountedStringPool::~CCountedStringPool()
000eed50 t CDefSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
000eed90 t CDefSaveRestoreOps::Parse(SaveRestoreFieldInfo_t const&, char const*)
000eed70 t CDefSaveRestoreOps::IsEmpty(SaveRestoreFieldInfo_t const&)
000eed60 t CDefSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
000eed80 t CDefSaveRestoreOps::MakeEmpty(SaveRestoreFieldInfo_t const&)
000d65f0 t CPhysicsConstraint::Deactivate()
000db310 t CPhysicsConstraint::InitLength(IVP_Environment*, CPhysicsConstraintGroup*, constraint_lengthparams_t const&)
000d9be0 t CPhysicsConstraint::InitPulley(IVP_Environment*, CPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
000da930 t CPhysicsConstraint::InitRagdoll(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
000d9650 t CPhysicsConstraint::InitSliding(IVP_Environment*, CPhysicsConstraintGroup*, constraint_slidingparams_t const&)
000dbb10 t CPhysicsConstraint::SetGameData(void*)
000d8c80 t CPhysicsConstraint::DetachListener()
000db680 t CPhysicsConstraint::InitBallsocket(IVP_Environment*, CPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
000d67b0 t CPhysicsConstraint::SetLinearMotor(float, float)
000dbbd0 t CPhysicsConstraint::OutputDebugInfo()
000d6840 t CPhysicsConstraint::SetAngularMotor(float, float)
000d8e40 t CPhysicsConstraint::SetupRagdollAxis(int, constraint_axislimit_t const&, hk_Limited_Ball_Socket_BP*)
000dbb80 t CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
000dbb40 t CPhysicsConstraint::event_object_created(IVP_Event_Object*)
000d8db0 t CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
000dbb60 t CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
000d6bc0 t CPhysicsConstraint::UpdateRagdollTransforms(matrix3x4_t const&, matrix3x4_t const&)
000d6620 t CPhysicsConstraint::Activate()
000d9fe0 t CPhysicsConstraint::InitFixed(IVP_Environment*, CPhysicsConstraintGroup*, constraint_fixedparams_t const&)
000da340 t CPhysicsConstraint::InitHinge(IVP_Environment*, CPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
000d7980 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
000d7980 t CPhysicsConstraint::CPhysicsConstraint(CPhysicsObject*, CPhysicsObject*)
000d8d80 t CPhysicsConstraint::~CPhysicsConstraint()
000d8cf0 t CPhysicsConstraint::~CPhysicsConstraint()
000d8cf0 t CPhysicsConstraint::~CPhysicsConstraint()
00115400 t CUtlCharConversion::FindConversion(char const*, int*)
00115500 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00115500 t CUtlCharConversion::CUtlCharConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000f5ad0 t CVehicleController::CalcEngine(float, float, bool, float, bool)
000f3000 t CVehicleController::IsBoosting()
000f3f00 t CVehicleController::CreateWheel(int, vehicle_axleparams_t&)
000f56e0 t CVehicleController::CalcSteering(float, float, float, bool)
000f5fd0 t CVehicleController::UpdateEngine(vehicle_controlparams_t const&, float, float, float, bool, bool)
000f6ae0 t CVehicleController::GetWheelCount()
000f4910 t CVehicleController::InitCarSystem(CPhysicsObject*)
000f3030 t CVehicleController::OnVehicleExit()
000f2fc0 t CVehicleController::UpdateBooster(float)
000f3ee0 t CVehicleController::AttachListener()
000f3360 t CVehicleController::OnVehicleEnter()
000f5380 t CVehicleController::UpdateSkidding(bool)
000f58c0 t CVehicleController::UpdateSteering(vehicle_controlparams_t const&, float, float)
000f41e0 t CVehicleController::CreateTraceData(int, vehicle_axleparams_t&)
000f4a80 t CVehicleController::InitVehicleData(vehicleparams_t const&)
000f2fa0 t CVehicleController::SetSpringLength(int, float)
000f5240 t CVehicleController::UpdateHandbrake(vehicle_controlparams_t const&, float, bool, bool)
000f6280 t CVehicleController::WriteToTemplate(vphysics_save_cvehiclecontroller_t&)
000f46b0 t CVehicleController::CreateIVPObjects()
000f6ac0 t CVehicleController::GetVehicleParams()
000f64f0 t CVehicleController::InitFromTemplate(CPhysicsEnvironment*, void*, IPhysicsGameTrace*, vphysics_save_cvehiclecontroller_t const&)
000f6b10 t CVehicleController::IsEngineDisabled()
000f3330 t CVehicleController::SetWheelFriction(int, float)
000f4ee0 t CVehicleController::UpdatePowerslide(vehicle_controlparams_t const&, bool, float)
000f4390 t CVehicleController::InitCarSystemBody(IVP_Template_Car_System&)
000f6af0 t CVehicleController::SetEngineDisabled(bool)
000f48a0 t CVehicleController::ShutdownCarSystem()
000f54f0 t CVehicleController::UpdateExtraForces()
000f2ef0 t CVehicleController::VehicleDataReload()
000f6ab0 t CVehicleController::GetOperatingParams()
000f6b70 t CVehicleController::event_object_frozen(IVP_Event_Object*)
000f4400 t CVehicleController::InitCarSystemWheels(IVP_Template_Car_System&)
000f6b30 t CVehicleController::event_object_created(IVP_Event_Object*)
000f49d0 t CVehicleController::event_object_deleted(IVP_Event_Object*)
000f6b50 t CVehicleController::event_object_revived(IVP_Event_Object*)
000f3420 t CVehicleController::GetWheelContactPoint(int, Vector*, int*)
000f56b0 t CVehicleController::UpdateWheelPositions()
000f3150 t CVehicleController::GetCarSystemDebugData(vehicle_debugcarsystem_t&)
000f5940 t CVehicleController::CalcEngineTransmission(float)
000f5130 t CVehicleController::UpdateEngineTurboStart(vehicle_controlparams_t const&, float)
000f51e0 t CVehicleController::UpdateEngineTurboFinish()
000f6ad0 t CVehicleController::GetVehicleParamsForChange()
000f6050 t CVehicleController::Update(float, vehicle_controlparams_t&)
000f33b0 t CVehicleController::GetWheel(int)
000f4c80 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
000f4c80 t CVehicleController::CVehicleController(vehicleparams_t const&, CPhysicsEnvironment*, unsigned int, IPhysicsGameTrace*)
000f4a60 t CVehicleController::~CVehicleController()
000f4a00 t CVehicleController::~CVehicleController()
000f4a00 t CVehicleController::~CVehicleController()
00131be0 t hk_Rigid_Body_Core::apply_impulses(hk_Core_VMQ_Input&, float const*)
00131b90 t hk_Rigid_Body_Core::apply_impulse3_spin(hk_Core_VMQ_Input&, float __vector(4))
00131b90 t hk_Rigid_Body_Core::apply_impulse3_spin(hk_Core_VMQ_Input&, float __vector)
00131940 t hk_Rigid_Body_Core::add_to_mass_matrix_inv(hk_Core_VMQ_Input&, hk_Dense_Matrix&, float*)
000dbaf0 t IPhysicsConstraint::GetPhysics2Constraint()
000dbbb0 t IPhysicsConstraint::~IPhysicsConstraint()
000dbae0 t IPhysicsConstraint::~IPhysicsConstraint()
000dbae0 t IPhysicsConstraint::~IPhysicsConstraint()
00176b60 t IVP_Actuator_Extra::do_float_cam(float)
00176940 t IVP_Actuator_Extra::do_puck_force(float)
001757e0 t IVP_Actuator_Extra::get_float_cam_props(float*, float*, float*, float*)
001743e0 t IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
00176a70 t IVP_Actuator_Extra::calc_float_cam_matrix(IVP_U_Matrix*)
00176d70 t IVP_Actuator_Extra::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001757c0 t IVP_Actuator_Extra::get_force()
00176550 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
00176550 t IVP_Actuator_Extra::IVP_Actuator_Extra(IVP_Environment*, IVP_Template_Extra*)
00175f30 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
00175e40 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
00175e40 t IVP_Actuator_Extra::~IVP_Actuator_Extra()
00177070 t IVP_Actuator_Force::get_controller_name()
00174680 t IVP_Actuator_Force::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00175750 t IVP_Actuator_Force::set_force(float)
00176720 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
00176720 t IVP_Actuator_Force::IVP_Actuator_Force(IVP_Environment*, IVP_Template_Force*)
00176000 t IVP_Actuator_Force::~IVP_Actuator_Force()
00175f50 t IVP_Actuator_Force::~IVP_Actuator_Force()
00175f50 t IVP_Actuator_Force::~IVP_Actuator_Force()
001a3990 t IVP_Anomaly_Limits::get_max_collisions_per_psi()
001a3290 t IVP_Anomaly_Limits::environment_will_be_deleted(IVP_Environment*)
001a39a0 t IVP_Anomaly_Limits::get_max_collision_checks_per_psi()
001a33b0 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
001a33b0 t IVP_Anomaly_Limits::IVP_Anomaly_Limits(IVP_BOOL)
001a3190 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
001a3120 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
001a3120 t IVP_Anomaly_Limits::~IVP_Anomaly_Limits()
0017cb40 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
0017cb40 t IVP_Buoyancy_Input::IVP_Buoyancy_Input()
00183fb0 t IVP_Core_Collision::split_collision_merged_core_next_PSI()
00185070 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
00185070 t IVP_Core_Collision::IVP_Core_Collision(IVP_Core*, IVP_Core*)
00185560 t IVP_Freeze_Manager::init_freeze_manager()
00185550 t IVP_Freeze_Manager::IVP_Freeze_Manager()
00185550 t IVP_Freeze_Manager::IVP_Freeze_Manager()
001086c0 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
001085f0 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
001085f0 t IVPhysicsKeyParser::~IVPhysicsKeyParser()
00151d10 t IVP_I_FPoint_VHash::find_point(IVP_U_Float_Point*)
00151cb0 t IVP_I_FPoint_VHash::remove_point(IVP_U_Float_Point*)
00151c10 t IVP_I_FPoint_VHash::point_to_index(IVP_U_Float_Point*)
00151c50 t IVP_I_FPoint_VHash::add_point(IVP_U_Float_Point*)
00151da0 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
00151da0 t IVP_I_FPoint_VHash::IVP_I_FPoint_VHash(int)
00151b80 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
00151b60 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
00151b60 t IVP_I_FPoint_VHash::~IVP_I_FPoint_VHash()
001742d0 t IVP_Ray_Solver_Min::get_ray_hit()
001742f0 t IVP_Ray_Solver_Min::get_ray_dist()
00172790 t IVP_Ray_Solver_Min::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, float, IVP_U_Point*)
00174300 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
00174300 t IVP_Ray_Solver_Min::IVP_Ray_Solver_Min(IVP_Ray_Solver_Template const*)
001741e0 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
001741d0 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
001741d0 t IVP_Ray_Solver_Min::~IVP_Ray_Solver_Min()
001a5730 t IVP_SurfaceManager::add_reference_to_ledge(IVP_Compact_Ledge const*)
001a5740 t IVP_SurfaceManager::remove_reference_to_ledge(IVP_Compact_Ledge const*)
001a5720 t IVP_SurfaceManager::get_ledge_specific_client_data(IVP_Compact_Ledge const*)
001a5700 t IVP_SurfaceManager::set_ledge_specific_client_data(IVP_Compact_Ledge*, unsigned int)
001a56e0 t IVP_SurfaceManager::~IVP_SurfaceManager()
001a56d0 t IVP_SurfaceManager::~IVP_SurfaceManager()
001a56d0 t IVP_SurfaceManager::~IVP_SurfaceManager()
00174c70 t IVP_Template_Force::IVP_Template_Force()
00174c70 t IVP_Template_Force::IVP_Template_Force()
001a2b40 t IVP_Time_Event_PSI::simulate_time_event(IVP_Environment*)
001a3110 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
001a3110 t IVP_Time_Event_PSI::IVP_Time_Event_PSI()
00262ca4 d IVP_U_Active_Float::change_meter
001a7270 t IVP_U_Active_Float::add_dependency(IVP_U_Active_Float_Listener*)
001a6d60 t IVP_U_Active_Float::update_derived()
001a87b0 t IVP_U_Active_Float::get_float_value()
001a87a0 t IVP_U_Active_Float::give_double_value()
001a72b0 t IVP_U_Active_Float::remove_dependency(IVP_U_Active_Float_Listener*)
001a6cc0 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
001a6cc0 t IVP_U_Active_Float::IVP_U_Active_Float(char const*)
001a65a0 t IVP_U_Active_Float::~IVP_U_Active_Float()
001a6540 t IVP_U_Active_Float::~IVP_U_Active_Float()
001a6540 t IVP_U_Active_Float::~IVP_U_Active_Float()
001a6e30 t IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
001a6270 t IVP_U_Active_Limit::print()
001a82e0 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, float, float)
001a82e0 t IVP_U_Active_Limit::IVP_U_Active_Limit(char const*, IVP_U_Active_Float*, float, float)
001a7430 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
001a73e0 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
001a73e0 t IVP_U_Active_Limit::~IVP_U_Active_Limit()
001a6fd0 t IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
001a63b0 t IVP_U_Active_Pulse::print()
001a8020 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, float, int, int, float, float)
001a8020 t IVP_U_Active_Pulse::IVP_U_Active_Pulse(char const*, IVP_U_Active_Float*, float, int, int, float, float)
001a76a0 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
001a7650 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
001a7650 t IVP_U_Active_Pulse::~IVP_U_Active_Pulse()
001a8750 t IVP_U_Active_Value::add_reference()
001a8760 t IVP_U_Active_Value::remove_reference()
001a8790 t IVP_U_Active_Value::get_name()
001a6c90 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
001a6c90 t IVP_U_Active_Value::IVP_U_Active_Value(char const*)
001a6520 t IVP_U_Active_Value::~IVP_U_Active_Value()
001a64f0 t IVP_U_Active_Value::~IVP_U_Active_Value()
001a64f0 t IVP_U_Active_Value::~IVP_U_Active_Value()
001aecb0 t IVP_U_Float_Point3::set(float const*)
001adc70 t IVP_U_Float_Point3::byte_swap()
001cb280 t IVP_U_Matrix_Cache::calc_matrix_at(IVP_Time, int)
001cb2f0 t IVP_U_Matrix_Cache::calc_matrix_at_now(IVP_Time, int)
001cb3e0 t IVP_U_Matrix_Cache::calc_calc_matrix_cache(IVP_Cache_Object*)
001cb300 t IVP_U_Matrix_Cache::p_init(IVP_Cache_Object*)
001cb370 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
001cb370 t IVP_U_Matrix_Cache::IVP_U_Matrix_Cache(IVP_Cache_Object*)
00055300 t NxAllocatorDefault::free(void*) [clone .isra.12]
000953b0 t NxAllocatorDefault::free(void*) [clone .isra.2]
0006eb40 t NxCapsuleShapeDesc::setToDefault()
0006e810 t NxCapsuleShapeDesc::~NxCapsuleShapeDesc()
0006e7b0 t NxCapsuleShapeDesc::~NxCapsuleShapeDesc()
0006e7b0 t NxCapsuleShapeDesc::~NxCapsuleShapeDesc()
000828a0 t NxTireFunctionDesc::setToDefault()
00082b10 t NxTireFunctionDesc::~NxTireFunctionDesc()
00082860 t NxTireFunctionDesc::~NxTireFunctionDesc()
00082860 t NxTireFunctionDesc::~NxTireFunctionDesc()
000e7a90 t CIVPMaterialManager::SetPropMap(int*, int)
000e9390 t CIVPMaterialManager::get_elasticity(IVP_Contact_Situation*)
000e93d0 t CIVPMaterialManager::get_friction_factor(IVP_Contact_Situation*)
000e74e0 t CIVPMaterialManager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
000e7a30 t CIVPMaterialManager::CIVPMaterialManager()
000e7a30 t CIVPMaterialManager::CIVPMaterialManager()
000e9330 t CIVPMaterialManager::~CIVPMaterialManager()
000e92d0 t CIVPMaterialManager::~CIVPMaterialManager()
000e92d0 t CIVPMaterialManager::~CIVPMaterialManager()
000dccd0 t CPhysicsEnvironment::ClearStats()
000dd460 t CPhysicsEnvironment::PhantomAdd(CPhysicsObject*)
00109300 t CPhysicsEnvironment::PreRestore(physprerestoreparams_t const&)
000dd0a0 t CPhysicsEnvironment::SetGravity(Vector const&)
00108fe0 t CPhysicsEnvironment::PostRestore()
000dcff0 t CPhysicsEnvironment::CreateSpring(IPhysicsObject*, IPhysicsObject*, springparams_t*)
000de480 t CPhysicsEnvironment::DestroyObject(IPhysicsObject*)
000dc7f0 t CPhysicsEnvironment::DestroySpring(IPhysicsSpring*)
000dd4a0 t CPhysicsEnvironment::PhantomRemove(CPhysicsObject*)
000dc970 t CPhysicsEnvironment::SetAirDensity(float)
000dec00 t CPhysicsEnvironment::SetQuickDelete(bool)
000de8d0 t CPhysicsEnvironment::TransferObject(IPhysicsObject*, IPhysicsEnvironment*)
000dc600 t CPhysicsEnvironment::GetDebugOverlay()
000dc5b0 t CPhysicsEnvironment::SetDebugOverlay(void* (*)(char const*, int*))
000dd5e0 t CPhysicsEnvironment::ClearDeadObjects()
000de710 t CPhysicsEnvironment::CreatePolyObject(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
000dd700 t CPhysicsEnvironment::SimulateAsyncEnd()
000dc9c0 t CPhysicsEnvironment::SweepCollideable(CPhysCollide const*, Vector const&, Vector const&, QAngle const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
000dd6f0 t CPhysicsEnvironment::CleanupDeleteList()
000de0d0 t CPhysicsEnvironment::DestroyConstraint(IPhysicsConstraint*)
000dec20 t CPhysicsEnvironment::EnableDeleteQueue(bool)
000de410 t CPhysicsEnvironment::CreateSphereObject(float, int, Vector const&, QAngle const&, objectparams_t*, bool)
000dcbc0 t CPhysicsEnvironment::DebugCheckContacts()
000dc840 t CPhysicsEnvironment::SetCollisionSolver(IPhysicsCollisionSolver*)
000de180 t CPhysicsEnvironment::SimulateAsyncBegin(float)
000de840 t CPhysicsEnvironment::AddPlayerController(IPhysicsPlayerController*)
000dcc50 t CPhysicsEnvironment::ForceObjectsToSleep(IPhysicsObject**, int)
000dd040 t CPhysicsEnvironment::SetAlternateGravity(Vector const&)
000dd4e0 t CPhysicsEnvironment::SetupLibraryOptions()
000dd400 t CPhysicsEnvironment::FindPlayerController(IPhysicsObject*)
000dd590 t CPhysicsEnvironment::ForwardFluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
000dcdf0 t CPhysicsEnvironment::ResetSimulationClock()
000dce40 t CPhysicsEnvironment::CreateConstraintGroup(constraint_groupparams_t const&)
000dcee0 t CPhysicsEnvironment::CreateFixedConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_fixedparams_t const&)
000de7f0 t CPhysicsEnvironment::CreateFluidController(IPhysicsObject*, fluidparams_t*)
000dcf20 t CPhysicsEnvironment::CreateHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_hingeparams_t const&)
000dd510 t CPhysicsEnvironment::ForwardCollisionEvent(vcollisionevent_t*)
000dc880 t CPhysicsEnvironment::SetObjectEventHandler(IPhysicsObjectEvent*)
000dcdd0 t CPhysicsEnvironment::SetSimulationTimestep(float)
000dce60 t CPhysicsEnvironment::CreateLengthConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_lengthparams_t const&)
000dcda0 t CPhysicsEnvironment::CreateMotionController(IMotionEvent*)
000de8a0 t CPhysicsEnvironment::CreatePlayerController(IPhysicsObject*)
000de630 t CPhysicsEnvironment::CreatePolyObjectStatic(CPhysCollide const*, int, Vector const&, QAngle const&, objectparams_t*)
000dce80 t CPhysicsEnvironment::CreatePulleyConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_pulleyparams_t const&)
000dcdb0 t CPhysicsEnvironment::CreateShadowController(IPhysicsObject*, bool, bool)
000dc810 t CPhysicsEnvironment::DestroyConstraintGroup(IPhysicsConstraintGroup*)
000dcd00 t CPhysicsEnvironment::DestroyFluidController(IPhysicsFluidController*)
000dcba0 t CPhysicsEnvironment::EnableConstraintNotify(bool)
000dd560 t CPhysicsEnvironment::ForwardFluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
000dd350 t CPhysicsEnvironment::RemovePlayerController(IPhysicsPlayerController*)
000dca50 t CPhysicsEnvironment::SetPerformanceSettings(physics_performanceparams_t const*)
000dcfd0 t CPhysicsEnvironment::CreateRagdollConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ragdollparams_t const&)
000dcec0 t CPhysicsEnvironment::CreateSlidingConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_slidingparams_t const&)
000dcd90 t CPhysicsEnvironment::CreateVehicleController(IPhysicsObject*, vehicleparams_t const&, unsigned int, IPhysicsGameTrace*)
000dc8e0 t CPhysicsEnvironment::DestroyMotionController(IPhysicsMotionController*)
000dd3d0 t CPhysicsEnvironment::DestroyPlayerController(IPhysicsPlayerController*)
000dc8c0 t CPhysicsEnvironment::DestroyShadowController(IPhysicsShadowController*)
000dd010 t CPhysicsEnvironment::SerializeObjectToBuffer(IPhysicsObject*, unsigned char*, unsigned int)
000dc900 t CPhysicsEnvironment::DestroyVehicleController(IPhysicsVehicleController*)
000dd310 t CPhysicsEnvironment::GetCollisionEventHandler()
000dd320 t CPhysicsEnvironment::NotifyConstraintDisabled(IPhysicsConstraint*)
000dc860 t CPhysicsEnvironment::SetCollisionEventHandler(IPhysicsCollisionEvent*)
000dc8a0 t CPhysicsEnvironment::SetConstraintEventHandler(IPhysicsConstraintEvent*)
000dcea0 t CPhysicsEnvironment::CreateBallsocketConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_ballsocketparams_t const&)
000de5d0 t CPhysicsEnvironment::UnserializeObjectFromBuffer(void*, unsigned char*, unsigned int, bool)
000dcf00 t CPhysicsEnvironment::CreateLimitedHingeConstraint(IPhysicsObject*, IPhysicsObject*, IPhysicsConstraintGroup*, constraint_limitedhingeparams_t const&)
00108f40 t CPhysicsEnvironment::Save(physsaveparams_t const&)
000dec30 t CPhysicsEnvironment::Connect(IPhysics2World*)
00109240 t CPhysicsEnvironment::Restore(physrestoreparams_t const&)
000dc6f0 t CPhysicsEnvironment::Simulate(float)
000dc830 t CPhysicsEnvironment::TraceBox(CGameTrace*, Vector const&, Vector const&, Vector const&, Vector const&)
000dc9b0 t CPhysicsEnvironment::TraceRay(Ray_t const&, unsigned int, IPhysicsTraceFilter*, CGameTrace*)
000dcaf0 t CPhysicsEnvironment::ReadStats(physics_stats_t*)
000dda30 t CPhysicsEnvironment::CPhysicsEnvironment()
000dda30 t CPhysicsEnvironment::CPhysicsEnvironment()
000de0b0 t CPhysicsEnvironment::~CPhysicsEnvironment()
000dde10 t CPhysicsEnvironment::~CPhysicsEnvironment()
000dde10 t CPhysicsEnvironment::~CPhysicsEnvironment()
00118260 t CUtlNoEscConversion::FindConversion(char const*, int*)
00122e90 t hk_Fixed_Constraint::init_constraint(void const*)
00122af0 t hk_Fixed_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00122fd0 t hk_Fixed_Constraint::apply_effector_PSI(hk_PSI_Info&)
00123060 t hk_Fixed_Constraint::get_constraint_dof()
00122ea0 t hk_Fixed_Constraint::write_to_blueprint(hk_Fixed_BP*)
00123050 t hk_Fixed_Constraint::get_constraint_type()
00122ae0 t hk_Fixed_Constraint::get_vmq_storage_size()
00122e20 t hk_Fixed_Constraint::init_fixed_constraint(hk_Fixed_BP const*)
001230c0 t hk_Fixed_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00122f10 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00122f70 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00122f10 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Environment*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00122f70 t hk_Fixed_Constraint::hk_Fixed_Constraint(hk_Local_Constraint_System*, hk_Fixed_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00123090 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00123070 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00123070 t hk_Fixed_Constraint::~hk_Fixed_Constraint()
00124430 t hk_Hinge_BP_Builder::set_axis_ws(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&)
00124400 t hk_Hinge_BP_Builder::set_position_os(int, hk_Vector3 const&)
001248b0 t hk_Hinge_BP_Builder::set_axis_perp_os(int, hk_Vector3 const&)
00124950 t hk_Hinge_BP_Builder::set_angular_motor(float, float)
00124980 t hk_Hinge_BP_Builder::set_angular_limits(float, float)
001249f0 t hk_Hinge_BP_Builder::set_joint_friction(float)
00124a20 t hk_Hinge_BP_Builder::set_tau(float)
00126fb0 t hk_Hinge_Constraint::set_limits(float, float)
00127030 t hk_Hinge_Constraint::set_friction(float)
00126cc0 t hk_Hinge_Constraint::init_constraint(void const*)
00124a40 t hk_Hinge_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00126f10 t hk_Hinge_Constraint::apply_effector_PSI(hk_PSI_Info&)
001270c0 t hk_Hinge_Constraint::get_constraint_dof()
00126cd0 t hk_Hinge_Constraint::write_to_blueprint(hk_Hinge_BP*)
001270b0 t hk_Hinge_Constraint::get_constraint_type()
00124a30 t hk_Hinge_Constraint::get_vmq_storage_size()
00126410 t hk_Hinge_Constraint::init_hinge_constraint(hk_Hinge_BP const*)
00124d30 t hk_Hinge_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00127070 t hk_Hinge_Constraint::set_motor(float, float)
00126d90 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00126e50 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00126d90 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Environment*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00126e50 t hk_Hinge_Constraint::hk_Hinge_Constraint(hk_Local_Constraint_System*, hk_Hinge_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
001270f0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
001270d0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
001270d0 t hk_Hinge_Constraint::~hk_Hinge_Constraint()
000deff0 t IPhysicsEnvironment::~IPhysicsEnvironment()
000debf0 t IPhysicsEnvironment::~IPhysicsEnvironment()
000debf0 t IPhysicsEnvironment::~IPhysicsEnvironment()
001b94a0 t IVP_3D_Solver_PK_KK::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00177f20 t IVP_Actuator_Spring::get_constant()
00177bd0 t IVP_Actuator_Spring::set_constant(float)
00177f30 t IVP_Actuator_Spring::get_damp_factor()
00177f60 t IVP_Actuator_Spring::get_only_stretch()
00177f40 t IVP_Actuator_Spring::get_rel_pos_damp()
00177c30 t IVP_Actuator_Spring::set_rel_pos_damp(float)
00177ba0 t IVP_Actuator_Spring::set_break_max_len(float)
00177f00 t IVP_Actuator_Spring::get_controller_name()
00177790 t IVP_Actuator_Spring::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00177740 t IVP_Actuator_Spring::fire_event_spring_broken()
00177f50 t IVP_Actuator_Spring::get_spring_length_zero_force()
00177b70 t IVP_Actuator_Spring::set_len(float)
00177c00 t IVP_Actuator_Spring::set_damp(float)
001779f0 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
001779f0 t IVP_Actuator_Spring::IVP_Actuator_Spring(IVP_Environment*, IVP_Template_Spring*, IVP_ACTUATOR_TYPE)
001775c0 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
00177430 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
00177430 t IVP_Actuator_Spring::~IVP_Actuator_Spring()
00177180 t IVP_Actuator_Torque::get_torque()
00175980 t IVP_Actuator_Torque::set_torque(float)
00177090 t IVP_Actuator_Torque::get_controller_name()
00175950 t IVP_Actuator_Torque::set_max_rotation_speed(float)
001748a0 t IVP_Actuator_Torque::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00176180 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
00176180 t IVP_Actuator_Torque::IVP_Actuator_Torque(IVP_Environment*, IVP_Template_Torque*)
00175c40 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
00175be0 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
00175be0 t IVP_Actuator_Torque::~IVP_Actuator_Torque()
001a3600 t IVP_Anomaly_Manager::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, float)
001a32d0 t IVP_Anomaly_Manager::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
001a31b0 t IVP_Anomaly_Manager::get_push_speed_penetration(IVP_Real_Object*, IVP_Real_Object*)
001a32b0 t IVP_Anomaly_Manager::environment_will_be_deleted(IVP_Environment*)
001a3200 t IVP_Anomaly_Manager::max_angular_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
001a3160 t IVP_Anomaly_Manager::max_collision_checks_exceeded(int)
001a3410 t IVP_Anomaly_Manager::solve_inter_penetration_simple(IVP_Real_Object*, IVP_Real_Object*, float)
001a3150 t IVP_Anomaly_Manager::max_contacts_exceeded_check_freezing(IVP_Core**, int)
001a3140 t IVP_Anomaly_Manager::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
001a33f0 t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
001a33f0 t IVP_Anomaly_Manager::IVP_Anomaly_Manager(IVP_BOOL)
001a3170 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
001a3130 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
001a3130 t IVP_Anomaly_Manager::~IVP_Anomaly_Manager()
0017cb60 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
0017cb60 t IVP_Buoyancy_Output::IVP_Buoyancy_Output()
001c3c40 t IVP_Buoyancy_Solver::compute_forces(IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_Real_Object*)
001c2ec0 t IVP_Buoyancy_Solver::compute_values_for_one_ball(IVP_Real_Object const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
001c3a50 t IVP_Buoyancy_Solver::compute_values_for_one_ledge(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
001c3ab0 t IVP_Buoyancy_Solver::compute_values_for_one_polygon(IVP_Real_Object*, IVP_U_Float_Hesse const*)
001c3130 t IVP_Buoyancy_Solver::compute_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_Compact_Ledge const*)
001c0490 t IVP_Buoyancy_Solver::compute_disection_points_with_ball(IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, float const&, IVP_U_Float_Point*, IVP_U_Float_Point*)
001c0330 t IVP_Buoyancy_Solver::compute_buoyancy_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
001c0700 t IVP_Buoyancy_Solver::compute_dampening_values_for_one_ball(int const&, float const&, float const&, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Hesse const*, IVP_U_Float_Hesse const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
001c3df0 t IVP_Buoyancy_Solver::compute_rotation_and_translation_values_for_one_triangle(IVP_Real_Object*, IVP_Compact_Triangle const*, IVP_U_Float_Point const**, IVP_Compact_Ledge const*, float const*, int const&, int const&, int const&)
001c0260 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
001c0260 t IVP_Buoyancy_Solver::IVP_Buoyancy_Solver(IVP_Core*, IVP_Controller_Buoyancy*, IVP_Template_Buoyancy const*, IVP_U_Float_Point const*)
0019e080 t IVP_Cluster_Manager::add_object(IVP_Real_Object*)
0019e090 t IVP_Cluster_Manager::remove_object(IVP_Real_Object*)
0019cc60 t IVP_Cluster_Manager::get_root_cluster()
0019db60 t IVP_Cluster_Manager::add_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
0019dc80 t IVP_Cluster_Manager::add_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
0019dda0 t IVP_Cluster_Manager::remove_listener_object(IVP_Real_Object*, IVP_Listener_Object*)
0019ce30 t IVP_Cluster_Manager::check_for_unused_objects(IVP_Universe_Manager*)
0019d220 t IVP_Cluster_Manager::fire_event_object_frozen(IVP_Event_Object*)
0019d890 t IVP_Cluster_Manager::fire_event_pre_collision(IVP_Real_Object*, IVP_Event_Collision*)
0019d0e0 t IVP_Cluster_Manager::fire_event_object_created(IVP_Event_Object*)
0019d360 t IVP_Cluster_Manager::fire_event_object_deleted(IVP_Event_Object*)
0019cfa0 t IVP_Cluster_Manager::fire_event_object_revived(IVP_Event_Object*)
0019d610 t IVP_Cluster_Manager::fire_event_post_collision(IVP_Real_Object*, IVP_Event_Collision*)
0019df10 t IVP_Cluster_Manager::remove_listener_collision(IVP_Real_Object*, IVP_Listener_Collision*)
0019d750 t IVP_Cluster_Manager::fire_event_friction_created(IVP_Real_Object*, IVP_Event_Friction*)
0019d9d0 t IVP_Cluster_Manager::fire_event_friction_deleted(IVP_Real_Object*, IVP_Event_Friction*)
0019d4d0 t IVP_Cluster_Manager::fire_event_collision_object_deleted(IVP_Real_Object*)
0019cda0 t IVP_Cluster_Manager::get_next_real_object_in_cluster_tree(IVP_Object*)
0019cc70 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
0019cc70 t IVP_Cluster_Manager::IVP_Cluster_Manager(IVP_Environment*)
0019db10 t IVP_Cluster_Manager::~IVP_Cluster_Manager()
0019db10 t IVP_Cluster_Manager::~IVP_Cluster_Manager()
001a5a60 t IVP_Compact_Surface::byte_swap_all(IVP_BOOL, int)
001a59b0 t IVP_Compact_Surface::byte_swap()
001a2850 t IVP_Event_Manager_D::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
001a3090 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
001a3050 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
001a3050 t IVP_Event_Manager_D::~IVP_Event_Manager_D()
0018e1f0 t IVP_Friction_Solver::complex_failed(IVP_Friction_System*)
0018e5d0 t IVP_Friction_Solver::calc_solver_PSI(IVP_Friction_System*, int*)
0018d7a0 t IVP_Friction_Solver::do_penalty_step(float*, float*, float, float)
0018a280 t IVP_Friction_Solver::ease_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*, float)
0018d2a0 t IVP_Friction_Solver::factor_result_vec()
0018a510 t IVP_Friction_Solver::ease_friction_pair(IVP_Friction_Core_Pair*, IVP_U_Memory*)
0018e010 t IVP_Friction_Solver::do_inactives_pushes(IVP_Friction_System*)
0018e220 t IVP_Friction_Solver::do_resulting_pushes(IVP_Friction_System*)
0018e4e0 t IVP_Friction_Solver::setup_coords_mindists(IVP_Friction_System*)
0018a270 t IVP_Friction_Solver::ease_test_two_mindists(IVP_Contact_Point*, IVP_Contact_Point*, IVP_U_Float_Point*)
0018d2e0 t IVP_Friction_Solver::normize_constraint_equ()
0018e1e0 t IVP_Friction_Solver::debug_distance_after_push(int)
0018f020 t IVP_Friction_Solver::solve_linear_equation_and_push(IVP_Friction_System*, int*, int, IVP_U_Memory*)
0018d170 t IVP_Friction_Solver::test_gauss_solution_suggestion(float*, int*, int, IVP_U_Memory*)
0018aa70 t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
0018aa70 t IVP_Friction_Solver::IVP_Friction_Solver(IVP_Friction_System*, IVP_Event_Sim const*)
0018b9c0 t IVP_Friction_System::reset_time(IVP_Time)
0018b1f0 t IVP_Friction_System::add_fr_pair(IVP_Friction_Core_Pair*)
0018b250 t IVP_Friction_System::del_fr_pair(IVP_Friction_Core_Pair*)
0018b9b0 t IVP_Friction_System::print_all_dists()
0018b370 t IVP_Friction_System::union_find_fr_sys()
0019e900 t IVP_Friction_System::add_core_to_system(IVP_Core*)
0019e8d0 t IVP_Friction_System::add_dist_to_system(IVP_Contact_Point*)
0018c810 t IVP_Friction_System::debug_fs_out_ascii()
0018f320 t IVP_Friction_System::do_friction_system(IVP_Event_Sim const*)
0018c880 t IVP_Friction_System::find_pair_of_cores(IVP_Core*, IVP_Core*)
0018aed0 t IVP_Friction_System::apply_real_friction(IVP_Event_Sim const*)
0019ede0 t IVP_Friction_System::get_controller_name()
0018efb0 t IVP_Friction_System::get_max_energy_gain()
0018ef60 t IVP_Friction_System::undo_complex_pushes()
00189fc0 t IVP_Friction_System::calc_friction_forces(IVP_Event_Sim const*)
00196240 t IVP_Friction_System::debug_clean_tmp_info()
0018a730 t IVP_Friction_System::ease_friction_forces()
0018cb90 t IVP_Friction_System::get_controlled_cores(IVP_U_Vector<IVP_Core>*)
0018ec30 t IVP_Friction_System::ivp_debug_fs_pointers()
0018b4c0 t IVP_Friction_System::split_friction_system(IVP_Core*)
0018ef10 t IVP_Friction_System::confirm_complex_pushes()
0018c820 t IVP_Friction_System::core_is_found_in_pairs(IVP_Core*)
0018ed10 t IVP_Friction_System::core_is_terminal_in_fs(IVP_Core*)
0018b2e0 t IVP_Friction_System::get_pair_info_for_objs(IVP_Core*, IVP_Core*)
0018ebe0 t IVP_Friction_System::exchange_friction_dists(IVP_Contact_Point*, IVP_Contact_Point*)
0018af00 t IVP_Friction_System::fusion_friction_systems(IVP_Friction_System*)
0019edf0 t IVP_Friction_System::get_controller_priority()
0019e9b0 t IVP_Friction_System::remove_core_from_system(IVP_Core*)
0019e7e0 t IVP_Friction_System::remove_dist_from_system(IVP_Contact_Point*)
0018ab90 t IVP_Friction_System::delete_friction_distance(IVP_Contact_Point*)
0018cd00 t IVP_Friction_System::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0018e4d0 t IVP_Friction_System::test_hole_fr_system_data()
0018d450 t IVP_Friction_System::do_pushes_distance_keepers(IVP_Event_Sim const*)
0018ee10 t IVP_Friction_System::kinetic_energy_of_hole_frs()
0019e820 t IVP_Friction_System::dist_added_update_pair_info(IVP_Contact_Point*)
0018ec40 t IVP_Friction_System::bubble_sort_dists_importance()
0018bb00 t IVP_Friction_System::clear_integrated_anti_energy()
0019e640 t IVP_Friction_System::fs_recalc_all_contact_points()
0018eb30 t IVP_Friction_System::reorder_mindists_for_complex()
0019e710 t IVP_Friction_System::dist_removed_update_pair_info(IVP_Contact_Point*)
0018b340 t IVP_Friction_System::debug_check_system_consistency()
0018cbb0 t IVP_Friction_System::get_associated_controlled_cores()
0018d420 t IVP_Friction_System::get_num_supposed_active_frdists()
0018cba0 t IVP_Friction_System::get_minimum_simulation_frequency()
0018ed80 t IVP_Friction_System::static_fr_oversized_matrix_panic()
0018ce30 t IVP_Friction_System::core_is_going_to_be_deleted_event(IVP_Core*)
0018c350 t IVP_Friction_System::remove_energy_gained_by_real_friction()
0019e5c0 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
0019e5c0 t IVP_Friction_System::IVP_Friction_System(IVP_Environment*)
0019ed80 t IVP_Friction_System::~IVP_Friction_System()
0019ec90 t IVP_Friction_System::~IVP_Friction_System()
0019ec90 t IVP_Friction_System::~IVP_Friction_System()
00191580 t IVP_Incr_L_U_Matrix::normize_row(int)
00191e00 t IVP_Incr_L_U_Matrix::add_neg_col_L(int, int, float)
00192640 t IVP_Incr_L_U_Matrix::add_neg_row_L(int, int, float)
00193390 t IVP_Incr_L_U_Matrix::debug_print_a()
001926f0 t IVP_Incr_L_U_Matrix::decrement_l_u(int)
00191fa0 t IVP_Incr_L_U_Matrix::increment_l_u()
001914d0 t IVP_Incr_L_U_Matrix::normize_row_L(int)
00192270 t IVP_Incr_L_U_Matrix::solve_lin_equ()
00191b40 t IVP_Incr_L_U_Matrix::subtract_row_L(int, int, float)
001932c0 t IVP_Incr_L_U_Matrix::debug_print_l_u()
00191f20 t IVP_Incr_L_U_Matrix::mult_vec_with_L()
001917d0 t IVP_Incr_L_U_Matrix::pivot_search_l_u(int)
001921d0 t IVP_Incr_L_U_Matrix::solve_vec_with_U()
001916c0 t IVP_Incr_L_U_Matrix::exchange_rows_l_u(int, int)
00191e60 t IVP_Incr_L_U_Matrix::exchange_columns_L(int, int)
00191ec0 t IVP_Incr_L_U_Matrix::exchange_columns_U(int, int)
001919e0 t IVP_Incr_L_U_Matrix::add_neg_row_to_row_l_u(int, int, float)
00191860 t IVP_Incr_L_U_Matrix::add_neg_row_upwards_l_u(int, int, float)
00191c00 t IVP_Incr_L_U_Matrix::l_u_decomposition_with_pivoting()
0019ee20 t IVP_Listener_Object::~IVP_Listener_Object()
0019eda0 t IVP_Listener_Object::~IVP_Listener_Object()
0019eda0 t IVP_Listener_Object::~IVP_Listener_Object()
001a5060 t IVP_Material_Simple::get_damping()
001a5070 t IVP_Material_Simple::get_adhesion()
001a5050 t IVP_Material_Simple::get_elasticity()
001a5040 t IVP_Material_Simple::get_friction_factor()
001a5250 t IVP_Material_Simple::get_second_friction_factor()
001a5080 t IVP_Material_Simple::get_name()
001a5220 t IVP_Material_Simple::IVP_Material_Simple(float, float)
001a51f0 t IVP_Material_Simple::IVP_Material_Simple()
001a5220 t IVP_Material_Simple::IVP_Material_Simple(float, float)
001a51f0 t IVP_Material_Simple::IVP_Material_Simple()
001a5090 t IVP_Material_Simple::~IVP_Material_Simple()
001a5030 t IVP_Material_Simple::~IVP_Material_Simple()
001a5030 t IVP_Material_Simple::~IVP_Material_Simple()
001b5e60 t IVP_Mindist_Manager::print_mindists()
001b6020 t IVP_Mindist_Manager::recheck_ov_element(IVP_Real_Object*)
001b6e70 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float)
001b6d50 t IVP_Mindist_Manager::insert_hull_mindist(IVP_Mindist*, float, float)
001b6d10 t IVP_Mindist_Manager::remove_hull_mindist(IVP_Mindist*)
001b5ec0 t IVP_Mindist_Manager::insert_exact_mindist(IVP_Mindist*)
001b7840 t IVP_Mindist_Manager::mindist_left_phantom(IVP_Mindist*)
001b8de0 t IVP_Mindist_Manager::recalc_exact_mindist(IVP_Mindist*)
001b6b10 t IVP_Mindist_Manager::remove_exact_mindist(IVP_Mindist*)
001b81a0 t IVP_Mindist_Manager::create_exact_mindists(IVP_Real_Object*, IVP_Real_Object*, float, IVP_U_FVector<IVP_Collision>*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Compact_Ledge const*, IVP_Collision_Delegator*)
001b5fa0 t IVP_Mindist_Manager::insert_invalid_mindist(IVP_Mindist*)
001b6c80 t IVP_Mindist_Manager::remove_invalid_mindist(IVP_Mindist*)
001b77e0 t IVP_Mindist_Manager::mindist_entered_phantom(IVP_Mindist*)
001b76f0 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float)
001b7680 t IVP_Mindist_Manager::insert_lazy_hull_mindist(IVP_Mindist*, float, float)
001b8ef0 t IVP_Mindist_Manager::recalc_all_exact_mindists()
001b8f30 t IVP_Mindist_Manager::recalc_all_exact_wheel_mindist()
001b7540 t IVP_Mindist_Manager::insert_and_recalc_exact_mindist(IVP_Mindist*)
001b7500 t IVP_Mindist_Manager::recalc_all_exact_mindists_events()
001b7a20 t IVP_Mindist_Manager::insert_and_recalc_phantom_mindist(IVP_Mindist*)
001b68a0 t IVP_Mindist_Manager::enable_collision_detection_for_object(IVP_Real_Object*)
001b8ca0 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
001b8ca0 t IVP_Mindist_Manager::IVP_Mindist_Manager(IVP_Environment*)
001b8d30 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
001b8d30 t IVP_Mindist_Manager::~IVP_Mindist_Manager()
001b4950 t IVP_OV_Tree_Manager::expand_tree(IVP_OV_Node const*)
001b5200 t IVP_OV_Tree_Manager::cleanup_node(IVP_OV_Node*)
001b4700 t IVP_OV_Tree_Manager::connect_boxes(IVP_OV_Node*, IVP_OV_Node*)
001b4170 t IVP_OV_Tree_Manager::calc_optimal_box(IVP_OV_Element const*, float, float)
001b4f50 t IVP_OV_Tree_Manager::insert_ov_element(IVP_OV_Element*, float, float, IVP_U_Vector<IVP_OV_Element>*)
001b5270 t IVP_OV_Tree_Manager::remove_ov_element(IVP_OV_Element*)
001b5400 t IVP_OV_Tree_Manager::get_luf_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
001b5460 t IVP_OV_Tree_Manager::get_center_coordinates_ws(IVP_OV_Node const*, IVP_U_Float_Point*, float*)
001b4ce0 t IVP_OV_Tree_Manager::collect_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*, IVP_OV_Node const*)
001b4bb0 t IVP_OV_Tree_Manager::collect_subbox_collision_partners(IVP_OV_Element const*, IVP_OV_Node const*)
0026e640 b IVP_OV_Tree_Manager::powerlist
001b3f90 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
001b3f90 t IVP_OV_Tree_Manager::IVP_OV_Tree_Manager()
001b4070 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
001b4070 t IVP_OV_Tree_Manager::~IVP_OV_Tree_Manager()
001a0ce0 t IVP_Simulation_Unit::reset_time(IVP_Time)
0019f3c0 t IVP_Simulation_Unit::clean_sim_unit()
0019fff0 t IVP_Simulation_Unit::split_sim_unit(IVP_Core*)
0019f8f0 t IVP_Simulation_Unit::add_sim_unit_core(IVP_Core*)
0019f9c0 t IVP_Simulation_Unit::rem_sim_unit_core(IVP_Core*)
0019fa40 t IVP_Simulation_Unit::sim_unit_core_exists(IVP_Core*)
0019f6a0 t IVP_Simulation_Unit::sim_unit_remove_core(IVP_Core*)
0019f480 t IVP_Simulation_Unit::get_pos_of_controller(IVP_Controller*)
0019fdd0 t IVP_Simulation_Unit::add_controller_of_core(IVP_Core*, IVP_Controller*)
001a0740 t IVP_Simulation_Unit::do_sim_unit_union_find()
001a0ee0 t IVP_Simulation_Unit::get_unit_movement_type()
001a01b0 t IVP_Simulation_Unit::perform_test_and_split()
001a0ef0 t IVP_Simulation_Unit::set_unit_movement_type(IVP_Movement_Type)
0019f220 t IVP_Simulation_Unit::add_controller_unit_sim(IVP_Controller*)
0019f5c0 t IVP_Simulation_Unit::rem_sim_unit_controller(IVP_Controller*)
0019fed0 t IVP_Simulation_Unit::sim_unit_calc_redundants()
0019f290 t IVP_Simulation_Unit::sim_unit_union_find_test()
0019ffb0 t IVP_Simulation_Unit::fusion_simulation_unities(IVP_Simulation_Unit*)
0019fab0 t IVP_Simulation_Unit::remove_controller_of_core(IVP_Core*, IVP_Controller*)
0019fd00 t IVP_Simulation_Unit::sim_unit_sort_controllers()
001a0890 t IVP_Simulation_Unit::simulate_single_sim_unit_psi(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001a0770 t IVP_Simulation_Unit::sim_unit_calc_movement_state(IVP_Environment*)
0019f930 t IVP_Simulation_Unit::throw_cores_into_my_sim_unit(IVP_Simulation_Unit*)
001a0f10 t IVP_Simulation_Unit::sim_unit_ensure_in_simulation()
001a0210 t IVP_Simulation_Unit::sim_unit_exchange_controllers(int, int)
001a0540 t IVP_Simulation_Unit::sim_unit_ensure_cores_movement()
001a0360 t IVP_Simulation_Unit::sim_unit_revive_for_simulation(IVP_Environment*)
0019f140 t IVP_Simulation_Unit::controller_is_known_to_sim_unit(IVP_Controller*)
0019f1a0 t IVP_Simulation_Unit::add_controlled_core_for_controller(IVP_Controller*, IVP_Core*)
001a0f00 t IVP_Simulation_Unit::prefetch0_init_moving_core_for_psi(IVP_Core*)
001a06f0 t IVP_Simulation_Unit::sim_unit_clear_movement_check_values()
0019f580 t IVP_Simulation_Unit::IVP_Simulation_Unit()
0019f580 t IVP_Simulation_Unit::IVP_Simulation_Unit()
0019f4c0 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
0019f4c0 t IVP_Simulation_Unit::~IVP_Simulation_Unit()
00138f10 t IVP_SurMan_PS_Plane::get_area_size()
00139020 t IVP_SurMan_PS_Plane::get_len_of_all_edges()
001770c0 t IVP_Template_Anchor::get_object()
001770d0 t IVP_Template_Anchor::get_anchor_point_ws()
00175210 t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, float, float, float)
001751a0 t IVP_Template_Anchor::set_anchor_position_cs(IVP_Real_Object*, IVP_U_Float_Point const*)
00175060 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, float, float, float)
00174f50 t IVP_Template_Anchor::set_anchor_position_os(IVP_Real_Object*, IVP_U_Float_Point const*)
00174f30 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, float, float, float)
00174f00 t IVP_Template_Anchor::set_anchor_position_ws(IVP_Real_Object*, IVP_U_Point const*)
001a5830 t IVP_Template_Object::set_name(char const*)
001a57f0 t IVP_Template_Object::IVP_Template_Object()
001a57f0 t IVP_Template_Object::IVP_Template_Object()
001a5800 t IVP_Template_Object::~IVP_Template_Object()
001a5800 t IVP_Template_Object::~IVP_Template_Object()
00177640 t IVP_Template_Spring::IVP_Template_Spring()
00177640 t IVP_Template_Spring::IVP_Template_Spring()
00174d00 t IVP_Template_Torque::IVP_Template_Torque()
00174d00 t IVP_Template_Torque::IVP_Template_Torque()
001a7050 t IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
001a6420 t IVP_U_Active_Square::print()
001a7fb0 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, float, float, float)
001a7fb0 t IVP_U_Active_Square::IVP_U_Active_Square(char const*, IVP_U_Active_Float*, float, float, float)
001a7710 t IVP_U_Active_Square::~IVP_U_Active_Square()
001a76c0 t IVP_U_Active_Square::~IVP_U_Active_Square()
001a76c0 t IVP_U_Active_Square::~IVP_U_Active_Square()
001a60b0 t IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
001a6dc0 t IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
001a6190 t IVP_U_Active_Switch::print()
001a83f0 t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a83f0 t IVP_U_Active_Switch::IVP_U_Active_Switch(char const*, IVP_U_Active_Int*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a7900 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
001a7880 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
001a7880 t IVP_U_Active_Switch::~IVP_U_Active_Switch()
00082a30 t NxDistanceJointDesc::~NxDistanceJointDesc()
00082930 t NxDistanceJointDesc::~NxDistanceJointDesc()
00082930 t NxDistanceJointDesc::~NxDistanceJointDesc()
00082ad0 t NxRevoluteJointDesc::~NxRevoluteJointDesc()
000828e0 t NxRevoluteJointDesc::~NxRevoluteJointDesc()
000828e0 t NxRevoluteJointDesc::~NxRevoluteJointDesc()
000d4110 t physcollideheader_t::GetBaseMap()
0025e578 d physcollideheader_t::m_DataMap
000d1f80 t CAirboatFrictionData::GetContactPoint(Vector&)
000d1fa0 t CAirboatFrictionData::GetContactSpeed(Vector&)
000d1f60 t CAirboatFrictionData::GetSurfaceNormal(Vector&)
000ce730 t CPhysicsCollisionSet::ShouldCollide(int, int)
000ce6a0 t CPhysicsCollisionSet::EnableCollisions(int, int)
000ce6e0 t CPhysicsCollisionSet::DisableCollisions(int, int)
000e2ea0 t CPhysicsFrictionData::GetContactPoint(Vector&)
000e2d80 t CPhysicsFrictionData::GetContactSpeed(Vector&)
000e2df0 t CPhysicsFrictionData::GetSurfaceNormal(Vector&)
000e92b0 t CPhysicsSurfaceProps::GetIVPManager()
000e7760 t CPhysicsSurfaceProps::GetIVPMaterial(int)
000e7770 t CPhysicsSurfaceProps::GetSurfaceData(int)
000e8170 t CPhysicsSurfaceProps::GetSurfaceIndex(char const*)
000e8420 t CPhysicsSurfaceProps::ParseSurfaceData(char const*, char const*)
000e7c50 t CPhysicsSurfaceProps::AddFileToDatabase(char const*)
000e7710 t CPhysicsSurfaceProps::GetInternalSurface(int)
000e79f0 t CPhysicsSurfaceProps::CopyPhysicsProperties(CSurface*, int)
000e9270 t CPhysicsSurfaceProps::SetSurfaceIndexAutoCreate(bool)
000e7490 t CPhysicsSurfaceProps::SetWorldMaterialIndexTable(int*, int)
000e7d10 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
000e7d10 t CPhysicsSurfaceProps::CPhysicsSurfaceProps()
000e7c30 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
000e7ad0 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
000e7ad0 t CPhysicsSurfaceProps::~CPhysicsSurfaceProps()
00132c90 t hk_Dense_Matrix_Util::invert_2x2(hk_Dense_Matrix const&, hk_Dense_Matrix&, float)
00132810 t hk_Dense_Matrix_Util::invert_4x4(hk_Fixed_Dense_Matrix<4>&, float)
001324e0 t hk_Dense_Matrix_Util::invert_5x5(hk_Fixed_Dense_Matrix<5>&, float)
001321a0 t hk_Dense_Matrix_Util::invert_6x6(hk_Fixed_Dense_Matrix<6>&, float)
00132ab0 t hk_Dense_Matrix_Util::invert_3x3_symmetric(hk_Dense_Matrix&, float)
00132110 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, float const*, float*)
00132050 t hk_Dense_Matrix_Util::mult(hk_Dense_Matrix const&, hk_Dense_Vector const&, hk_Dense_Vector&)
00133020 t hk_Dense_Matrix_Util::print(hk_Dense_Matrix const&)
00132d30 t hk_Dense_Matrix_Util::solve(hk_Dense_Matrix&, hk_Dense_Vector&, float)
0012a6e0 t hk_Pulley_Constraint::set_length(float)
0012a6f0 t hk_Pulley_Constraint::set_gearing(float)
0012a590 t hk_Pulley_Constraint::init_constraint(void const*)
0012a2a0 t hk_Pulley_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0012a730 t hk_Pulley_Constraint::apply_effector_PSI(hk_PSI_Info&)
0012a790 t hk_Pulley_Constraint::get_constraint_dof()
0012a5a0 t hk_Pulley_Constraint::write_to_blueprint(hk_Pulley_BP*)
0012a780 t hk_Pulley_Constraint::get_constraint_type()
0012a290 t hk_Pulley_Constraint::get_vmq_storage_size()
0012a700 t hk_Pulley_Constraint::set_worldspace_point(int, hk_Vector3 const&)
0012a510 t hk_Pulley_Constraint::init_pulley_constraint(hk_Pulley_BP const*)
0012a7f0 t hk_Pulley_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0012a620 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0012a680 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0012a620 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Environment*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0012a680 t hk_Pulley_Constraint::hk_Pulley_Constraint(hk_Local_Constraint_System*, hk_Pulley_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0012a7c0 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0012a7a0 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
0012a7a0 t hk_Pulley_Constraint::~hk_Pulley_Constraint()
000e9370 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
000e9210 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
000e9210 t IPhysicsSurfaceProps::~IPhysicsSurfaceProps()
001b9690 t IVP_3D_Solver_PF_NPF::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001b95f0 t IVP_3D_Solver_S_VALS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00175890 t IVP_Actuator_Rot_Mot::set_max_torque(float)
00177080 t IVP_Actuator_Rot_Mot::get_controller_name()
00175830 t IVP_Actuator_Rot_Mot::set_max_rotation_speed(float)
001749d0 t IVP_Actuator_Rot_Mot::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00177170 t IVP_Actuator_Rot_Mot::get_power()
00175860 t IVP_Actuator_Rot_Mot::set_power(float)
00176360 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
00176360 t IVP_Actuator_Rot_Mot::IVP_Actuator_Rot_Mot(IVP_Environment*, IVP_Template_Rot_Mot*)
00175d60 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
00175d00 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
00175d00 t IVP_Actuator_Rot_Mot::~IVP_Actuator_Rot_Mot()
0016fcd0 t IVP_Collision_Filter::~IVP_Collision_Filter()
0016fb70 t IVP_Collision_Filter::~IVP_Collision_Filter()
0016fb70 t IVP_Collision_Filter::~IVP_Collision_Filter()
00170920 t IVP_Compact_Triangle::get_next_tri()
001707f0 t IVP_Compact_Triangle::set_tri_index(int)
001708e0 t IVP_Compact_Triangle::get_first_edge()
00170850 t IVP_Compact_Triangle::set_is_virtual(unsigned int)
00170810 t IVP_Compact_Triangle::set_pierce_index(int)
00170830 t IVP_Compact_Triangle::set_material_index(int)
001704f0 t IVP_Compact_Triangle::byte_swap()
001704c0 t IVP_Compact_Triangle::IVP_Compact_Triangle()
001704c0 t IVP_Compact_Triangle::IVP_Compact_Triangle()
001c7ce0 t IVP_Constraint_Local::get_objectA()
001c7cd0 t IVP_Constraint_Local::get_objectR()
001c75d0 t IVP_Constraint_Local::fix_rotation_axis(IVP_COORDINATE_INDEX)
001c7cf0 t IVP_Constraint_Local::constraint_changed()
001c7580 t IVP_Constraint_Local::free_rotation_axis(IVP_COORDINATE_INDEX)
001c7510 t IVP_Constraint_Local::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
001c7310 t IVP_Constraint_Local::fix_translation_axis(IVP_COORDINATE_INDEX)
001c72c0 t IVP_Constraint_Local::free_translation_axis(IVP_COORDINATE_INDEX)
001c7360 t IVP_Constraint_Local::sort_rotation_mapping()
001c7250 t IVP_Constraint_Local::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
001c4d40 t IVP_Constraint_Local::change_fixing_point_Ros(IVP_U_Point const*)
001c4890 t IVP_Constraint_Local::change_rotation_axes_Ros(IVP_U_Matrix3 const*)
001c4ef0 t IVP_Constraint_Local::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001c7110 t IVP_Constraint_Local::sort_translation_mapping()
001c4620 t IVP_Constraint_Local::change_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001c4ac0 t IVP_Constraint_Local::change_translation_axes_Ros(IVP_U_Matrix3 const*)
001c46d0 t IVP_Constraint_Local::change_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001c4c50 t IVP_Constraint_Local::change_target_fixing_point_Ros(IVP_U_Point const*)
001c4560 t IVP_Constraint_Local::change_Aos_to_relaxe_constraint()
001c44a0 t IVP_Constraint_Local::change_Ros_to_relaxe_constraint()
001c4780 t IVP_Constraint_Local::change_target_rotation_axes_Ros(IVP_U_Matrix3 const*)
001c4480 t IVP_Constraint_Local::core_is_going_to_be_deleted_event(IVP_Core*)
001c4a30 t IVP_Constraint_Local::change_target_translation_axes_Ros(IVP_U_Matrix3 const*)
001c7620 t IVP_Constraint_Local::init(IVP_Template_Constraint const&)
001c7c40 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
001c7090 t IVP_Constraint_Local::IVP_Constraint_Local()
001c7c40 t IVP_Constraint_Local::IVP_Constraint_Local(IVP_Template_Constraint const&)
001c7090 t IVP_Constraint_Local::IVP_Constraint_Local()
001c4ed0 t IVP_Constraint_Local::~IVP_Constraint_Local()
001c4e60 t IVP_Constraint_Local::~IVP_Constraint_Local()
001c4e60 t IVP_Constraint_Local::~IVP_Constraint_Local()
001c7d40 t IVP_Controller_Golem::reset_time(IVP_Time)
001c8c80 t IVP_Controller_Golem::set_prime_position(IVP_U_Point const*, IVP_U_Float_Point const*, IVP_Time const&)
001c8cf0 t IVP_Controller_Golem::set_prime_orientation(IVP_U_Quat const*, IVP_Time const&, IVP_U_Quat const*, float)
001c8190 t IVP_Controller_Golem::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001c8c50 t IVP_Controller_Golem::beam_object_to_target_position(IVP_Event_Sim*)
001c8b80 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
001c8b80 t IVP_Controller_Golem::IVP_Controller_Golem(IVP_Real_Object*, IVP_Template_Controller_Golem const*)
001c8140 t IVP_Controller_Golem::~IVP_Controller_Golem()
001c8120 t IVP_Controller_Golem::~IVP_Controller_Golem()
001c8120 t IVP_Controller_Golem::~IVP_Controller_Golem()
0019c0d0 t IVP_Controller_VHash::controller_to_index(IVP_Controller*)
00199e90 t IVP_Controller_VHash::~IVP_Controller_VHash()
00199e70 t IVP_Controller_VHash::~IVP_Controller_VHash()
00199e70 t IVP_Controller_VHash::~IVP_Controller_VHash()
00185180 t IVP_Core_Fast_Static::get_inv_masses()
00185430 t IVP_Core_Fast_Static::~IVP_Core_Fast_Static()
00185430 t IVP_Core_Fast_Static::~IVP_Core_Fast_Static()
00199d60 t IVP_Friction_Manager::generate_contact_point(IVP_Mindist*, IVP_BOOL*)
00199cb0 t IVP_Friction_Manager::get_associated_contact_point(IVP_Mindist*)
00199d20 t IVP_Friction_Manager::delete_all_contact_points_of_object(IVP_Real_Object*)
00157510 t IVP_Intrusion_Status::p()
001574a0 t IVP_Intrusion_Status::print(char const*)
00157530 t IVP_Intrusion_Status::IVP_Intrusion_Status()
00157530 t IVP_Intrusion_Status::IVP_Intrusion_Status()
00157550 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
00157550 t IVP_Intrusion_Status::~IVP_Intrusion_Status()
00181ad0 t IVP_Listener_Phantom::IVP_Listener_Phantom()
00181ad0 t IVP_Listener_Phantom::IVP_Listener_Phantom()
001a4fb0 t IVP_Material_Manager::get_damping(IVP_Contact_Situation*)
001a4ff0 t IVP_Material_Manager::get_adhesion(IVP_Contact_Situation*)
001a4f70 t IVP_Material_Manager::get_elasticity(IVP_Contact_Situation*)
001a4f30 t IVP_Material_Manager::get_friction_factor(IVP_Contact_Situation*)
001a50d0 t IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)
001a5290 t IVP_Material_Manager::environment_will_be_deleted(IVP_Environment*)
001a51d0 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
001a51d0 t IVP_Material_Manager::IVP_Material_Manager(IVP_BOOL)
001a5270 t IVP_Material_Manager::~IVP_Material_Manager()
001a5260 t IVP_Material_Manager::~IVP_Material_Manager()
001a5260 t IVP_Material_Manager::~IVP_Material_Manager()
001b5be0 t IVP_Mindist_Settings::set_collision_tolerance(float, float)
001b5cc0 t IVP_Mindist_Settings::set_event_queue_min_delta_time_base(float)
001b5ce0 t IVP_Mindist_Settings::IVP_Mindist_Settings()
001b5ce0 t IVP_Mindist_Settings::IVP_Mindist_Settings()
0018bba0 t IVP_Mutual_Energizer::calc_energy_potential(float, float, float, float, float)
0018bf00 t IVP_Mutual_Energizer::calc_energy_potential()
0018bc20 t IVP_Mutual_Energizer::init_mutual_energizer(IVP_Core*, IVP_Core*)
0018c010 t IVP_Mutual_Energizer::destroy_percent_energy(float)
0018bb40 t IVP_Mutual_Energizer::calc_impulse_to_reduce_energy_level(float, float, float, float)
00174220 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
001741b0 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
001741b0 t IVP_Ray_Hit_Listener::~IVP_Ray_Hit_Listener()
00173080 t IVP_Ray_Solver_Group::check_ray_group_against_cube(IVP_U_Float_Point const*, float)
00173ec0 t IVP_Ray_Solver_Group::check_ray_group_against_node(IVP_OV_Node*, IVP_OV_Tree_Manager*)
00173bd0 t IVP_Ray_Solver_Group::check_ray_group_against_object(IVP_Real_Object*)
00174060 t IVP_Ray_Solver_Group::check_ray_group_against_all_objects_in_sim(IVP_Environment const*)
00174090 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
00174090 t IVP_Ray_Solver_Group::IVP_Ray_Solver_Group(int, IVP_Ray_Solver**)
0019c8f0 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
0019c8f0 t IVP_Real_Object_Fast::IVP_Real_Object_Fast(IVP_Cluster*, IVP_Template_Object const*)
0019c680 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
0019c600 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
0019c600 t IVP_Real_Object_Fast::~IVP_Real_Object_Fast()
00180540 t IVP_Template_Phantom::IVP_Template_Phantom()
00180540 t IVP_Template_Phantom::IVP_Template_Phantom()
0013aab0 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0013aa00 t IVP_Template_Polygon::IVP_Template_Polygon()
0013aab0 t IVP_Template_Polygon::IVP_Template_Polygon(int, int, int)
0013aa00 t IVP_Template_Polygon::IVP_Template_Polygon()
0013aba0 t IVP_Template_Polygon::~IVP_Template_Polygon()
0013aba0 t IVP_Template_Polygon::~IVP_Template_Polygon()
00174d80 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
00174d80 t IVP_Template_Rot_Mot::IVP_Template_Rot_Mot()
0013ac80 t IVP_Template_Surface::init_surface(int)
0013ab60 t IVP_Template_Surface::close_surface()
0013acc0 t IVP_Template_Surface::get_surface_index()
0013ac20 t IVP_Template_Surface::calc_surface_normal_template(int, int, int)
0013aa40 t IVP_Template_Surface::IVP_Template_Surface()
0013aa40 t IVP_Template_Surface::IVP_Template_Surface()
0013ace0 t IVP_Template_Surface::~IVP_Template_Surface()
0013ace0 t IVP_Template_Surface::~IVP_Template_Surface()
001a89c0 t IVP_U_BigVector_Base::increment_mem()
0019cbe0 t IVP_Universe_Manager::event_object_deleted(IVP_Real_Object*)
0019cbd0 t IVP_Universe_Manager::object_no_longer_needed(IVP_Real_Object*)
0019cbf0 t IVP_Universe_Manager::provide_universe_settings()
0019cbc0 t IVP_Universe_Manager::ensure_objects_in_environment(IVP_Real_Object*, IVP_U_Float_Point*, float)
0013b1a0 t IVV_Cluster_Min_Hash::remove_min()
0013b0e0 t IVV_Cluster_Min_Hash::change_value(void*, float)
0013ae50 t IVV_Cluster_Min_Hash::min_added_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0013aea0 t IVV_Cluster_Min_Hash::min_removed_at_index(IVV_Cluster_Min_Hash_Elem*, int)
0013af70 t IVV_Cluster_Min_Hash::add(void*, float)
0013b020 t IVV_Cluster_Min_Hash::remove(void*)
0013b120 t IVV_Cluster_Min_Hash::is_elem(void*)
0013ad50 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0013ad50 t IVV_Cluster_Min_Hash::IVV_Cluster_Min_Hash(int)
0013add0 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
0013add0 t IVV_Cluster_Min_Hash::~IVV_Cluster_Min_Hash()
000834e0 t NxPrismaticJointDesc::setToDefault()
00082af0 t NxPrismaticJointDesc::~NxPrismaticJointDesc()
000828d0 t NxPrismaticJointDesc::~NxPrismaticJointDesc()
000828d0 t NxPrismaticJointDesc::~NxPrismaticJointDesc()
00083790 t NxSphericalJointDesc::setToDefault()
00082a90 t NxSphericalJointDesc::~NxSphericalJointDesc()
00082900 t NxSphericalJointDesc::~NxSphericalJointDesc()
00082900 t NxSphericalJointDesc::~NxSphericalJointDesc()
0010c970 t SplitScreenConVarRef::Init(char const*, bool)
0010cb00 t SplitScreenConVarRef::SplitScreenConVarRef(IConVar*)
0010cad0 t SplitScreenConVarRef::SplitScreenConVarRef(char const*)
0010cac0 t SplitScreenConVarRef::SplitScreenConVarRef(char const*, bool)
0010cb00 t SplitScreenConVarRef::SplitScreenConVarRef(IConVar*)
0010cad0 t SplitScreenConVarRef::SplitScreenConVarRef(char const*)
0010cac0 t SplitScreenConVarRef::SplitScreenConVarRef(char const*, bool)
000f3a80 t vehicle_axleparams_t::GetBaseMap()
00260a08 d vehicle_axleparams_t::m_DataMap
000f37a0 t vehicle_bodyparams_t::GetBaseMap()
00260a50 d vehicle_bodyparams_t::m_DataMap
000e3580 t CPhysicsCollisionData::GetContactPoint(Vector&)
000e35d0 t CPhysicsCollisionData::GetContactSpeed(Vector&)
000e3550 t CPhysicsCollisionData::GetSurfaceNormal(Vector&)
001153c0 t CUtlCStringConversion::FindConversion(char const*, int*)
00115600 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
00115600 t CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
000dee80 t CVPhysicsDebugOverlay::AddBoxOverlay(Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
000deea0 t CVPhysicsDebugOverlay::AddLineOverlay(Vector const&, Vector const&, int, int, int, bool, float)
000deeb0 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, float, char const*, ...)
000deec0 t CVPhysicsDebugOverlay::AddTextOverlay(Vector const&, int, float, char const*, ...)
000deef0 t CVPhysicsDebugOverlay::AddTextOverlayRGB(Vector const&, int, float, float, float, float, float, char const*, ...)
000deee0 t CVPhysicsDebugOverlay::AddSweptBoxOverlay(Vector const&, Vector const&, Vector const&, Vector const&, QAngle const&, int, int, int, int, float)
000dee90 t CVPhysicsDebugOverlay::AddTriangleOverlay(Vector const&, Vector const&, Vector const&, int, int, int, int, bool, float)
000dee70 t CVPhysicsDebugOverlay::AddEntityTextOverlay(int, int, float, int, int, int, int, char const*, ...)
000deed0 t CVPhysicsDebugOverlay::AddScreenTextOverlay(float, float, float, int, int, int, int, char const*)
001050a0 t CVPhysicsPackedParser::ParseFluid(fluid_t*, IVPhysicsKeyHandler*)
00105160 t CVPhysicsPackedParser::ParseSolid(solid_t*, IVPhysicsKeyHandler*)
00104650 t CVPhysicsPackedParser::ParseCustom(void*, IVPhysicsKeyHandler*)
00104c70 t CVPhysicsPackedParser::ParseFields(unsigned char*, parsefield_t*, int, IVPhysicsKeyHandler*)
001043d0 t CVPhysicsPackedParser::ParseVehicle(vehicleparams_t*, IVPhysicsKeyHandler*)
00104ae0 t CVPhysicsPackedParser::ParseSurfaceTable(int*, IVPhysicsKeyHandler*)
001044d0 t CVPhysicsPackedParser::GetCurrentBlockName()
00104f50 t CVPhysicsPackedParser::ParseCollisionRules(ragdollcollisionrules_t*, IVPhysicsKeyHandler*)
00104fb0 t CVPhysicsPackedParser::ParseRagdollConstraint(constraint_ragdollparams_t*, IVPhysicsKeyHandler*)
00104ee0 t CVPhysicsPackedParser::ParseRagdollAnimatedFriction(ragdollanimatedfriction_t*, IVPhysicsKeyHandler*)
001043b0 t CVPhysicsPackedParser::Finished()
001045e0 t CVPhysicsPackedParser::NextBlock()
00104640 t CVPhysicsPackedParser::SkipBlock()
00104c00 t CVPhysicsPackedParser::CVPhysicsPackedParser(char const*)
00104c00 t CVPhysicsPackedParser::CVPhysicsPackedParser(char const*)
00108680 t CVPhysicsPackedParser::~CVPhysicsPackedParser()
00108670 t CVPhysicsPackedParser::~CVPhysicsPackedParser()
00108670 t CVPhysicsPackedParser::~CVPhysicsPackedParser()
0012be60 t hk_Ragdoll_Constraint::init_constraint(void const*)
0012d3f0 t hk_Ragdoll_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
0012c300 t hk_Ragdoll_Constraint::update_friction(float)
0012c250 t hk_Ragdoll_Constraint::update_transforms(hk_Transform const&, hk_Transform const&)
0012c550 t hk_Ragdoll_Constraint::apply_angular_part(hk_PSI_Info&, hk_Ragdoll_Constraint_Work&)
0012d800 t hk_Ragdoll_Constraint::apply_effector_PSI(hk_PSI_Info&)
0012d850 t hk_Ragdoll_Constraint::get_constraint_dof()
0012be90 t hk_Ragdoll_Constraint::write_to_blueprint(hk_Ragdoll_Constraint_BP*)
0012d840 t hk_Ragdoll_Constraint::get_constraint_type()
0012ba90 t hk_Ragdoll_Constraint::get_vmq_storage_size()
0012bb00 t hk_Ragdoll_Constraint::init_ragdoll_constraint(hk_Ragdoll_Constraint_BP const*, hk_Local_Constraint_System*)
0012d8b0 t hk_Ragdoll_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
0012c360 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0012c460 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0012c360 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Environment*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0012c460 t hk_Ragdoll_Constraint::hk_Ragdoll_Constraint(hk_Local_Constraint_System*, hk_Ragdoll_Constraint_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
0012d880 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0012d860 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
0012d860 t hk_Ragdoll_Constraint::~hk_Ragdoll_Constraint()
001b98a0 t IVP_3D_Solver_KK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001b9a90 t IVP_3D_Solver_PF_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001b9700 t IVP_3D_Solver_PK_COLL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001a69b0 t IVP_Active_Value_Hash::object_to_index(IVP_U_Active_Value*)
001a88a0 t IVP_Active_Value_Hash::add_active_value(IVP_U_Active_Value*)
001a8800 t IVP_Active_Value_Hash::find_active_value(IVP_U_Active_Value*)
001a8840 t IVP_Active_Value_Hash::remove_active_value(IVP_U_Active_Value*)
001a87d0 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
001a87d0 t IVP_Active_Value_Hash::IVP_Active_Value_Hash(int)
001a6930 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
001a68c0 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
001a68c0 t IVP_Active_Value_Hash::~IVP_Active_Value_Hash()
00175400 t IVP_Anchor_Check_Dist::init_anchor_check_dist(IVP_Real_Object*, IVP_U_Point*, IVP_Actuator_Check_Dist*)
00175730 t IVP_Anchor_Check_Dist::hull_limit_exceeded_event(IVP_Hull_Manager*, float)
00176f10 t IVP_Anchor_Check_Dist::hull_manager_is_going_to_be_deleted_event(IVP_Hull_Manager*)
001770a0 t IVP_Anchor_Check_Dist::get_type()
00177190 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
00177190 t IVP_Anchor_Check_Dist::IVP_Anchor_Check_Dist()
001743f0 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
001743c0 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
001743c0 t IVP_Anchor_Check_Dist::~IVP_Anchor_Check_Dist()
000e1da0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_added(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
000e1d60 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::element_removed(IVP_U_Set_Active<IVP_Core>*, IVP_Core*)
000e1c20 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::pset_is_going_to_be_deleted(IVP_U_Set_Active<IVP_Core>*)
000e2080 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
000e1cd0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
000e1cd0 t IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>::~IVP_Attacher_To_Cores()
001a4b60 t IVP_Cache_Ledge_Point::get_object_cache()
001a4b90 t IVP_Cache_Ledge_Point::remove_reference()
001a4b50 t IVP_Cache_Ledge_Point::get_compact_ledge()
001a4d20 t IVP_Cache_Ledge_Point::init_cache_ledge_point(IVP_Real_Object*, IVP_Compact_Ledge const*)
001a4b70 t IVP_Cache_Ledge_Point::get_core()
001a4c90 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
001a4ba0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
001a4c90 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point(IVP_Real_Object*, IVP_Compact_Ledge const*)
001a4ba0 t IVP_Cache_Ledge_Point::IVP_Cache_Ledge_Point()
00151420 t IVP_Compact_Recursive::add_compact_ledge(IVP_Compact_Ledge const*)
001514d0 t IVP_Compact_Recursive::build_convex_hull()
001514b0 t IVP_Compact_Recursive::add_compact_surface(IVP_Compact_Surface const*)
001516f0 t IVP_Compact_Recursive::set_rekursive_convex_hull()
00151460 t IVP_Compact_Recursive::add_compact_ledge_treenode(IVP_Compact_Ledgetree_Node const*)
00151b00 t IVP_Compact_Recursive::compile()
001513b0 t IVP_Compact_Recursive::IVP_Compact_Recursive()
001513b0 t IVP_Compact_Recursive::IVP_Compact_Recursive()
001513e0 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
001513e0 t IVP_Compact_Recursive::~IVP_Compact_Recursive()
0018a980 t IVP_Contact_Point_API::get_vert_force(IVP_Contact_Point*)
0018a960 t IVP_Contact_Point_API::get_eliminated_energy(IVP_Contact_Point*)
0018a990 t IVP_Contact_Point_API::get_surface_normal_ws(IVP_Contact_Point*, IVP_U_Float_Point*)
0018a970 t IVP_Contact_Point_API::reset_eliminated_energy(IVP_Contact_Point*)
001c8920 t IVP_Controller_Motion::set_max_torque(IVP_U_Float_Point const*)
001c8e40 t IVP_Controller_Motion::set_damp_factor(float)
001c8e30 t IVP_Controller_Motion::set_force_factor(float)
001c8e50 t IVP_Controller_Motion::set_torque_factor(float)
001c8970 t IVP_Controller_Motion::set_target_position_ws(IVP_U_Point const*)
001c8da0 t IVP_Controller_Motion::get_controller_priority()
001c8e60 t IVP_Controller_Motion::set_angular_damp_factor(float)
001c7d60 t IVP_Controller_Motion::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001c8950 t IVP_Controller_Motion::set_max_translation_force(IVP_U_Float_Point const*)
001c8ab0 t IVP_Controller_Motion::set_target_q_world_f_core(IVP_U_Quat const*)
001c89f0 t IVP_Controller_Motion::set_target_object_position_ws(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*)
001c7d20 t IVP_Controller_Motion::core_is_going_to_be_deleted_event(IVP_Core*)
001c8860 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
001c8860 t IVP_Controller_Motion::IVP_Controller_Motion(IVP_Real_Object*, IVP_Template_Controller_Motion const*)
001c8170 t IVP_Controller_Motion::~IVP_Controller_Motion()
001c80e0 t IVP_Controller_Motion::~IVP_Controller_Motion()
001c80e0 t IVP_Controller_Motion::~IVP_Controller_Motion()
00185c90 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
00185c90 t IVP_Draw_Vector_Debug::IVP_Draw_Vector_Debug()
00185cf0 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
00185cf0 t IVP_Draw_Vector_Debug::~IVP_Draw_Vector_Debug()
00193800 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
00193800 t IVP_Hull_Manager_Base::IVP_Hull_Manager_Base()
00193850 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
00193850 t IVP_Hull_Manager_Base::~IVP_Hull_Manager_Base()
001b9100 t IVP_Mindist_Recursive::is_recursive()
001bec10 t IVP_Mindist_Recursive::delete_all_children()
001bec00 t IVP_Mindist_Recursive::mindist_rescue_push()
001beef0 t IVP_Mindist_Recursive::recheck_recursive_childs(float)
001bf610 t IVP_Mindist_Recursive::get_spawned_mindist_count()
001bf020 t IVP_Mindist_Recursive::exact_mindist_went_invalid(IVP_Mindist_Manager*)
001bf420 t IVP_Mindist_Recursive::invalid_mindist_went_exact()
001bf5e0 t IVP_Mindist_Recursive::change_spawned_mindist_count(int)
001bf470 t IVP_Mindist_Recursive::rec_hull_limit_exceeded_event()
001bee60 t IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
001bf180 t IVP_Mindist_Recursive::do_impact()
001becc0 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
001becc0 t IVP_Mindist_Recursive::IVP_Mindist_Recursive(IVP_Environment*, IVP_Collision_Delegator*)
001bee30 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
001bed40 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
001bed40 t IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
001a0e40 t IVP_Sim_Units_Manager::reset_time(IVP_Time)
001a0290 t IVP_Sim_Units_Manager::add_unit_to_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
001a02f0 t IVP_Sim_Units_Manager::rem_unit_from_slot(IVP_Simulation_Unit*, IVP_Simulation_Unit**)
001a0d70 t IVP_Sim_Units_Manager::simulate_sim_units_psi(IVP_Environment*, IVP_U_Vector<IVP_Core>*)
001a02b0 t IVP_Sim_Units_Manager::add_sim_unit_to_manager(IVP_Simulation_Unit*)
001a0320 t IVP_Sim_Units_Manager::rem_sim_unit_from_manager(IVP_Simulation_Unit*)
001a0250 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
001a0250 t IVP_Sim_Units_Manager::IVP_Sim_Units_Manager(IVP_Environment*)
0019ca20 t IVP_Statistic_Manager::clear_statistic()
0019c9b0 t IVP_Statistic_Manager::output_statistic()
0019ca90 t IVP_Statistic_Manager::IVP_Statistic_Manager()
0019ca90 t IVP_Statistic_Manager::IVP_Statistic_Manager()
0017cac0 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
0017cac0 t IVP_Template_Buoyancy::IVP_Template_Buoyancy()
00185160 t IVP_Vector_of_Objects::reset()
00185140 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
00185140 t IVP_Vector_of_Objects::IVP_Vector_of_Objects()
00065350 t NxForceFieldShapeDesc::setToDefault()
00065620 t NxForceFieldShapeDesc::~NxForceFieldShapeDesc()
00065340 t NxForceFieldShapeDesc::~NxForceFieldShapeDesc()
00065340 t NxForceFieldShapeDesc::~NxForceFieldShapeDesc()
000f3870 t vehicle_wheelparams_t::GetBaseMap()
00260a38 d vehicle_wheelparams_t::m_DataMap
0011a0f0 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
0011a0f0 t CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
000d41e0 t compactsurfaceheader_t::GetBaseMap()
0025e560 d compactsurfaceheader_t::m_DataMap
001d8750 t CPolyhedron_AllocByNew::Release()
001d87d0 t CPolyhedron_AllocByNew::Allocate(unsigned short, unsigned short, unsigned short, unsigned short)
001db050 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
001db000 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
001db000 t CPolyhedron_AllocByNew::~CPolyhedron_AllocByNew()
001db010 t CPolyhedron_TempMemory::Release()
001db030 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
001db020 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
001db020 t CPolyhedron_TempMemory::~CPolyhedron_TempMemory()
000e34c0 t IPhysicsCollisionEvent::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
000e34d0 t IPhysicsCollisionEvent::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
000defd0 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
000dec40 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
000dec40 t IPhysicsObjectPairHash::~IPhysicsObjectPairHash()
00177130 t IVP_Actuator_Two_Point::get_actuator_anchor(int)
00175460 t IVP_Actuator_Two_Point::ensure_actuator_in_simulation()
00176050 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
00176050 t IVP_Actuator_Two_Point::IVP_Actuator_Two_Point(IVP_Environment*, IVP_Template_Two_Point*, IVP_ACTUATOR_TYPE)
00176030 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
00175b50 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
00175b50 t IVP_Actuator_Two_Point::~IVP_Actuator_Two_Point()
001a39e0 t IVP_BetterDebugmanager::output_function(IVP_DEBUG_CLASS, char const*)
001a3aa0 t IVP_BetterDebugmanager::is_debug_enabled(IVP_DEBUG_CLASS)
001a3a60 t IVP_BetterDebugmanager::enable_debug_output(IVP_DEBUG_CLASS)
001a3a80 t IVP_BetterDebugmanager::disable_debug_output(IVP_DEBUG_CLASS)
001a3ad0 t IVP_BetterDebugmanager::dprint(IVP_DEBUG_CLASS, char const*, ...)
001a3b20 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
001a3b20 t IVP_BetterDebugmanager::IVP_BetterDebugmanager()
001a39c0 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
001a39b0 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
001a39b0 t IVP_BetterDebugmanager::~IVP_BetterDebugmanager()
00170730 t IVP_Compact_Poly_Point::set_client_data(void*)
00170710 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
00170710 t IVP_Compact_Poly_Point::IVP_Compact_Poly_Point(IVP_U_Point*)
0019feb0 t IVP_Controller_Manager::add_controller_to_core(IVP_Controller_Independent*, IVP_Core*)
0019fa90 t IVP_Controller_Manager::ensure_core_in_simulation(IVP_Core*)
0019fce0 t IVP_Controller_Manager::remove_controller_from_core(IVP_Controller_Independent*, IVP_Core*)
001a0590 t IVP_Controller_Manager::ensure_controller_in_simulation(IVP_Controller_Dependent*)
001a0410 t IVP_Controller_Manager::announce_controller_to_environment(IVP_Controller_Dependent*)
001a05f0 t IVP_Controller_Manager::remove_controller_from_environment(IVP_Controller_Dependent*, IVP_BOOL)
00180690 t IVP_Controller_Phantom::add_sleeping_object(IVP_Real_Object*)
00181560 t IVP_Controller_Phantom::event_object_frozen(IVP_Event_Object*)
00180c60 t IVP_Controller_Phantom::mindist_left_volume(IVP_Mindist*)
001805d0 t IVP_Controller_Phantom::add_listener_phantom(IVP_Listener_Phantom*)
00181550 t IVP_Controller_Phantom::event_object_created(IVP_Event_Object*)
001804d0 t IVP_Controller_Phantom::event_object_deleted(IVP_Event_Object*)
001808b0 t IVP_Controller_Phantom::event_object_revived(IVP_Event_Object*)
00180860 t IVP_Controller_Phantom::fire_event_core_left(IVP_Core*)
00181b00 t IVP_Controller_Phantom::get_intruding_mindists()
00180950 t IVP_Controller_Phantom::mindist_entered_volume(IVP_Mindist*)
001806f0 t IVP_Controller_Phantom::remove_sleeping_object(IVP_Real_Object*)
00180810 t IVP_Controller_Phantom::fire_event_core_entered(IVP_Core*)
00180610 t IVP_Controller_Phantom::remove_listener_phantom(IVP_Listener_Phantom*)
00180750 t IVP_Controller_Phantom::wake_all_sleeping_objects()
00180f40 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
00180f40 t IVP_Controller_Phantom::IVP_Controller_Phantom(IVP_Real_Object*, IVP_Template_Phantom const*)
00181530 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
00181270 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
00181270 t IVP_Controller_Phantom::~IVP_Controller_Phantom()
0018c6f0 t IVP_Friction_Core_Pair::debug_printf_pair()
0018b120 t IVP_Friction_Core_Pair::number_of_pair_dists()
0018c4d0 t IVP_Friction_Core_Pair::set_friction_vectors(IVP_U_Float_Point*)
0018b130 t IVP_Friction_Core_Pair::add_fr_dist_obj_pairs(IVP_Contact_Point*)
0018b170 t IVP_Friction_Core_Pair::del_fr_dist_obj_pairs(IVP_Contact_Point*)
0018c230 t IVP_Friction_Core_Pair::destroy_mutual_energy(float)
0018c5b0 t IVP_Friction_Core_Pair::get_average_friction_vector(IVP_U_Float_Point*)
0018c730 t IVP_Friction_Core_Pair::debug_read_vector_after_ease()
0018c700 t IVP_Friction_Core_Pair::debug_store_vector_before_ease()
0018ba50 t IVP_Friction_Core_Pair::check_all_fr_mindists_to_be_valid(IVP_Friction_System*)
0018c2c0 t IVP_Friction_Core_Pair::remove_energy_gained_by_real_friction()
0018c490 t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
0018c490 t IVP_Friction_Core_Pair::IVP_Friction_Core_Pair()
0018c450 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
0018c450 t IVP_Friction_Core_Pair::~IVP_Friction_Core_Pair()
0019cb70 t IVP_Listener_Collision::event_pre_collision(IVP_Event_Collision*)
0019cb80 t IVP_Listener_Collision::event_post_collision(IVP_Event_Collision*)
0019cba0 t IVP_Listener_Collision::event_friction_created(IVP_Event_Friction*)
0019cbb0 t IVP_Listener_Collision::event_friction_deleted(IVP_Event_Friction*)
0019edb0 t IVP_Listener_Collision::event_friction_pair_created(IVP_Friction_Core_Pair*)
0019edc0 t IVP_Listener_Collision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
0019cb90 t IVP_Listener_Collision::event_collision_object_deleted(IVP_Real_Object*)
0019ee00 t IVP_Listener_Collision::~IVP_Listener_Collision()
0019edd0 t IVP_Listener_Collision::~IVP_Listener_Collision()
0019edd0 t IVP_Listener_Collision::~IVP_Listener_Collision()
001a5660 t IVP_PerformanceCounter::IVP_PerformanceCounter()
001a5660 t IVP_PerformanceCounter::IVP_PerformanceCounter()
001a5640 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
001a5630 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
001a5630 t IVP_PerformanceCounter::~IVP_PerformanceCounter()
00156d10 t IVP_Rot_Inertia_Solver::find_center_given_xyz(IVP_U_BigVector<IVP_Compact_Ledge>*, int, int, int, IVP_U_Matrix const*, float*, float*, float*)
00156e40 t IVP_Rot_Inertia_Solver::calc_mass_center_and_rotation_inertia(IVP_Compact_Surface const*, IVP_U_Point*, IVP_U_Point*)
00174c50 t IVP_Template_Two_Point::IVP_Template_Two_Point()
00174c50 t IVP_Template_Two_Point::IVP_Template_Two_Point()
00083460 t NxCylindricalJointDesc::setToDefault()
00082ab0 t NxCylindricalJointDesc::~NxCylindricalJointDesc()
000828f0 t NxCylindricalJointDesc::~NxCylindricalJointDesc()
000828f0 t NxCylindricalJointDesc::~NxCylindricalJointDesc()
00082f70 t NxHeightFieldShapeDesc::setToDefault()
00082be0 t NxHeightFieldShapeDesc::~NxHeightFieldShapeDesc()
000829a0 t NxHeightFieldShapeDesc::~NxHeightFieldShapeDesc()
000829a0 t NxHeightFieldShapeDesc::~NxHeightFieldShapeDesc()
00083560 t NxPointOnLineJointDesc::setToDefault()
00082a70 t NxPointOnLineJointDesc::~NxPointOnLineJointDesc()
00082910 t NxPointOnLineJointDesc::~NxPointOnLineJointDesc()
00082910 t NxPointOnLineJointDesc::~NxPointOnLineJointDesc()
000f3c20 t vehicle_engineparams_t::GetBaseMap()
002609d8 d vehicle_engineparams_t::m_DataMap
000e3650 t CEmptyCollisionListener::StartTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
000e3620 t CEmptyCollisionListener::PreCollision(vcollisionevent_t*)
000e3680 t CEmptyCollisionListener::FluidEndTouch(IPhysicsObject*, IPhysicsFluidController*)
000e3630 t CEmptyCollisionListener::PostCollision(vcollisionevent_t*)
000e3670 t CEmptyCollisionListener::FluidStartTouch(IPhysicsObject*, IPhysicsFluidController*)
000e3690 t CEmptyCollisionListener::ObjectEnterTrigger(IPhysicsObject*, IPhysicsObject*)
000e36a0 t CEmptyCollisionListener::ObjectLeaveTrigger(IPhysicsObject*, IPhysicsObject*)
000e36b0 t CEmptyCollisionListener::PostSimulationFrame()
000e3660 t CEmptyCollisionListener::EndTouch(IPhysicsObject*, IPhysicsObject*, IPhysicsCollisionData*)
000e3640 t CEmptyCollisionListener::Friction(IPhysicsObject*, float, int, int, IPhysicsCollisionData*)
000f72b0 t CPhysCollideVirtualMesh::BuildLedges()
000f80f0 t CPhysCollideVirtualMesh::SetMassCenter(Vector const&)
000f78c0 t CPhysCollideVirtualMesh::BuildBoundingLedge()
000f7770 t CPhysCollideVirtualMesh::CreateMeshBoundingHull(virtualmeshlist_t const&)
000f8650 t CPhysCollideVirtualMesh::GetAllLedgesWithinRadius(IVP_U_Point const*, float, IVP_U_BigVector<IVP_Compact_Ledge>*, IVP_Compact_Ledge const*)
000f74c0 t CPhysCollideVirtualMesh::CreateBoundingSurfaceFromRange(virtualmeshlist_t const&, int, int)
000f73d0 t CPhysCollideVirtualMesh::AddRef()
000f71c0 t CPhysCollideVirtualMesh::Release()
000f6db0 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
000f6d60 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
000f6d60 t CPhysCollideVirtualMesh::~CPhysCollideVirtualMesh()
000d6740 t CPhysicsConstraintGroup::GetErrorParams(constraint_groupparams_t*)
000d64e0 t CPhysicsConstraintGroup::IsInErrorState()
000d6520 t CPhysicsConstraintGroup::SetErrorParams(constraint_groupparams_t const&)
000d6500 t CPhysicsConstraintGroup::ClearErrorState()
000d6700 t CPhysicsConstraintGroup::SolvePenetration(IPhysicsObject*, IPhysicsObject*)
000d6650 t CPhysicsConstraintGroup::Activate()
000d70c0 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
000d70c0 t CPhysicsConstraintGroup::CPhysicsConstraintGroup(IVP_Environment*, constraint_groupparams_t const&)
000d65b0 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
000d6550 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
000d6550 t CPhysicsConstraintGroup::~CPhysicsConstraintGroup()
000e1610 t CPhysicsFluidController::SetGameData(void*)
000e18a0 t CPhysicsFluidController::GetIVPObject()
000e17f0 t CPhysicsFluidController::WakeAllSleepingObjects()
000e1870 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
000e1870 t CPhysicsFluidController::CPhysicsFluidController(CBuoyancyAttacher*, IVP_Liquid_Surface_Descriptor*, CPhysicsObject*, int)
000e17b0 t CPhysicsFluidController::~CPhysicsFluidController()
000e15d0 t CPhysicsFluidController::~CPhysicsFluidController()
000e15d0 t CPhysicsFluidController::~CPhysicsFluidController()
000ce880 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
000ce7a0 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
000ce7a0 t CSplitScreenAddedConVar::~CSplitScreenAddedConVar()
00102540 t CTraceSolverSweptObject::SweepLedgeTree_r(IVP_Compact_Ledgetree_Node const*)
00103070 t CTraceSolverSweptObject::DoSweep()
000fb920 t CTraceSolverSweptObject::InitOSRay()
000fb860 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, float, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
000fb860 t CTraceSolverSweptObject::CTraceSolverSweptObject(CGameTrace*, ITraceObject*, float, CTraceRay*, CTraceIVP*, Vector const&, unsigned int, IConvexInfo*)
00119710 t CUtlFilenameSymbolTable::SpewStrings()
00119330 t CUtlFilenameSymbolTable::FindFileName(char const*)
00119750 t CUtlFilenameSymbolTable::SaveToBuffer(CUtlBuffer&)
00119450 t CUtlFilenameSymbolTable::FindOrAddFileName(char const*)
00119790 t CUtlFilenameSymbolTable::RestoreFromBuffer(CUtlBuffer&)
00119630 t CUtlFilenameSymbolTable::String(void* const&, char*, int)
00119700 t CUtlFilenameSymbolTable::RemoveAll()
00108fb0 t CVPhysPtrSaveRestoreOps::PreRestore()
00108fc0 t CVPhysPtrSaveRestoreOps::PostRestore()
00108c70 t CVPhysPtrSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00108d30 t CVPhysPtrSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
00108fa0 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
00108fa0 t CVPhysPtrSaveRestoreOps::CVPhysPtrSaveRestoreOps()
00121a40 t hk_Breakable_Constraint::init_constraint(void const*)
00121d10 t hk_Breakable_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00121cd0 t hk_Breakable_Constraint::FireEventIfBroken()
001222e0 t hk_Breakable_Constraint::apply_effector_PSI(hk_PSI_Info&)
00122310 t hk_Breakable_Constraint::get_constraint_dof()
00121ca0 t hk_Breakable_Constraint::write_to_blueprint(hk_Breakable_Constraint_BP*)
001222f0 t hk_Breakable_Constraint::get_constraint_type()
00121a70 t hk_Breakable_Constraint::get_vmq_storage_size()
00121c70 t hk_Breakable_Constraint::init_breakable_constraint(hk_Breakable_Constraint_BP const*)
001223a0 t hk_Breakable_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00121b70 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
00121bf0 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
00121b70 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Environment*, hk_Breakable_Constraint_BP const*)
00121bf0 t hk_Breakable_Constraint::hk_Breakable_Constraint(hk_Local_Constraint_System*, hk_Breakable_Constraint_BP const*)
00121ae0 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00121a90 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
00121a90 t hk_Breakable_Constraint::~hk_Breakable_Constraint()
001286c0 t hk_Prismatic_Constraint::set_limits(float, float)
00128730 t hk_Prismatic_Constraint::set_friction(float)
00128440 t hk_Prismatic_Constraint::init_constraint(void const*)
00127130 t hk_Prismatic_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00128640 t hk_Prismatic_Constraint::apply_effector_PSI(hk_PSI_Info&)
001287a0 t hk_Prismatic_Constraint::get_constraint_dof()
00127f60 t hk_Prismatic_Constraint::reset_linear_limit()
00128470 t hk_Prismatic_Constraint::write_to_blueprint(hk_Prismatic_BP*)
00128790 t hk_Prismatic_Constraint::get_constraint_type()
00127120 t hk_Prismatic_Constraint::get_vmq_storage_size()
00128290 t hk_Prismatic_Constraint::init_prismatic_constraint(hk_Prismatic_BP const*, hk_Local_Constraint_System*)
00128800 t hk_Prismatic_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00128760 t hk_Prismatic_Constraint::set_motor(float, float)
001284f0 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
001285a0 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
001284f0 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Environment*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
001285a0 t hk_Prismatic_Constraint::hk_Prismatic_Constraint(hk_Local_Constraint_System*, hk_Prismatic_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
001287d0 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
001287b0 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
001287b0 t hk_Prismatic_Constraint::~hk_Prismatic_Constraint()
00120e20 t hk_Rigid_Body_Binary_EF::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
00131d40 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
00131d40 t hk_Rigid_Body_Binary_EF::hk_Rigid_Body_Binary_EF(hk_Environment*, hk_Rigid_Body*, hk_Rigid_Body*, IVP_CONTROLLER_PRIORITY)
000dbb90 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
000dbb00 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
000dbb00 t IPhysicsConstraintGroup::~IPhysicsConstraintGroup()
000e1cb0 t IPhysicsFluidController::~IPhysicsFluidController()
000e1c00 t IPhysicsFluidController::~IPhysicsFluidController()
000e1c00 t IPhysicsFluidController::~IPhysicsFluidController()
00175480 t IVP_Actuator_Check_Dist::fire_check_dist_event(IVP_BOOL)
00175520 t IVP_Actuator_Check_Dist::hull_limit_exceeded_event()
001754d0 t IVP_Actuator_Check_Dist::fire_check_dist_is_going_to_be_deleted_event()
00175710 t IVP_Actuator_Check_Dist::set_range(float)
00176f50 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
00176f50 t IVP_Actuator_Check_Dist::IVP_Actuator_Check_Dist(IVP_Environment*, IVP_Template_Check_Dist*)
00176e40 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
00176e40 t IVP_Actuator_Check_Dist::~IVP_Actuator_Check_Dist()
00177150 t IVP_Actuator_Four_Point::get_actuator_anchor(int)
00176820 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
00176820 t IVP_Actuator_Four_Point::IVP_Actuator_Four_Point(IVP_Environment*, IVP_Template_Four_Point*, IVP_ACTUATOR_TYPE)
00175b30 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
00175a50 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
00175a50 t IVP_Actuator_Four_Point::~IVP_Actuator_Four_Point()
00176e00 t IVP_Actuator_Stabilizer::set_stabi_constant(float)
001770b0 t IVP_Actuator_Stabilizer::get_controller_name()
00174410 t IVP_Actuator_Stabilizer::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00176db0 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
00176db0 t IVP_Actuator_Stabilizer::IVP_Actuator_Stabilizer(IVP_Environment*, IVP_Template_Stabilizer*)
00175b00 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
00175ae0 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
00175ae0 t IVP_Actuator_Stabilizer::~IVP_Actuator_Stabilizer()
00177ed0 t IVP_Actuator_Suspension::set_max_body_force(float)
00177f10 t IVP_Actuator_Suspension::get_controller_name()
001771e0 t IVP_Actuator_Suspension::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00177e90 t IVP_Actuator_Suspension::set_spring_damp_compression(float)
00177e30 t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
00177e30 t IVP_Actuator_Suspension::IVP_Actuator_Suspension(IVP_Environment*, IVP_Template_Suspension*)
001774c0 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
001774a0 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
001774a0 t IVP_Actuator_Suspension::~IVP_Actuator_Suspension()
001b5810 t IVP_Collision_Delegator::get_spawned_mindist_count()
001b5800 t IVP_Collision_Delegator::change_spawned_mindist_count(int)
001b58a0 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
001b57f0 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
001b57f0 t IVP_Collision_Delegator::~IVP_Collision_Delegator()
0017b6e0 t IVP_Controller_Buoyancy::apply_dampening(IVP_Real_Object*, float, float, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
0017c960 t IVP_Controller_Buoyancy::get_controller_name()
0017b5f0 t IVP_Controller_Buoyancy::use_buoyancy_solver(IVP_Buoyancy_Input const*, IVP_Template_Buoyancy const*, IVP_Buoyancy_Output*, IVP_U_Float_Point const*, int)
0017baa0 t IVP_Controller_Buoyancy::apply_buoyancy_impulse(IVP_Real_Object*, IVP_Template_Buoyancy*, float, float, IVP_U_Float_Point*)
0017c950 t IVP_Controller_Buoyancy::get_controller_priority()
0017bc80 t IVP_Controller_Buoyancy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0017b4d0 t IVP_Controller_Buoyancy::calculate_future_extrapolation(IVP_Controller_Buoyancy::Attacher_Interpolator::Last_IO const*, IVP_MI_Vector const*, IVP_MI_Vector const*, float, IVP_Time, IVP_MI_Vector*, IVP_MI_Vector*)
0017c940 t IVP_Controller_Buoyancy::get_minimum_simulation_frequency()
0017c920 t IVP_Controller_Buoyancy::core_is_going_to_be_deleted_event(IVP_Core*)
0017c450 t IVP_Controller_Buoyancy::provide_new_input_solution_combination(IVP_Controller_Buoyancy::Attacher_Interpolator*, IVP_Template_Buoyancy*, IVP_MI_Vector const*, IVP_MI_Vector const*, float, IVP_Time)
0017c680 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
0017c680 t IVP_Controller_Buoyancy::IVP_Controller_Buoyancy(IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>*, IVP_Core*)
0017b450 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
0017b3e0 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
0017b3e0 t IVP_Controller_Buoyancy::~IVP_Controller_Buoyancy()
00187690 t IVP_Environment_Manager::create_environment(IVP_Application_Environment*, char const*, unsigned int)
00185a80 t IVP_Environment_Manager::get_environment_manager()
0026be98 b IVP_Environment_Manager::static_environment_manager
00185670 t IVP_Environment_Manager::IVP_Environment_Manager()
00185670 t IVP_Environment_Manager::IVP_Environment_Manager()
001854b0 t IVP_Environment_Manager::~IVP_Environment_Manager()
001854b0 t IVP_Environment_Manager::~IVP_Environment_Manager()
0018d070 t IVP_Friction_Sys_Energy::get_controller_name()
0018d060 t IVP_Friction_Sys_Energy::get_controller_priority()
0018c3a0 t IVP_Friction_Sys_Energy::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
00188500 t IVP_Friction_Sys_Energy::core_is_going_to_be_deleted_event(IVP_Core*)
0018d0f0 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
0018d080 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
0018d080 t IVP_Friction_Sys_Energy::~IVP_Friction_Sys_Energy()
0018d0a0 t IVP_Friction_Sys_Static::get_controller_name()
0018d090 t IVP_Friction_Sys_Static::get_controller_priority()
0018cc40 t IVP_Friction_Sys_Static::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0018cbc0 t IVP_Friction_Sys_Static::do_simulation_single_friction(IVP_Event_Sim*)
0018d0c0 t IVP_Friction_Sys_Static::get_minimum_simulation_frequency()
0018adf0 t IVP_Friction_Sys_Static::core_is_going_to_be_deleted_event(IVP_Core*)
0018d0d0 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
0018d0b0 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
0018d0b0 t IVP_Friction_Sys_Static::~IVP_Friction_Sys_Static()
001727e0 t IVP_Ray_Solver_Min_Hash::add_hit_object(IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, float, IVP_U_Point*)
001742c0 t IVP_Ray_Solver_Min_Hash::get_result_min_hash()
00174330 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
00174330 t IVP_Ray_Solver_Min_Hash::IVP_Ray_Solver_Min_Hash(IVP_Ray_Solver_Template const*)
00174280 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
00174240 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
00174240 t IVP_Ray_Solver_Min_Hash::~IVP_Ray_Solver_Min_Hash()
001c90e0 t IVP_SurfaceManager_Ball::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
001c9140 t IVP_SurfaceManager_Ball::get_all_ledges_within_radius(IVP_U_Point const*, float, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
001c9070 t IVP_SurfaceManager_Ball::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
001c9010 t IVP_SurfaceManager_Ball::get_type()
001c91c0 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
001c9020 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
001c9020 t IVP_SurfaceManager_Ball::~IVP_SurfaceManager_Ball()
001798b0 t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
001798b0 t IVP_Template_Car_System::IVP_Template_Car_System(int, int)
00174bf0 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
00174bf0 t IVP_Template_Check_Dist::IVP_Template_Check_Dist()
0017f8c0 t IVP_Template_Constraint::sort_coordinates(IVP_Template_Constraint const&)
001802b0 t IVP_Template_Constraint::fix_rotation_axis(IVP_COORDINATE_INDEX)
0017f790 t IVP_Template_Constraint::set_constraint_ws(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
001802d0 t IVP_Template_Constraint::free_rotation_axis(IVP_COORDINATE_INDEX)
0017f4a0 t IVP_Template_Constraint::set_constraint_Ros(IVP_Real_Object*, IVP_U_Point const*, IVP_U_Point const*, unsigned int, unsigned int, IVP_Real_Object*, IVP_U_Matrix const*)
001802f0 t IVP_Template_Constraint::limit_rotation_axis(IVP_COORDINATE_INDEX, float, float)
00180090 t IVP_Template_Constraint::set_attached_object(IVP_Real_Object*)
00180150 t IVP_Template_Constraint::fix_translation_axis(IVP_COORDINATE_INDEX)
001800b0 t IVP_Template_Constraint::set_fixing_point_Ros(IVP_U_Point const*)
00180080 t IVP_Template_Constraint::set_reference_object(IVP_Real_Object*)
00180170 t IVP_Template_Constraint::free_translation_axis(IVP_COORDINATE_INDEX)
00180220 t IVP_Template_Constraint::set_rotation_axes_Ros(IVP_U_Matrix3 const*)
00180190 t IVP_Template_Constraint::limit_translation_axis(IVP_COORDINATE_INDEX, float, float)
00180360 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
00180320 t IVP_Template_Constraint::set_max_rotation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
001800e0 t IVP_Template_Constraint::set_translation_axes_Ros(IVP_U_Matrix3 const*)
00180450 t IVP_Template_Constraint::set_constraint_is_relaxed()
00180200 t IVP_Template_Constraint::set_max_translation_impulse(IVP_COORDINATE_INDEX, IVP_CONSTRAINT_FORCE_EXCEED, float)
001801c0 t IVP_Template_Constraint::set_max_translation_impulse(IVP_CONSTRAINT_FORCE_EXCEED, float)
00180410 t IVP_Template_Constraint::set_attached_fixing_point_Aos(IVP_U_Point const*)
0017f8a0 t IVP_Template_Constraint::set_stiffness_for_limited_axis(float)
00180380 t IVP_Template_Constraint::set_attached_translation_axes_Aos(IVP_U_Matrix3 const*)
00180140 t IVP_Template_Constraint::set_translation_axes_as_object_space()
00180290 t IVP_Template_Constraint::set_rotation_axes_as_translation_axes()
0017f330 t IVP_Template_Constraint::IVP_Template_Constraint()
0017f330 t IVP_Template_Constraint::IVP_Template_Constraint()
00174df0 t IVP_Template_Four_Point::IVP_Template_Four_Point()
00174df0 t IVP_Template_Four_Point::IVP_Template_Four_Point()
00174e20 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
00174e20 t IVP_Template_Stabilizer::IVP_Template_Stabilizer()
001776c0 t IVP_Template_Suspension::IVP_Template_Suspension()
001776c0 t IVP_Template_Suspension::IVP_Template_Suspension()
001a71d0 t IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
001a6200 t IVP_U_Active_Test_Range::print()
001a8350 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a8350 t IVP_U_Active_Test_Range::IVP_U_Active_Test_Range(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, IVP_U_Active_Float*)
001a73c0 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
001a7350 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
001a7350 t IVP_U_Active_Test_Range::~IVP_U_Active_Test_Range()
001882a0 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
001882a0 t IVP_Vector_of_Cores_128::IVP_Vector_of_Cores_128()
00188280 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
00188280 t IVP_Vector_of_Hulls_128::IVP_Vector_of_Hulls_128()
001a5750 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
001a5750 t IVP_Vector_of_Ledges_16::IVP_Vector_of_Ledges_16()
000835e0 t NxPointInPlaneJointDesc::setToDefault()
00082a50 t NxPointInPlaneJointDesc::~NxPointInPlaneJointDesc()
00082920 t NxPointInPlaneJointDesc::~NxPointInPlaneJointDesc()
00082920 t NxPointInPlaneJointDesc::~NxPointInPlaneJointDesc()
00083030 t NxTriangleMeshShapeDesc::setToDefault()
00082bc0 t NxTriangleMeshShapeDesc::~NxTriangleMeshShapeDesc()
00082990 t NxTriangleMeshShapeDesc::~NxTriangleMeshShapeDesc()
00082990 t NxTriangleMeshShapeDesc::~NxTriangleMeshShapeDesc()
000e1e10 t CLiquidSurfaceDescriptor::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
000e1c90 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
000e1c10 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
000e1c10 t CLiquidSurfaceDescriptor::~CLiquidSurfaceDescriptor()
000ea510 t CPhysicsMotionController::GetObjects(IPhysicsObject**)
000e9fc0 t CPhysicsMotionController::RemoveCore(IVP_Core*)
000e9830 t CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
000ea580 t CPhysicsMotionController::WakeObjects()
000ea270 t CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
000ea620 t CPhysicsMotionController::ClearObjects()
000ea4f0 t CPhysicsMotionController::CountObjects()
000ea030 t CPhysicsMotionController::DetachObject(IPhysicsObject*)
000e9880 t CPhysicsMotionController::SetEventHandler(IMotionEvent*)
000ea330 t CPhysicsMotionController::WriteToTemplate(vphysics_save_motioncontroller_t&)
000e9f10 t CPhysicsMotionController::InitFromTemplate(vphysics_save_motioncontroller_t const&)
000ea4d0 t CPhysicsMotionController::get_controller_name()
000e9810 t CPhysicsMotionController::get_controller_priority()
000e9890 t CPhysicsMotionController::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000ea660 t CPhysicsMotionController::core_is_going_to_be_deleted_event(IVP_Core*)
000e9ec0 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
000e9ec0 t CPhysicsMotionController::CPhysicsMotionController(IMotionEvent*, CPhysicsEnvironment*)
000ea130 t CPhysicsMotionController::~CPhysicsMotionController()
000ea060 t CPhysicsMotionController::~CPhysicsMotionController()
000ea060 t CPhysicsMotionController::~CPhysicsMotionController()
000e26d0 t IPhysicsFrictionSnapshot::GetFrictionData(frictiondata_t&)
000e26e0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
000e26c0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
000e26c0 t IPhysicsFrictionSnapshot::~IPhysicsFrictionSnapshot()
000ea550 t IPhysicsMotionController::~IPhysicsMotionController()
000ea4c0 t IPhysicsMotionController::~IPhysicsMotionController()
000ea4c0 t IPhysicsMotionController::~IPhysicsMotionController()
000f2430 t IPhysicsPlayerController::~IPhysicsPlayerController()
000f2050 t IPhysicsPlayerController::~IPhysicsPlayerController()
000f2050 t IPhysicsPlayerController::~IPhysicsPlayerController()
000f2450 t IPhysicsShadowController::~IPhysicsShadowController()
000f2040 t IPhysicsShadowController::~IPhysicsShadowController()
000f2040 t IPhysicsShadowController::~IPhysicsShadowController()
001a4720 t IVP_Cache_Object_Manager::cache_object_at(int)
001a4660 t IVP_Cache_Object_Manager::get_cache_object(IVP_Real_Object*)
001a42f0 t IVP_Cache_Object_Manager::invalid_cache_object(IVP_Real_Object*)
001a4310 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
001a4310 t IVP_Cache_Object_Manager::IVP_Cache_Object_Manager(int)
001a4360 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
001a4360 t IVP_Cache_Object_Manager::~IVP_Cache_Object_Manager()
001c9ea0 t IVP_Calc_Next_PSI_Solver::set_transformation(IVP_Core*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL)
001c9460 t IVP_Calc_Next_PSI_Solver::calc_next_PSI_matrix(IVP_Core*, IVP_Event_Sim*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
001c92e0 t IVP_Calc_Next_PSI_Solver::calc_psi_rotation_axis(IVP_Core*, IVP_U_Quat const*)
001ca3a0 t IVP_Calc_Next_PSI_Solver::commit_one_hull_manager(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
001ca470 t IVP_Calc_Next_PSI_Solver::commit_all_hull_managers(IVP_Environment*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
001ca2a0 t IVP_Calc_Next_PSI_Solver::commit_all_calc_next_PSI_matrix(IVP_Environment*, IVP_U_Vector<IVP_Core>*, IVP_U_Vector<IVP_Hull_Manager_Base>*)
001c92a0 t IVP_Calc_Next_PSI_Solver::get_longest_time_step_dependent_on_rot(IVP_Core*)
00172500 t IVP_Compact_Ledge_Solver::calc_qlen_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
00170f00 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Surface const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00170e00 t IVP_Compact_Ledge_Solver::get_all_ledges(IVP_Compact_Ledgetree_Node const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
00170cd0 t IVP_Compact_Ledge_Solver::calc_bounding_box(IVP_Compact_Ledge const*, IVP_U_Point*, IVP_U_Point*)
00171670 t IVP_Compact_Ledge_Solver::calc_hesse_object(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Hesse*)
00170f20 t IVP_Compact_Ledge_Solver::calc_pos_other_space(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
001720b0 t IVP_Compact_Ledge_Solver::calc_qlen_PF_F_space(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, IVP_U_Point const*)
001722e0 t IVP_Compact_Ledge_Solver::calc_qlen_PK_K_space(IVP_U_Point const*, IVP_Compact_Ledge const*, IVP_Compact_Edge const*)
00172280 t IVP_Compact_Ledge_Solver::calc_qlen_PP_P_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
00172450 t IVP_Compact_Ledge_Solver::give_world_coords_AT(IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
00171bf0 t IVP_Compact_Ledge_Solver::calc_unscaled_KK_vals(IVP_KK_Input const&, IVP_Unscaled_KK_Result*)
001bd880 t IVP_Compact_Ledge_Solver::minimize_on_other_side(IVP_Compact_Edge const*, IVP_U_Point const*)
00171130 t IVP_Compact_Ledge_Solver::transform_pos_other_space(IVP_U_Float_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
00171040 t IVP_Compact_Ledge_Solver::transform_vec_other_space(IVP_U_Point const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*, IVP_U_Point*)
00170e60 t IVP_Compact_Ledge_Solver::calc_geom_center_and_radius(IVP_Compact_Ledge const*, IVP_U_Point*, float*)
00171790 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Ledge const*, IVP_U_Point const*, float*, float*)
00171930 t IVP_Compact_Ledge_Solver::calc_radius_to_given_center(IVP_Compact_Surface const*, IVP_U_Point const*, float*, float*)
00171240 t IVP_Compact_Ledge_Solver::calc_unscaled_s_val_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_S_Result*)
00171340 t IVP_Compact_Ledge_Solver::calc_unscaled_qr_vals_F_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Unscaled_QR_Result*)
00171ad0 t IVP_Compact_Ledge_Solver::quad_dist_edge_to_point_K_space(IVP_Compact_Ledge const*, IVP_Compact_Edge const*, IVP_U_Point const*)
001716d0 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Point*)
00171a10 t IVP_Compact_Ledge_Solver::calc_hesse_vec_object_not_normized(IVP_Compact_Edge const*, IVP_Compact_Ledge const*, IVP_U_Float_Point*)
000d1fd0 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
000d1fc0 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
000d1fc0 t IVP_Controller_Dependent::~IVP_Controller_Dependent()
001bb890 t IVP_Mindist_Event_Solver::next_event_BB(IVP_Mindist_Event_Solver*)
001bcf50 t IVP_Mindist_Event_Solver::next_event_B_POLY(IVP_Mindist_Event_Solver*)
001bb670 t IVP_Mindist_Event_Solver::calc_next_event_BB(IVP_Cache_Object*, IVP_Cache_Object*)
001ba220 t IVP_Mindist_Event_Solver::calc_next_event_BF(IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
001bc840 t IVP_Mindist_Event_Solver::calc_next_event_BK(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
001bb1a0 t IVP_Mindist_Event_Solver::calc_next_event_BP(IVP_Ball*, IVP_Compact_Edge const*, IVP_Cache_Object*, IVP_Cache_Ledge_Point*)
001ba430 t IVP_Mindist_Event_Solver::calc_next_event_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001b9ca0 t IVP_Mindist_Event_Solver::calc_next_event_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001bb9a0 t IVP_Mindist_Event_Solver::calc_next_event_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001bab80 t IVP_Mindist_Event_Solver::calc_next_event_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
0026e940 b IVP_Mindist_Event_Solver::mim_function_table
001b9400 t IVP_Mindist_Event_Solver::next_event_illegal(IVP_Mindist_Event_Solver*)
001bd180 t IVP_Mindist_Event_Solver::init_mim_function_table()
001bc530 t IVP_Mindist_Event_Solver::next_event_default_poly_poly(IVP_Mindist_Event_Solver*)
00154900 t IVP_Object_Polygon_Tetra::p_link_edge(IVP_Tri_Edge*, IVP_Tri_Edge*)
001548a0 t IVP_Object_Polygon_Tetra::hide_triangle(IVP_Triangle*)
00154390 t IVP_Object_Polygon_Tetra::rate_tri_edge(IVP_Tri_Edge*)
001542b0 t IVP_Object_Polygon_Tetra::free_triangles()
00154b90 t IVP_Object_Polygon_Tetra::make_triangles()
00155b60 t IVP_Object_Polygon_Tetra::pop_concav_edge(IVP_Tri_Edge*)
00154640 t IVP_Object_Polygon_Tetra::calc_concavities()
00156510 t IVP_Object_Polygon_Tetra::insert_pierce_info()
001543e0 t IVP_Object_Polygon_Tetra::add_edge_to_min_list(IVP_Tri_Edge*, P_HASH_CLASS, float)
00155360 t IVP_Object_Polygon_Tetra::calc_extrusion_point(IVP_Tri_Edge const*, IVP_U_Point*)
001551d0 t IVP_Object_Polygon_Tetra::link_triangle_couple(IVP_Triangle*, IVP_Tri_Edge*, IVP_Tri_Edge*, IVP_Tri_Edge*)
001555a0 t IVP_Object_Polygon_Tetra::pop_problematic_edge(IVP_Tri_Edge*)
00153d20 t IVP_Object_Polygon_Tetra::final_convexify_check()
00155b10 t IVP_Object_Polygon_Tetra::link_existing_pop_edge(IVP_Tri_Edge*)
00154a40 t IVP_Object_Polygon_Tetra::get_an_edge_with_points(IVP_Poly_Point*, IVP_Poly_Point*)
00155050 t IVP_Object_Polygon_Tetra::generate_double_triangle(IVP_Poly_Point*, IVP_Poly_Point*, IVP_Poly_Point*)
001544a0 t IVP_Object_Polygon_Tetra::move_edge_to_normal_hash(IVP_Tri_Edge*)
00154540 t IVP_Object_Polygon_Tetra::move_edge_to_epsilon_hash(IVP_Tri_Edge*)
001547d0 t IVP_Object_Polygon_Tetra::move_edge_to_problem_hash(IVP_Tri_Edge*)
00154430 t IVP_Object_Polygon_Tetra::remove_edge_from_min_list(IVP_Tri_Edge*)
001545e0 t IVP_Object_Polygon_Tetra::check_concavity_and_manage(IVP_Tri_Edge*, P_CONVEXIFY_STATE)
00155a80 t IVP_Object_Polygon_Tetra::record_intruding_convex_edges(IVP_Intrusion_Status*)
00153e70 t IVP_Object_Polygon_Tetra::check_konsistency_of_triangles()
00155180 t IVP_Object_Polygon_Tetra::make_double_triangle_permanent(IVP_Triangle*)
00154a80 t IVP_Object_Polygon_Tetra::add_edge_into_point_to_edge_hash(IVP_Tri_Edge*)
00154730 t IVP_Object_Polygon_Tetra::move_edge_to_convex_intrude_hash(IVP_Tri_Edge*)
00155fc0 t IVP_Object_Polygon_Tetra::convexify()
00153bc0 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
00153bc0 t IVP_Object_Polygon_Tetra::IVP_Object_Polygon_Tetra(IVP_Template_Polygon*)
00154340 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
00154340 t IVP_Object_Polygon_Tetra::~IVP_Object_Polygon_Tetra()
001a1560 t IVP_Solver_Core_Reaction::init_rot_ws(IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
001a0fb0 t IVP_Solver_Core_Reaction::init_trans_ws(IVP_U_Point const*, IVP_Core*, IVP_U_Point_4*, IVP_U_Point_4*, float)
001a2800 t IVP_Solver_Core_Reaction::invert_3x3_matrix()
001a2230 t IVP_Solver_Core_Reaction::exert_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001a1fd0 t IVP_Solver_Core_Reaction::exert_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001a1bf0 t IVP_Solver_Core_Reaction::exert_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001a2730 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim1(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001a25c0 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim2(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001a23b0 t IVP_Solver_Core_Reaction::exert_angular_impulse_dim3(IVP_Core*, IVP_Core*, IVP_U_Float_Point&)
001a1ac0 t IVP_Solver_Core_Reaction::init_reaction_solver_rotation_ws(IVP_Core*, IVP_Core*, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
001a1940 t IVP_Solver_Core_Reaction::init_reaction_solver_translation_ws(IVP_Core*, IVP_Core*, IVP_U_Point&, IVP_U_Float_Point*, IVP_U_Float_Point*, IVP_U_Float_Point*)
001a5870 t IVP_Template_Real_Object::IVP_Template_Real_Object()
001a5870 t IVP_Template_Real_Object::IVP_Template_Real_Object()
001a5940 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
001a5940 t IVP_Template_Real_Object::~IVP_Template_Real_Object()
001a5770 t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
001a5770 t IVP_Vector_of_Ledges_256::IVP_Vector_of_Ledges_256()
001b93c0 t IVP_Vector_of_Ledges_256::~IVP_Vector_of_Ledges_256()
001b93c0 t IVP_Vector_of_Ledges_256::~IVP_Vector_of_Ledges_256()
000653b0 t NxBoxForceFieldShapeDesc::setToDefault()
000655c0 t NxBoxForceFieldShapeDesc::~NxBoxForceFieldShapeDesc()
00065570 t NxBoxForceFieldShapeDesc::~NxBoxForceFieldShapeDesc()
00065570 t NxBoxForceFieldShapeDesc::~NxBoxForceFieldShapeDesc()
000f3b50 t vehicle_steeringparams_t::GetBaseMap()
002609f0 d vehicle_steeringparams_t::m_DataMap
00122330 t BreakableConstraintHelper::~BreakableConstraintHelper()
00122330 t BreakableConstraintHelper::~BreakableConstraintHelper()
000e2ce0 t CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
000e2d50 t CPhysicsListenerCollision::CorePairLessFunc(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&)
000e3000 t CPhysicsListenerCollision::UpdatePairListPSI(CPhysicsEnvironment*)
000e2c60 t CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
000e2880 t CPhysicsListenerCollision::event_pre_collision(IVP_Event_Collision*)
000e3520 t CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
000e29b0 t CPhysicsListenerCollision::event_post_collision(IVP_Event_Collision*)
000e2a40 t CPhysicsListenerCollision::event_friction_created(IVP_Event_Friction*)
000e2b80 t CPhysicsListenerCollision::event_friction_deleted(IVP_Event_Friction*)
000e3500 t CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
000e3360 t CPhysicsListenerCollision::event_friction_pair_created(IVP_Friction_Core_Pair*)
000e3220 t CPhysicsListenerCollision::event_friction_pair_deleted(IVP_Friction_Core_Pair*)
000e34e0 t CPhysicsListenerCollision::event_collision_object_deleted(IVP_Real_Object*)
000e3540 t CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
000e2fa0 t CPhysicsListenerCollision::CPhysicsListenerCollision()
000e2fa0 t CPhysicsListenerCollision::CPhysicsListenerCollision()
000e3cf0 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
000e3d50 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
000e3d50 t CPhysicsListenerCollision::~CPhysicsListenerCollision()
00120850 t hk_Ball_Socket_Constraint::init_constraint(void const*)
001208a0 t hk_Ball_Socket_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00120d60 t hk_Ball_Socket_Constraint::apply_effector_PSI(hk_PSI_Info&)
00120dc0 t hk_Ball_Socket_Constraint::get_constraint_dof()
00120d20 t hk_Ball_Socket_Constraint::write_to_blueprint(hk_Ball_Socket_BP*)
00120db0 t hk_Ball_Socket_Constraint::get_constraint_type()
00120890 t hk_Ball_Socket_Constraint::get_vmq_storage_size()
00120ea0 t hk_Ball_Socket_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00120ce0 t hk_Ball_Socket_Constraint::init_ball_socket_constraint(hk_Ball_Socket_BP const*)
00120be0 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00120c60 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00120be0 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Environment*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00120c60 t hk_Ball_Socket_Constraint::hk_Ball_Socket_Constraint(hk_Local_Constraint_System*, hk_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00120df0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
00120dd0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
00120dd0 t hk_Ball_Socket_Constraint::~hk_Ball_Socket_Constraint()
000f6b80 t IPhysicsVehicleController::~IPhysicsVehicleController()
000f6aa0 t IPhysicsVehicleController::~IPhysicsVehicleController()
000f6aa0 t IPhysicsVehicleController::~IPhysicsVehicleController()
001b9810 t IVP_3D_Solver_KK_PARALLEL::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
00175790 t IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
00176790 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
00176790 t IVP_Actuator_Force_Active::IVP_Actuator_Force_Active(IVP_Environment*, IVP_Template_Force*)
00175fe0 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
00175f70 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
00175f70 t IVP_Actuator_Force_Active::~IVP_Actuator_Force_Active()
00179a20 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
00179a20 t IVP_Constraint_Car_Object::IVP_Constraint_Car_Object(IVP_Constraint_Solver_Car*, IVP_Real_Object*, IVP_Real_Object*, IVP_U_Float_Point*)
00179b10 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
00179b10 t IVP_Constraint_Car_Object::~IVP_Constraint_Car_Object()
0017b370 t IVP_Constraint_Solver_Car::get_controller_name()
0017aeb0 t IVP_Constraint_Solver_Car::init_constraint_system(IVP_Environment*, IVP_Real_Object*, IVP_U_Vector<IVP_Real_Object>&, IVP_U_Vector<IVP_U_Float_Point>&)
0017b390 t IVP_Constraint_Solver_Car::get_controller_priority()
00179da0 t IVP_Constraint_Solver_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0017b360 t IVP_Constraint_Solver_Car::get_associated_controlled_cores()
0017b380 t IVP_Constraint_Solver_Car::get_minimum_simulation_frequency()
00179990 t IVP_Constraint_Solver_Car::core_is_going_to_be_deleted_event(IVP_Core*)
00179b30 t IVP_Constraint_Solver_Car::do_simulation_controller_rotation(IVP_Event_Sim*, IVP_Core*, IVP_U_Matrix const*)
0017b130 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
0017b130 t IVP_Constraint_Solver_Car::IVP_Constraint_Solver_Car(IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_COORDINATE_INDEX, IVP_BOOL)
0017b340 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
0017b1d0 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
0017b1d0 t IVP_Constraint_Solver_Car::~IVP_Constraint_Solver_Car()
00170250 t IVP_Meta_Collision_Filter::add_collision_filter(IVP_Collision_Filter*)
00170290 t IVP_Meta_Collision_Filter::remove_collision_filter(IVP_Collision_Filter*)
0016fe10 t IVP_Meta_Collision_Filter::environment_will_be_deleted(IVP_Environment*)
0016fc10 t IVP_Meta_Collision_Filter::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
00170310 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
00170310 t IVP_Meta_Collision_Filter::IVP_Meta_Collision_Filter(IVP_BOOL)
0016fd50 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
0016fcf0 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
0016fcf0 t IVP_Meta_Collision_Filter::~IVP_Meta_Collision_Filter()
0019cf60 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
0019cf60 t IVP_Object_Callback_Table::~IVP_Object_Callback_Table()
001a6ed0 t IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
001a6340 t IVP_U_Active_Add_Multiple::print()
001a81c0 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, float)
001a81c0 t IVP_U_Active_Add_Multiple::IVP_U_Active_Add_Multiple(char const*, IVP_U_Active_Float*, IVP_U_Active_Float*, float)
001a7530 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
001a74d0 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
001a74d0 t IVP_U_Active_Add_Multiple::~IVP_U_Active_Add_Multiple()
001a7240 t IVP_U_Active_Terminal_Int::update_int()
001a6150 t IVP_U_Active_Terminal_Int::print()
001a66c0 t IVP_U_Active_Terminal_Int::set_int(int, IVP_BOOL)
001a7c80 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
001a7c80 t IVP_U_Active_Terminal_Int::IVP_U_Active_Terminal_Int(char const*, int)
001a8720 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
001a86b0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
001a86b0 t IVP_U_Active_Terminal_Int::~IVP_U_Active_Terminal_Int()
001b0360 t IVP_U_Min_Hash_Enumerator::get_next_element()
001b03c0 t IVP_U_Min_Hash_Enumerator::get_next_element_lt(float)
001b0340 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
001b0340 t IVP_U_Min_Hash_Enumerator::IVP_U_Min_Hash_Enumerator(IVP_U_Min_Hash*)
001b0af0 t IVP_U_Min_List_Enumerator::get_next_element()
001b0b50 t IVP_U_Min_List_Enumerator::get_next_element_lt(float)
001b0b20 t IVP_U_Min_List_Enumerator::get_next_element_header()
001b0ad0 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
001b0ad0 t IVP_U_Min_List_Enumerator::IVP_U_Min_List_Enumerator(IVP_U_Min_List*)
0013ada0 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
0013ada0 t IVV_Cluster_Min_Hash_Elem::~IVV_Cluster_Min_Hash_Elem()
000f3680 t vehicle_operatingparams_t::GetBaseMap()
00260a68 d vehicle_operatingparams_t::m_DataMap
000d42e0 t CPhysCollideCompactSurface::SetLedgeIndex(IVP_Compact_Ledgetree_Node const*, IVP_Compact_Ledge*, int)
000d20f0 t CPhysCollideCompactSurface::SetMassCenter(Vector const&)
000d4f70 t CPhysCollideCompactSurface::InitCollideMap()
000d2160 t CPhysCollideCompactSurface::SetOrthographicAreas(Vector const&)
000d43b0 t CPhysCollideCompactSurface::ComputeOrthographicAreas(float)
000d5260 t CPhysCollideCompactSurface::Init(char const*, unsigned int, int, bool)
000d5070 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
000d5300 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
000d5370 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
000d5070 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(IVP_Compact_Surface*)
000d5300 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(compactsurfaceheader_t const*, int, bool)
000d5370 t CPhysCollideCompactSurface::CPhysCollideCompactSurface(char const*, unsigned int, int, bool)
000d3040 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
000d2ff0 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
000d2ff0 t CPhysCollideCompactSurface::~CPhysCollideCompactSurface()
000dee30 t CPhysicsListenerConstraint::event_constraint_broken(IVP_Constraint*)
000df2b0 t CPhysicsListenerConstraint::event_constraint_broken(hk_Breakable_Constraint*)
000cd610 t CVPhysicsVirtualMeshWriter::LedgeCanBePacked(IVP_Compact_Ledge const*, virtualmeshlist_t const&)
000cd370 t CVPhysicsVirtualMeshWriter::DestroyPackedHull(virtualmeshhull_t*)
000cd390 t CVPhysicsVirtualMeshWriter::UnpackLedgeListFromHull(unsigned char*, virtualmeshhull_t*, IVP_Compact_Poly_Point*)
000cd260 t CVPhysicsVirtualMeshWriter::InitTwoSidedTriangleLege(triangleledge_t*, IVP_Compact_Poly_Point const*, int, int, int, int)
000cdf20 t CVPhysicsVirtualMeshWriter::CreatePackedHullFromLedges(virtualmeshlist_t const&, IVP_Compact_Ledge const**, int)
000ccf70 t CVPhysicsVirtualMeshWriter::UnpackCompactLedgeFromHull(IVP_Compact_Ledge*, int, IVP_Compact_Poly_Point const*, virtualmeshhull_t const*, int, bool)
0011f970 t hk_Local_Constraint_System::deactivate()
0011fcf0 t hk_Local_Constraint_System::get_epsilon()
0011f9b0 t hk_Local_Constraint_System::add_constraint(hk_Constraint*, int)
0011fed0 t hk_Local_Constraint_System::sort_constraints()
0011fc30 t hk_Local_Constraint_System::solve_penetration(IVP_Real_Object*, IVP_Real_Object*)
001200f0 t hk_Local_Constraint_System::apply_effector_PSI(hk_PSI_Info&)
0011f800 t hk_Local_Constraint_System::write_to_blueprint(hk_Local_Constraint_System_BP*)
0011fb00 t hk_Local_Constraint_System::deactivate_silently()
0011f840 t hk_Local_Constraint_System::recalc_storage_size()
0011fd20 t hk_Local_Constraint_System::report_square_error(float __vector(4))
0011fd00 t hk_Local_Constraint_System::report_square_error(float)
0011fd20 t hk_Local_Constraint_System::report_square_error(float __vector)
0011f630 t hk_Local_Constraint_System::entity_deletion_event(hk_Rigid_Body*)
0011fb30 t hk_Local_Constraint_System::get_effected_entities(hk_Array<hk_Rigid_Body*>&)
00120730 t hk_Local_Constraint_System::get_effector_priority()
0011f8a0 t hk_Local_Constraint_System::constraint_deletion_event(hk_Constraint*)
0011fbb0 t hk_Local_Constraint_System::get_constraints_in_system(hk_Array<hk_Constraint*>&)
0011f5c0 t hk_Local_Constraint_System::core_is_going_to_be_deleted_event(IVP_Core*)
0011f930 t hk_Local_Constraint_System::activate()
0011f760 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0011f760 t hk_Local_Constraint_System::hk_Local_Constraint_System(hk_Environment*, hk_Local_Constraint_System_BP*)
0011feb0 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0011fd30 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
0011fd30 t hk_Local_Constraint_System::~hk_Local_Constraint_System()
00130650 t hk_Stiff_Spring_Constraint::set_length(float)
001301c0 t hk_Stiff_Spring_Constraint::init_constraint(void const*)
00130220 t hk_Stiff_Spring_Constraint::step_constraint(hk_PSI_Info&, void*, float, float)
00130660 t hk_Stiff_Spring_Constraint::apply_effector_PSI(hk_PSI_Info&)
001306c0 t hk_Stiff_Spring_Constraint::get_constraint_dof()
001304e0 t hk_Stiff_Spring_Constraint::write_to_blueprint(hk_Stiff_Spring_BP*)
001306b0 t hk_Stiff_Spring_Constraint::get_constraint_type()
00130210 t hk_Stiff_Spring_Constraint::get_vmq_storage_size()
00130720 t hk_Stiff_Spring_Constraint::setup_and_step_constraint(hk_PSI_Info&, void*, float, float)
00130490 t hk_Stiff_Spring_Constraint::init_stiff_spring_constraint(hk_Stiff_Spring_BP const*)
00130530 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
001305c0 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00130530 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Environment*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
001305c0 t hk_Stiff_Spring_Constraint::hk_Stiff_Spring_Constraint(hk_Local_Constraint_System*, hk_Stiff_Spring_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
001306f0 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
001306d0 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
001306d0 t hk_Stiff_Spring_Constraint::~hk_Stiff_Spring_Constraint()
00177c70 t IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
00177d10 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
00177d10 t IVP_Actuator_Spring_Active::IVP_Actuator_Spring_Active(IVP_Environment*, IVP_Template_Spring*)
001775a0 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
001774f0 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
001774f0 t IVP_Actuator_Spring_Active::~IVP_Actuator_Spring_Active()
001759c0 t IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
001762a0 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
001762a0 t IVP_Actuator_Torque_Active::IVP_Actuator_Torque_Active(IVP_Environment*, IVP_Template_Torque*)
00175ce0 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
00175c60 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
00175c60 t IVP_Actuator_Torque_Active::~IVP_Actuator_Torque_Active()
00178c50 t IVP_Car_System_Real_Wheels::do_steering(float, bool)
001780b0 t IVP_Car_System_Real_Wheels::get_skid_info(IVP_Wheel_Skid_Info*)
00177fb0 t IVP_Car_System_Real_Wheels::get_body_speed(IVP_COORDINATE_INDEX)
001782c0 t IVP_Car_System_Real_Wheels::set_powerslide(float, float)
00178590 t IVP_Car_System_Real_Wheels::update_booster(float)
00179880 t IVP_Car_System_Real_Wheels::update_throttle(float)
001785f0 t IVP_Car_System_Real_Wheels::activate_booster(float, float, float)
00177f90 t IVP_Car_System_Real_Wheels::get_wheel_torque(IVP_POS_WHEEL)
00178370 t IVP_Car_System_Real_Wheels::do_steering_wheel(IVP_POS_WHEEL, float)
00178110 t IVP_Car_System_Real_Wheels::get_booster_delay()
001784a0 t IVP_Car_System_Real_Wheels::change_wheel_torque(IVP_POS_WHEEL, float)
001784e0 t IVP_Car_System_Real_Wheels::change_spring_length(IVP_POS_WHEEL, float)
00178b90 t IVP_Car_System_Real_Wheels::event_object_deleted(IVP_Event_Object*)
00178330 t IVP_Car_System_Real_Wheels::change_body_downforce(float)
00178550 t IVP_Car_System_Real_Wheels::change_max_body_force(IVP_POS_WHEEL, float)
00178210 t IVP_Car_System_Real_Wheels::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
00178190 t IVP_Car_System_Real_Wheels::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
00178350 t IVP_Car_System_Real_Wheels::change_spring_constant(IVP_POS_WHEEL, float)
001798a0 t IVP_Car_System_Real_Wheels::get_booster_time_to_go()
00179890 t IVP_Car_System_Real_Wheels::update_wheel_positions()
00177f70 t IVP_Car_System_Real_Wheels::change_fast_turn_factor(float)
00178570 t IVP_Car_System_Real_Wheels::change_spring_dampening(IVP_POS_WHEEL, float)
00178050 t IVP_Car_System_Real_Wheels::get_orig_axles_distance()
00178690 t IVP_Car_System_Real_Wheels::set_booster_acceleration(float)
00178500 t IVP_Car_System_Real_Wheels::change_spring_pre_tension(IVP_POS_WHEEL, float)
00178440 t IVP_Car_System_Real_Wheels::update_body_countertorque()
001784c0 t IVP_Car_System_Real_Wheels::change_stabilizer_constant(IVP_POS_AXIS, float)
00178090 t IVP_Car_System_Real_Wheels::get_wheel_angular_velocity(IVP_POS_WHEEL)
00178160 t IVP_Car_System_Real_Wheels::environment_will_be_deleted(IVP_Environment*)
00178b70 t IVP_Car_System_Real_Wheels::change_wheel_speed_dampening(IVP_POS_WHEEL, float)
00178010 t IVP_Car_System_Real_Wheels::get_orig_front_wheel_distance()
00178530 t IVP_Car_System_Real_Wheels::change_spring_dampening_compression(IVP_POS_WHEEL, float)
00178ab0 t IVP_Car_System_Real_Wheels::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
00178920 t IVP_Car_System_Real_Wheels::fix_wheel(IVP_POS_WHEEL, IVP_BOOL) [clone .part.17]
00178e30 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
00178e30 t IVP_Car_System_Real_Wheels::IVP_Car_System_Real_Wheels(IVP_Environment*, IVP_Template_Car_System*)
001781c0 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
00178120 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
00178120 t IVP_Car_System_Real_Wheels::~IVP_Car_System_Real_Wheels()
001706d0 t IVP_Compact_Ledgetree_Node::byte_swap_all(IVP_U_BigVector<IVP_Compact_Poly_Point>*)
00170680 t IVP_Compact_Ledgetree_Node::byte_swap()
0026bfac b IVP_Controller_Independent::empty_list
000d1e80 t IVP_Controller_Independent::get_associated_controlled_cores()
000d1ff0 t IVP_Controller_Independent::~IVP_Controller_Independent()
000d1e90 t IVP_Controller_Independent::~IVP_Controller_Independent()
000d1e90 t IVP_Controller_Independent::~IVP_Controller_Independent()
0017d070 t IVP_Controller_Raycast_Car::do_steering(float, bool)
0017ce30 t IVP_Controller_Raycast_Car::get_skid_info(IVP_Wheel_Skid_Info*)
0017cd50 t IVP_Controller_Raycast_Car::get_body_speed(IVP_COORDINATE_INDEX)
0017e710 t IVP_Controller_Raycast_Car::set_powerslide(float, float)
0017e720 t IVP_Controller_Raycast_Car::update_booster(float)
0017e6f0 t IVP_Controller_Raycast_Car::update_throttle(float)
0017d020 t IVP_Controller_Raycast_Car::activate_booster(float, float, float)
0017cc50 t IVP_Controller_Raycast_Car::get_wheel_torque(IVP_POS_WHEEL)
0017cfd0 t IVP_Controller_Raycast_Car::do_steering_wheel(IVP_POS_WHEEL, float)
0017cd20 t IVP_Controller_Raycast_Car::get_booster_delay()
0017d940 t IVP_Controller_Raycast_Car::CalcSteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
0017d6d0 t IVP_Controller_Raycast_Car::DoSimulationShocks(IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, IVP_Event_Sim*, IVP_Core*)
0017d220 t IVP_Controller_Raycast_Car::DoSimulationWheels(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*, IVP_Ray_Hit*, float*, IVP_Core*)
0017e630 t IVP_Controller_Raycast_Car::InitRaycastCarAxes(IVP_Template_Car_System const*)
0017e2f0 t IVP_Controller_Raycast_Car::InitRaycastCarBody(IVP_Template_Car_System const*)
0017d150 t IVP_Controller_Raycast_Car::SetupWheelRaycasts(IVP_Ray_Solver_Template*, IVP_U_Matrix const*, IVP_Raycast_Car_Wheel_Temp*)
0017dbe0 t IVP_Controller_Raycast_Car::ApplySteeringForces(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*, float*)
0017cf90 t IVP_Controller_Raycast_Car::change_wheel_torque(IVP_POS_WHEEL, float)
0017d880 t IVP_Controller_Raycast_Car::DoSimulationBooster(IVP_Event_Sim*, IVP_Core*)
0017cc30 t IVP_Controller_Raycast_Car::change_spring_length(IVP_POS_WHEEL, float)
0017df30 t IVP_Controller_Raycast_Car::DoSimulationSteering(IVP_Raycast_Car_Wheel_Temp*, IVP_Core*, IVP_Event_Sim*)
0017e3a0 t IVP_Controller_Raycast_Car::InitRaycastCarWheels(IVP_Template_Car_System const*)
0017ccc0 t IVP_Controller_Raycast_Car::change_body_downforce(float)
0017e6e0 t IVP_Controller_Raycast_Car::change_max_body_force(IVP_POS_WHEEL, float)
0017cf10 t IVP_Controller_Raycast_Car::GetCarSystemDebugData(IVP_CarSystemDebugData_t&)
0017ce90 t IVP_Controller_Raycast_Car::SetCarSystemDebugData(IVP_CarSystemDebugData_t const&)
0017cba0 t IVP_Controller_Raycast_Car::change_spring_constant(IVP_POS_WHEEL, float)
0017e730 t IVP_Controller_Raycast_Car::get_booster_time_to_go()
0017ccb0 t IVP_Controller_Raycast_Car::change_fast_turn_factor(float)
0017cbc0 t IVP_Controller_Raycast_Car::change_spring_dampening(IVP_POS_WHEEL, float)
0017d5f0 t IVP_Controller_Raycast_Car::DoSimulationStabilizers(IVP_Raycast_Car_Wheel_Temp*)
0017ccf0 t IVP_Controller_Raycast_Car::get_controller_priority()
0017cdf0 t IVP_Controller_Raycast_Car::get_orig_axles_distance()
0017dfb0 t IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0017cd00 t IVP_Controller_Raycast_Car::set_booster_acceleration(float)
0017cc00 t IVP_Controller_Raycast_Car::change_spring_pre_tension(IVP_POS_WHEEL, float)
0017e210 t IVP_Controller_Raycast_Car::InitRaycastCarEnvironment(IVP_Environment*, IVP_Template_Car_System const*)
0017e700 t IVP_Controller_Raycast_Car::update_body_countertorque()
0017cc90 t IVP_Controller_Raycast_Car::change_stabilizer_constant(IVP_POS_AXIS, float)
0017cd30 t IVP_Controller_Raycast_Car::get_wheel_angular_velocity(IVP_POS_WHEEL)
0017cdb0 t IVP_Controller_Raycast_Car::get_orig_front_wheel_distance()
0017e6d0 t IVP_Controller_Raycast_Car::get_associated_controlled_cores()
0017e6a0 t IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
0017cbe0 t IVP_Controller_Raycast_Car::change_spring_dampening_compression(IVP_POS_WHEEL, float)
0017e780 t IVP_Controller_Raycast_Car::get_axis(IVP_POS_AXIS)
0017cc70 t IVP_Controller_Raycast_Car::fix_wheel(IVP_POS_WHEEL, IVP_BOOL)
0017e760 t IVP_Controller_Raycast_Car::get_wheel(IVP_POS_WHEEL)
0017e550 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
0017e550 t IVP_Controller_Raycast_Car::IVP_Controller_Raycast_Car(IVP_Environment*, IVP_Template_Car_System const*)
0017e1f0 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
0017e140 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
0017e140 t IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
001a2910 t IVP_Event_Manager_Standard::simulate_time_events(IVP_Time_Manager*, IVP_Environment*, IVP_Time)
001a3070 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
001a3060 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
001a3060 t IVP_Event_Manager_Standard::~IVP_Event_Manager_Standard()
0018aa60 t IVP_Friction_Info_For_Core::dist_number()
0018a1a0 t IVP_Friction_Info_For_Core::set_all_dists_of_obj_neutral()
0018a9e0 t IVP_Friction_Info_For_Core::friction_info_delete_friction_dist(IVP_Contact_Point*)
0018a9a0 t IVP_Friction_Info_For_Core::friction_info_insert_friction_dist(IVP_Contact_Point*)
001913c0 t IVP_Great_Matrix_Many_Zero::lu_inverse(IVP_Great_Matrix_Many_Zero*, int*)
0018f760 t IVP_Great_Matrix_Many_Zero::copy_matrix(float*, float*)
0018f6d0 t IVP_Great_Matrix_Many_Zero::copy_matrix(IVP_Great_Matrix_Many_Zero*)
0018fc30 t IVP_Great_Matrix_Many_Zero::test_result(float*, float*)
0018fff0 t IVP_Great_Matrix_Many_Zero::mult_aligned()
0018f7c0 t IVP_Great_Matrix_Many_Zero::exchange_rows(int, int)
0018f680 t IVP_Great_Matrix_Many_Zero::debug_fill_zero()
0018f5b0 t IVP_Great_Matrix_Many_Zero::add_multiple_line(int, int, float)
0018fe30 t IVP_Great_Matrix_Many_Zero::copy_to_sub_matrix(float*, IVP_Great_Matrix_Many_Zero*, int*)
0018f740 t IVP_Great_Matrix_Many_Zero::align_matrix_values()
0018f850 t IVP_Great_Matrix_Many_Zero::find_pivot_in_column(int)
0018fb60 t IVP_Great_Matrix_Many_Zero::matrix_multiplication(float*, float*)
0018f590 t IVP_Great_Matrix_Many_Zero::matrix_test_unequation()
0018fcd0 t IVP_Great_Matrix_Many_Zero::fill_from_bigger_matrix(IVP_Great_Matrix_Many_Zero*, int*, int)
0018f5a0 t IVP_Great_Matrix_Many_Zero::matrix_out_before_gauss()
0018f9e0 t IVP_Great_Matrix_Many_Zero::solve_lower_null_matrix()
0018f510 t IVP_Great_Matrix_Many_Zero::matrix_check_unequation_line(int)
0018fb40 t IVP_Great_Matrix_Many_Zero::solve_great_matrix_many_zero()
0018f8e0 t IVP_Great_Matrix_Many_Zero::transform_to_lower_null_triangle()
00190060 t IVP_Great_Matrix_Many_Zero::mult()
00191470 t IVP_Great_Matrix_Many_Zero::invert(IVP_Great_Matrix_Many_Zero*)
00190e50 t IVP_Great_Matrix_Many_Zero::lu_crout(int*, float*)
001911b0 t IVP_Great_Matrix_Many_Zero::lu_solve(int*)
0018fea0 t IVP_Great_Matrix_Many_Zero::set_value(float, int, int)
0018fc40 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
0018fca0 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
0018fc40 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero(int)
0018fca0 t IVP_Great_Matrix_Many_Zero::IVP_Great_Matrix_Many_Zero()
00157480 t IVP_Intrusion_Intersection::p()
001573c0 t IVP_Intrusion_Intersection::print(char const*)
001a5b90 t IVP_SurfaceManager_Polygon::add_reference_to_ledge(IVP_Compact_Ledge const*)
001a5c80 t IVP_SurfaceManager_Polygon::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
001a5ba0 t IVP_SurfaceManager_Polygon::remove_reference_to_ledge(IVP_Compact_Ledge const*)
001a5ef0 t IVP_SurfaceManager_Polygon::get_all_ledges_within_radius(IVP_U_Point const*, float, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
001a5ca0 t IVP_SurfaceManager_Polygon::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
001a5b80 t IVP_SurfaceManager_Polygon::get_type()
001a6030 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
001a6010 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
001a6030 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon(IVP_Compact_Surface const*)
001a6010 t IVP_SurfaceManager_Polygon::IVP_SurfaceManager_Polygon()
001a5bd0 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
001a5bb0 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
001a5bb0 t IVP_SurfaceManager_Polygon::~IVP_SurfaceManager_Polygon()
001a6790 t IVP_U_Active_Value_Manager::delay_active_int(IVP_U_Active_Int_Delayed*)
001a7d70 t IVP_U_Active_Value_Manager::create_active_int(char const*, int)
001a6bc0 t IVP_U_Active_Value_Manager::insert_active_int(IVP_U_Active_Int*)
001a6a80 t IVP_U_Active_Value_Manager::remove_active_int(IVP_U_Active_Int*)
001a6710 t IVP_U_Active_Value_Manager::delay_active_float(IVP_U_Active_Float_Delayed*)
001a7cc0 t IVP_U_Active_Value_Manager::install_active_int(char const*, int)
001a7960 t IVP_U_Active_Value_Manager::create_active_float(char const*, float)
001a6af0 t IVP_U_Active_Value_Manager::insert_active_float(IVP_U_Active_Float*)
001a6a10 t IVP_U_Active_Value_Manager::remove_active_float(IVP_U_Active_Float*)
001a7a20 t IVP_U_Active_Value_Manager::install_active_float(char const*, float)
001a7e30 t IVP_U_Active_Value_Manager::get_active_int_by_name(char const*)
001a7ad0 t IVP_U_Active_Value_Manager::get_active_float_by_name(char const*)
001a6050 t IVP_U_Active_Value_Manager::refresh_psi_active_values(IVP_Environment*)
001a7bd0 t IVP_U_Active_Value_Manager::init_active_values_generic()
001a86d0 t IVP_U_Active_Value_Manager::environment_will_be_deleted(IVP_Environment*)
001a6810 t IVP_U_Active_Value_Manager::update_delayed_active_values()
001a8590 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
001a8590 t IVP_U_Active_Value_Manager::IVP_U_Active_Value_Manager(IVP_BOOL)
001a8570 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
001a8490 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
001a8490 t IVP_U_Active_Value_Manager::~IVP_U_Active_Value_Manager()
000f39b0 t vehicle_suspensionparams_t::GetBaseMap()
00260a20 d vehicle_suspensionparams_t::m_DataMap
001758d0 t IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
00176450 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
00176450 t IVP_Actuator_Rot_Mot_Active::IVP_Actuator_Rot_Mot_Active(IVP_Environment*, IVP_Template_Rot_Mot*)
00175e20 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
00175d80 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
00175d80 t IVP_Actuator_Rot_Mot_Active::~IVP_Actuator_Rot_Mot_Active()
0019caf0 t IVP_Application_Environment::IVP_Application_Environment()
0019caf0 t IVP_Application_Environment::IVP_Application_Environment()
001a3fd0 t IVP_BetterStatisticsmanager::remove_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
001a3f90 t IVP_BetterStatisticsmanager::install_data_entity(IVP_BetterStatisticsmanager_Data_Entity*)
001a3f40 t IVP_BetterStatisticsmanager::set_simulation_time(float)
001a40c0 t IVP_BetterStatisticsmanager::remove_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
001a4080 t IVP_BetterStatisticsmanager::install_output_callback(IVP_BetterStatisticsmanager_Callback_Interface*)
001a3eb0 t IVP_BetterStatisticsmanager::print()
001a4170 t IVP_BetterStatisticsmanager::enable()
001a4180 t IVP_BetterStatisticsmanager::disable()
001a4190 t IVP_BetterStatisticsmanager::get_state()
001a41a0 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
001a41a0 t IVP_BetterStatisticsmanager::IVP_BetterStatisticsmanager()
001a41f0 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
001a41f0 t IVP_BetterStatisticsmanager::~IVP_BetterStatisticsmanager()
00150d80 t IVP_Compact_Ledge_Generator::prepare_compact_ledge(IVP_U_Vector<IVP_Triangle>*)
00151100 t IVP_Compact_Ledge_Generator::generate_compact_ledge(unsigned char*)
00150cf0 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
00150cf0 t IVP_Compact_Ledge_Generator::IVP_Compact_Ledge_Generator()
001511d0 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
001511d0 t IVP_Compact_Ledge_Generator::~IVP_Compact_Ledge_Generator()
001c7070 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
001c7070 t IVP_Constraint_Local_Anchor::IVP_Constraint_Local_Anchor()
001c7080 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
001c7080 t IVP_Constraint_Local_Anchor::~IVP_Constraint_Local_Anchor()
00196430 t IVP_Impact_Solver_Long_Term::do_impact_long_term(IVP_Core**, float, IVP_Contact_Point*)
00195ef0 t IVP_Impact_Solver_Long_Term::get_best_merge_core(IVP_Core*, IVP_Core*, IVP_Core*)
00196f80 t IVP_Impact_Solver_Long_Term::do_impact_of_two_objects(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*)
00195e70 t IVP_Impact_Solver_Long_Term::find_second_critical_impact_core(IVP_Core*, IVP_Core*)
001bd260 t IVP_Mindist_Minimize_Solver::minimize_BB(IVP_Mindist_Minimize_Solver*)
001bd630 t IVP_Mindist_Minimize_Solver::minimize_FB(IVP_Mindist_Minimize_Solver*)
001bd680 t IVP_Mindist_Minimize_Solver::minimize_KB(IVP_Mindist_Minimize_Solver*)
001bd6d0 t IVP_Mindist_Minimize_Solver::minimize_PB(IVP_Mindist_Minimize_Solver*)
001cc010 t IVP_Mindist_Minimize_Solver::p_minimize_BF(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
001cbb20 t IVP_Mindist_Minimize_Solver::p_minimize_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
001cbc50 t IVP_Mindist_Minimize_Solver::p_minimize_BP(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
001bdd60 t IVP_Mindist_Minimize_Solver::p_minimize_FF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001cd360 t IVP_Mindist_Minimize_Solver::p_minimize_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001ce7c0 t IVP_Mindist_Minimize_Solver::p_minimize_PF(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001cd290 t IVP_Mindist_Minimize_Solver::p_minimize_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001ccc40 t IVP_Mindist_Minimize_Solver::p_minimize_PP(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001bd780 t IVP_Mindist_Minimize_Solver::init_loop_hash()
001bd970 t IVP_Mindist_Minimize_Solver::pierce_mindist()
001bd790 t IVP_Mindist_Minimize_Solver::check_loop_hash(IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*, IVP_SYNAPSE_POLYGON_STATUS, IVP_Compact_Edge const*)
001bd450 t IVP_Mindist_Minimize_Solver::minimize_B_POLY(IVP_Mindist_Minimize_Solver*)
001bd230 t IVP_Mindist_Minimize_Solver::minimize_illegal(IVP_Mindist_Minimize_Solver*)
0026e9a0 b IVP_Mindist_Minimize_Solver::mms_function_table
001cb4e0 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_BK(IVP_Cache_Ball*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*)
001cdd70 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_KK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_KK_Input const&, IVP_Unscaled_KK_Result const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001cd750 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PF(IVP_Compact_Edge const*, IVP_U_Point const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001cc320 t IVP_Mindist_Minimize_Solver::p_minimize_Leave_PK(IVP_Compact_Edge const*, IVP_Compact_Edge const*, IVP_Cache_Ledge_Point*, IVP_Cache_Ledge_Point*)
001bdc40 t IVP_Mindist_Minimize_Solver::init_mms_function_table()
001be7f0 t IVP_Mindist_Minimize_Solver::minimize_default_poly_poly(IVP_Mindist_Minimize_Solver*)
001bead0 t IVP_Mindist_Minimize_Solver::minimize_swapped_poly_poly(IVP_Mindist_Minimize_Solver*)
0019c8c0 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
0019c8c0 t IVP_Real_Object_Fast_Static::IVP_Real_Object_Fast_Static(IVP_Cluster*, IVP_Template_Object const*)
0019c650 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
0019c5e0 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
0019c5e0 t IVP_Real_Object_Fast_Static::~IVP_Real_Object_Fast_Static()
00065500 t NxConvexForceFieldShapeDesc::setToDefault()
00065600 t NxConvexForceFieldShapeDesc::~NxConvexForceFieldShapeDesc()
00065590 t NxConvexForceFieldShapeDesc::~NxConvexForceFieldShapeDesc()
00065590 t NxConvexForceFieldShapeDesc::~NxConvexForceFieldShapeDesc()
00065420 t NxSphereForceFieldShapeDesc::setToDefault()
000655a0 t NxSphereForceFieldShapeDesc::~NxSphereForceFieldShapeDesc()
00065560 t NxSphereForceFieldShapeDesc::~NxSphereForceFieldShapeDesc()
00065560 t NxSphereForceFieldShapeDesc::~NxSphereForceFieldShapeDesc()
000d62c0 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
000d62c0 t CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
00100c60 t CTraceSolverSweptObjectPhys2::DoSweep()
000fbdb0 t CTraceSolverSweptObjectPhys2::CTraceSolverSweptObjectPhys2(CGameTrace*, ITraceObject*, CTraceRay*, CTraceObject2*, Vector const&, unsigned int, IConvexInfo*)
000fbdb0 t CTraceSolverSweptObjectPhys2::CTraceSolverSweptObjectPhys2(CGameTrace*, ITraceObject*, CTraceRay*, CTraceObject2*, Vector const&, unsigned int, IConvexInfo*)
000e9350 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
000e92c0 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
000e92c0 t IPhysicsSurfacePropsInternal::~IPhysicsSurfacePropsInternal()
0019d490 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
0019d490 t IVP_Collision_Callback_Table::~IVP_Collision_Callback_Table()
001b5880 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
001b5850 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
001b5850 t IVP_Collision_Delegator_Root::~IVP_Collision_Delegator_Root()
001922c0 t IVP_Linear_Constraint_Solver::full_setup()
001902d0 t IVP_Linear_Constraint_Solver::alloc_memory(IVP_U_Memory*)
00193510 t IVP_Linear_Constraint_Solver::debug_dep_var(int)
001907b0 t IVP_Linear_Constraint_Solver::debug_out_lcs()
00192930 t IVP_Linear_Constraint_Solver::startup_setup(int)
00192460 t IVP_Linear_Constraint_Solver::get_fdirection()
001906d0 t IVP_Linear_Constraint_Solver::start_debug_lcs()
00191d80 t IVP_Linear_Constraint_Solver::setup_l_u_solver()
001905e0 t IVP_Linear_Constraint_Solver::update_step_vars(float)
001930f0 t IVP_Linear_Constraint_Solver::init_and_solve_lc(float*, float*, float*, int, int, IVP_U_Memory*)
00190420 t IVP_Linear_Constraint_Solver::increase_step_count(int*)
001928e0 t IVP_Linear_Constraint_Solver::decrement_sub_solver(int)
00192100 t IVP_Linear_Constraint_Solver::increment_sub_solver()
00190c50 t IVP_Linear_Constraint_Solver::move_variable_to_end(int)
00190db0 t IVP_Linear_Constraint_Solver::debug_test_all_values()
00190b70 t IVP_Linear_Constraint_Solver::get_values_when_setup()
00190590 t IVP_Linear_Constraint_Solver::exchange_activ_inactiv(int)
00190430 t IVP_Linear_Constraint_Solver::exchange_lcs_variables(int, int)
00190ca0 t IVP_Linear_Constraint_Solver::full_setup_test_ranges()
00190a90 t IVP_Linear_Constraint_Solver::lcs_bubble_sort_x_vals()
001901e0 t IVP_Linear_Constraint_Solver::numerical_stability_ok()
001900c0 t IVP_Linear_Constraint_Solver::mult_active_x_for_accel()
00190160 t IVP_Linear_Constraint_Solver::mult_x_with_full_A_minus_b()
00190480 t IVP_Linear_Constraint_Solver::do_a_little_random_permutation()
00192ae0 t IVP_Linear_Constraint_Solver::move_not_necessary_actives_to_inactives()
00192b60 t IVP_Linear_Constraint_Solver::solve_lc()
001390a0 t IVP_SurfaceBuilder_Pointsoup::error_output(IVP_Template_Polygon*)
0026a3e4 b IVP_SurfaceBuilder_Pointsoup::single_tri_ledge
001389f0 t IVP_SurfaceBuilder_Pointsoup::planes_to_template(IVP_U_Vector<IVP_U_Point>*, IVP_U_Vector<IVP_SurMan_PS_Plane>*)
00138980 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_lineslist(IVP_Template_Line*, int, int, int, char*)
00138930 t IVP_SurfaceBuilder_Pointsoup::get_offset_from_pointlist(IVP_Template_Point*, int, IVP_U_Point*)
00139770 t IVP_SurfaceBuilder_Pointsoup::convert_triangle_to_compace_ledge(IVP_U_Point*, IVP_U_Point*, IVP_U_Point*)
00139920 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge(IVP_U_Vector<IVP_U_Point>*)
0013a0f0 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_surface(IVP_U_Vector<IVP_U_Point>*)
00139970 t IVP_SurfaceBuilder_Pointsoup::convert_pointsoup_to_compact_ledge_internal(IVP_U_Vector<IVP_U_Point>*)
00139200 t IVP_SurfaceBuilder_Pointsoup::try_to_build_convex_ledge_from_qhull_result(IVP_U_Vector<IVP_U_Point>*, IVP_BOOL*, char*, char*)
00139740 t IVP_SurfaceBuilder_Pointsoup::cleanup()
001a6670 t IVP_U_Active_Terminal_Double::set_double(float, IVP_BOOL)
001a7140 t IVP_U_Active_Terminal_Double::update_float()
001a6170 t IVP_U_Active_Terminal_Double::print()
001a7920 t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, float)
001a7920 t IVP_U_Active_Terminal_Double::IVP_U_Active_Terminal_Double(char const*, float)
001a86f0 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
001a8690 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
001a8690 t IVP_U_Active_Terminal_Double::~IVP_U_Active_Terminal_Double()
00065490 t NxCapsuleForceFieldShapeDesc::setToDefault()
000655e0 t NxCapsuleForceFieldShapeDesc::~NxCapsuleForceFieldShapeDesc()
00065580 t NxCapsuleForceFieldShapeDesc::~NxCapsuleForceFieldShapeDesc()
00065580 t NxCapsuleForceFieldShapeDesc::~NxCapsuleForceFieldShapeDesc()
00267a88 b vehicleparams_t_DataDescInit::g_DataMapHolder
001573a0 t IVP_Intrusion_Included_Points::p()
00157360 t IVP_Intrusion_Included_Points::print(char const*)
001a4f00 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
001a4ec0 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
001a4ec0 t IVP_Liquid_Surface_Descriptor::~IVP_Liquid_Surface_Descriptor()
001a5340 t IVP_PerformanceCounter_Simple::stop_pcount()
001a5330 t IVP_PerformanceCounter_Simple::start_pcount()
001a52f0 t IVP_PerformanceCounter_Simple::environment_is_going_to_be_deleted(IVP_Environment*)
001a5370 t IVP_PerformanceCounter_Simple::reset_and_print_performance_counters(IVP_Time)
001a5320 t IVP_PerformanceCounter_Simple::pcount(IVP_PERFORMANCE_ELEMENT)
001a55b0 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
001a55b0 t IVP_PerformanceCounter_Simple::IVP_PerformanceCounter_Simple()
001a5350 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
001a5310 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
001a5310 t IVP_PerformanceCounter_Simple::~IVP_PerformanceCounter_Simple()
00135520 t IVP_SurfaceBuilder_Ledge_Soup::insert_ledge(IVP_Compact_Ledge*)
00137010 t IVP_SurfaceBuilder_Ledge_Soup::build_ledgetree(IVV_Sphere*)
001357e0 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_spheres()
00136250 t IVP_SurfaceBuilder_Ledge_Soup::build_minimal_sphere(IVV_Sphere*, IVV_Sphere*)
00136a60 t IVP_SurfaceBuilder_Ledge_Soup::calculate_boundingbox(IVP_U_Vector<IVV_Sphere>*, IVP_U_Float_Point*, IVP_U_Float_Point*)
00136ce0 t IVP_SurfaceBuilder_Ledge_Soup::insert_compact_ledges()
00135620 t IVP_SurfaceBuilder_Ledge_Soup::build_root_convex_hull()
00136de0 t IVP_SurfaceBuilder_Ledge_Soup::allocate_compact_surface()
001365d0 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_bottomup(float)
00137290 t IVP_SurfaceBuilder_Ledge_Soup::create_compact_ledgetree()
00135fa0 t IVP_SurfaceBuilder_Ledge_Soup::combine_spheres_in_vector(IVV_Cluster_Min_Hash*)
00135ee0 t IVP_SurfaceBuilder_Ledge_Soup::generate_interval_minhash(float)
001372d0 t IVP_SurfaceBuilder_Ledge_Soup::convert_ledges_to_templates(IVP_U_BigVector<IVP_Compact_Ledge>&, IVP_U_Vector<IVP_Template_Polygon>*)
00135b00 t IVP_SurfaceBuilder_Ledge_Soup::ledges_to_boxes_and_spheres()
00137130 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_array_debug_output()
001355b0 t IVP_SurfaceBuilder_Ledge_Soup::add_ledge_tree_to_convex_hull(IVP_Compact_Recursive&, IVV_Sphere*)
001371f0 t IVP_SurfaceBuilder_Ledge_Soup::insert_radius_in_compact_surface()
00138390 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut(float)
00136b80 t IVP_SurfaceBuilder_Ledge_Soup::recompile_point_indizes_of_compact_ledge(IVP_Compact_Ledge*, char*)
001376a0 t IVP_SurfaceBuilder_Ledge_Soup::cluster_spheres_topdown_mediancut_recursively(IVP_U_Vector<IVV_Sphere>*)
001361d0 t IVP_SurfaceBuilder_Ledge_Soup::remove_all_further_spherecombinations_from_hash(IVV_Cluster_Min_Hash*, int)
00136500 t IVP_SurfaceBuilder_Ledge_Soup::replace_childspheres_in_spherelist_with_motherspheres()
00135720 t IVP_SurfaceBuilder_Ledge_Soup::cleanup()
00138480 t IVP_SurfaceBuilder_Ledge_Soup::compile(IVP_Template_Surbuild_LedgeSoup*)
00138730 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
00138730 t IVP_SurfaceBuilder_Ledge_Soup::IVP_SurfaceBuilder_Ledge_Soup()
001385a0 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
001385a0 t IVP_SurfaceBuilder_Ledge_Soup::~IVP_SurfaceBuilder_Ledge_Soup()
001c8b40 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
001c8b40 t IVP_Template_Controller_Golem::IVP_Template_Controller_Golem()
0019cf30 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
0019cf30 t IVP_Universe_Manager_Settings::IVP_Universe_Manager_Settings()
00082760 t NxSpringAndDamperEffectorDesc::setToDefault()
000829b0 t NxSpringAndDamperEffectorDesc::~NxSpringAndDamperEffectorDesc()
00082970 t NxSpringAndDamperEffectorDesc::~NxSpringAndDamperEffectorDesc()
00082970 t NxSpringAndDamperEffectorDesc::~NxSpringAndDamperEffectorDesc()
0017c980 t IVP_Attacher_To_Cores_Buoyancy::get_buoyancy_surface(IVP_Real_Object*)
0017c970 t IVP_Attacher_To_Cores_Buoyancy::get_parameters_per_core(IVP_Core*)
0017c750 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
0017c750 t IVP_Attacher_To_Cores_Buoyancy::IVP_Attacher_To_Cores_Buoyancy(IVP_Template_Buoyancy&, IVP_U_Set_Active<IVP_Core>*, IVP_Liquid_Surface_Descriptor*)
0017ca20 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
0017c990 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
0017c990 t IVP_Attacher_To_Cores_Buoyancy::~IVP_Attacher_To_Cores_Buoyancy()
0019c780 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
0019c780 t IVP_Hull_Manager_Base_Gradient::IVP_Hull_Manager_Base_Gradient()
0019c790 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
0019c790 t IVP_Hull_Manager_Base_Gradient::~IVP_Hull_Manager_Base_Gradient()
001ca910 t IVP_Object_Callback_Table_Hash::find_table(IVP_Real_Object*)
001ca880 t IVP_Object_Callback_Table_Hash::remove_table(IVP_Real_Object*)
001ca7f0 t IVP_Object_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
001ca830 t IVP_Object_Callback_Table_Hash::add_table(IVP_Object_Callback_Table*)
001ca9a0 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
001ca9a0 t IVP_Object_Callback_Table_Hash::IVP_Object_Callback_Table_Hash(int)
001ca770 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
001ca6f0 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
001ca6f0 t IVP_Object_Callback_Table_Hash::~IVP_Object_Callback_Table_Hash()
000f74a0 t IVP_SurfaceManager_VirtualMesh::add_reference_to_ledge(IVP_Compact_Ledge const*)
000f6cf0 t IVP_SurfaceManager_VirtualMesh::get_all_terminal_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
000f71e0 t IVP_SurfaceManager_VirtualMesh::remove_reference_to_ledge(IVP_Compact_Ledge const*)
000f7b00 t IVP_SurfaceManager_VirtualMesh::get_all_ledges_within_radius(IVP_U_Point const*, float, IVP_Compact_Ledge const*, IVP_Real_Object*, IVP_Compact_Ledge const*, IVP_U_BigVector<IVP_Compact_Ledge>*)
000f7d00 t IVP_SurfaceManager_VirtualMesh::insert_all_ledges_hitting_ray(IVP_Ray_Solver*, IVP_Real_Object*)
000f8080 t IVP_SurfaceManager_VirtualMesh::get_type()
000f79d0 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
000f79d0 t IVP_SurfaceManager_VirtualMesh::IVP_SurfaceManager_VirtualMesh(CPhysCollideVirtualMesh*)
000f6d30 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
000f6d10 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
000f6d10 t IVP_SurfaceManager_VirtualMesh::~IVP_SurfaceManager_VirtualMesh()
001c87c0 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
001c87c0 t IVP_Template_Controller_Motion::IVP_Template_Controller_Motion()
000ee1e0 t vphysics_save_cphysicsobject_t::GetBaseMap()
0025f940 d vphysics_save_cphysicsobject_t::m_DataMap
000f2730 t vphysics_save_cphysicsspring_t::GetBaseMap()
002606e0 d vphysics_save_cphysicsspring_t::m_DataMap
00100880 t CTraceSolverSweptObjectHullList::DoSweep()
000fbfa0 t CTraceSolverSweptObjectHullList::CTraceSolverSweptObjectHullList(CGameTrace*, ITraceObject*, CTraceRay*, CTraceHullList*, Vector const&, unsigned int)
000fbfa0 t CTraceSolverSweptObjectHullList::CTraceSolverSweptObjectHullList(CGameTrace*, ITraceObject*, CTraceRay*, CTraceHullList*, Vector const&, unsigned int)
001b9430 t IVP_3D_Solver_VEC_PARALLEL_AREA::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001a0e90 t IVP_Standard_Gravity_Controller::get_controller_name()
001a06b0 t IVP_Standard_Gravity_Controller::set_standard_gravity(IVP_U_Point*)
001a06d0 t IVP_Standard_Gravity_Controller::set_alternate_gravity(IVP_U_Point*)
001a0e80 t IVP_Standard_Gravity_Controller::get_controller_priority()
0019efe0 t IVP_Standard_Gravity_Controller::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
001a0eb0 t IVP_Standard_Gravity_Controller::core_is_going_to_be_deleted_event(IVP_Core*)
001a0ec0 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
001a0ea0 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
001a0ea0 t IVP_Standard_Gravity_Controller::~IVP_Standard_Gravity_Controller()
000d73d0 t vphysics_save_constraintfixed_t::GetBaseMap()
0025e830 d vphysics_save_constraintfixed_t::m_DataMap
000d74a0 t vphysics_save_constrainthinge_t::GetBaseMap()
0025e818 d vphysics_save_constrainthinge_t::m_DataMap
00108cc0 t CVPhysPtrUtlVectorSaveRestoreOps::Save(SaveRestoreFieldInfo_t const&, ISave*)
00108ff0 t CVPhysPtrUtlVectorSaveRestoreOps::Restore(SaveRestoreFieldInfo_t const&, IRestore*)
0012f9f0 t hk_Ragdoll_Constraint_BP_Builder::set_ragdoll_constraint(hk_Rigid_Body*, hk_Rigid_Body*, hk_Vector3 const&, hk_Vector3 const&, hk_Vector3 const&, hk_Interval<float> const&, hk_Interval<float> const&, hk_Interval<float> const&, bool)
0012e5e0 t hk_Ragdoll_Constraint_BP_Builder::initialize_from_limited_ball_socket_bp(hk_Limited_Ball_Socket_BP const*, hk_Rigid_Body*, hk_Rigid_Body*)
00134f00 t IVP_SurfaceBuilder_Halfspacesoup::insert_point_into_list(IVP_U_Point*, IVP_U_Vector<IVP_U_Point>*, float)
00134fc0 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_points(IVP_Halfspacesoup*, float, IVP_U_Vector<IVP_U_Point>*)
001352c0 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_ledge(IVP_Halfspacesoup*, float)
00135380 t IVP_SurfaceBuilder_Halfspacesoup::convert_halfspacesoup_to_compact_surface(IVP_Halfspacesoup*, float)
00267024 b physcollideheader_t_DataDescInit::g_DataMapHolder
000d7710 t vphysics_save_constraintlength_t::GetBaseMap()
0025e7d0 d vphysics_save_constraintlength_t::m_DataMap
000d7640 t vphysics_save_constraintpulley_t::GetBaseMap()
0025e7e8 d vphysics_save_constraintpulley_t::m_DataMap
000e9df0 t vphysics_save_motioncontroller_t::GetBaseMap()
0025f860 d vphysics_save_motioncontroller_t::m_DataMap
001b5a50 t IVP_Collision_Callback_Table_Hash::object_to_index(IVP_Real_Object*)
001b59d0 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
001b5950 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
001b5950 t IVP_Collision_Callback_Table_Hash::~IVP_Collision_Callback_Table_Hash()
0017a450 t IVP_Constraint_Solver_Car_Builder::disable_constraint(int)
0017a480 t IVP_Constraint_Solver_Car_Builder::calc_pushing_behavior(int, int)
0017ad60 t IVP_Constraint_Solver_Car_Builder::calc_constraint_matrix()
0017a3a0 t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
0017a3a0 t IVP_Constraint_Solver_Car_Builder::IVP_Constraint_Solver_Car_Builder(IVP_Constraint_Solver_Car*)
0017ecd0 t IVP_Multidimensional_Interpolator::sort_vectors(int)
0017f2c0 t IVP_Multidimensional_Interpolator::get_nr_occupied()
0017f2b0 t IVP_Multidimensional_Interpolator::get_nr_of_vectors()
0017eec0 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_stochastic(IVP_MI_Vector const*, IVP_MI_Vector const*)
0017edb0 t IVP_Multidimensional_Interpolator::add_new_input_solution_combination_conventional(IVP_MI_Vector const*, IVP_MI_Vector const*)
0017ea50 t IVP_Multidimensional_Interpolator::linfit(int, int, IVP_MI_Vector**, float*, float*)
0017efb0 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
0017efb0 t IVP_Multidimensional_Interpolator::IVP_Multidimensional_Interpolator(int, int, int)
0017f200 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
0017f200 t IVP_Multidimensional_Interpolator::~IVP_Multidimensional_Interpolator()
0013a4b0 t IVP_SurfaceBuilder_Polygon_Convex::convert_template_to_ledge(IVP_Template_Polygon*)
0013a250 t IVP_SurfaceBuilder_Polygon_Convex::fill_list_with_all_triangles(IVP_U_Vector<IVP_Triangle>*)
0013a940 t IVP_SurfaceBuilder_Polygon_Convex::get_and_remove_compact_ledge()
0013a2b0 t IVP_SurfaceBuilder_Polygon_Convex::init_surface_manager_polygon()
0013a8f0 t IVP_SurfaceBuilder_Polygon_Convex::convert_templateledgepolygonsoup_to_ledge(IVP_Template_Ledge_Polygon_Soup*)
0013a420 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
0013a500 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
0013a420 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Polygon*)
0013a500 t IVP_SurfaceBuilder_Polygon_Convex::IVP_SurfaceBuilder_Polygon_Convex(IVP_Template_Ledge_Polygon_Soup*)
0013a1d0 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
0013a1d0 t IVP_SurfaceBuilder_Polygon_Convex::~IVP_SurfaceBuilder_Polygon_Convex()
001a5d40 t IVP_SurfaceManager_Polygon_Solver::traverse_cluster(IVP_Compact_Ledgetree_Node const*, IVP_U_Point const*, float, IVP_U_BigVector<IVP_Compact_Ledge>*)
00267a94 b vehicle_axleparams_t_DataDescInit::g_DataMapHolder
00267aa0 b vehicle_bodyparams_t_DataDescInit::g_DataMapHolder
000d78b0 t vphysics_save_constraintragdoll_t::GetBaseMap()
0025e7a0 d vphysics_save_constraintragdoll_t::m_DataMap
000d7570 t vphysics_save_constraintsliding_t::GetBaseMap()
0025e800 d vphysics_save_constraintsliding_t::m_DataMap
000f1b00 t vphysics_save_cshadowcontroller_t::GetBaseMap()
00260120 d vphysics_save_cshadowcontroller_t::m_DataMap
000dc1d0 t CPhysics_Car_System_Raycast_Wheels::do_raycasts(IVP_Event_Sim*, int, IVP_Ray_Solver_Template*, IVP_Ray_Hit*, float*)
000dc5a0 t CPhysics_Car_System_Raycast_Wheels::get_controller_name()
000dc4c0 t CPhysics_Car_System_Raycast_Wheels::InitCarSystemWheels(IVP_Template_Car_System const*)
000dbeb0 t CPhysics_Car_System_Raycast_Wheels::update_wheel_positions()
000dc570 t CPhysics_Car_System_Raycast_Wheels::GetWheel(int)
000dc510 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
000dc510 t CPhysics_Car_System_Raycast_Wheels::CPhysics_Car_System_Raycast_Wheels(IVP_Environment*, IVP_Template_Car_System const*)
000dc1b0 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000dc180 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000dc180 t CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
00156c70 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledge(IVP_Compact_Ledge const*)
00156cc0 t IVP_Compact_Ledge_Find_Mass_Center::integrate_ledges(IVP_U_BigVector<IVP_Compact_Ledge>*)
00156ad0 t IVP_Compact_Ledge_Find_Mass_Center::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*)
00156650 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
00156650 t IVP_Compact_Ledge_Find_Mass_Center::IVP_Compact_Ledge_Find_Mass_Center()
00267a9c b vehicle_wheelparams_t_DataDescInit::g_DataMapHolder
000d7160 t vphysics_save_cphysicsconstraint_t::GetBaseMap()
0025e878 d vphysics_save_cphysicsconstraint_t::m_DataMap
000f35b0 t vphysics_save_cvehiclecontroller_t::GetBaseMap()
00260a80 d vphysics_save_cvehiclecontroller_t::m_DataMap
00267020 b compactsurfaceheader_t_DataDescInit::g_DataMapHolder
001700d0 t IVP_Collision_Filter_Exclusive_Pair::generate_hash_entry(IVP_Real_Object*, IVP_Real_Object*, IVP_CFEP_Objectpair*)
0016fbb0 t IVP_Collision_Filter_Exclusive_Pair::environment_will_be_deleted(IVP_Environment*)
00170190 t IVP_Collision_Filter_Exclusive_Pair::enable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
00170100 t IVP_Collision_Filter_Exclusive_Pair::disable_collision_between_objects(IVP_Real_Object*, IVP_Real_Object*)
00170060 t IVP_Collision_Filter_Exclusive_Pair::check_objects_for_collision_detection(IVP_Real_Object*, IVP_Real_Object*)
001701f0 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
001701f0 t IVP_Collision_Filter_Exclusive_Pair::IVP_Collision_Filter_Exclusive_Pair()
0016fc80 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
0016fbd0 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
0016fbd0 t IVP_Collision_Filter_Exclusive_Pair::~IVP_Collision_Filter_Exclusive_Pair()
00267a8c b vehicle_engineparams_t_DataDescInit::g_DataMapHolder
000d7300 t vphysics_save_constraintaxislimit_t::GetBaseMap()
0025e848 d vphysics_save_constraintaxislimit_t::m_DataMap
000d7230 t vphysics_save_constraintbreakable_t::GetBaseMap()
0025e860 d vphysics_save_constraintbreakable_t::m_DataMap
000f1a30 t vphysics_save_shadowcontrolparams_t::GetBaseMap()
00260138 d vphysics_save_shadowcontrolparams_t::m_DataMap
001b99d0 t IVP_3D_Solver_DISTANCE_OF_TWO_POINTS::get_value(IVP_U_Matrix*, IVP_U_Matrix*)
001b5730 t IVP_Collision_Delegator_Root_Mindist::delegate_collisions_for_object(IVP_Real_Object*, IVP_Real_Object*)
001b56d0 t IVP_Collision_Delegator_Root_Mindist::collision_is_going_to_be_deleted_event(IVP_Collision*)
001b56b0 t IVP_Collision_Delegator_Root_Mindist::environment_is_going_to_be_deleted_event(IVP_Environment*)
001b5660 t IVP_Collision_Delegator_Root_Mindist::object_is_removed_from_collision_detection(IVP_Real_Object*)
001b57e0 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
001b57e0 t IVP_Collision_Delegator_Root_Mindist::IVP_Collision_Delegator_Root_Mindist()
001b57c0 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
001b57b0 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
001b57b0 t IVP_Collision_Delegator_Root_Mindist::~IVP_Collision_Delegator_Root_Mindist()
00156670 t IVP_Compact_Ledge_Mass_Center_Solver::integrate_triangle(IVP_Compact_Ledge const*, IVP_Compact_Triangle const*, int, int, int)
00156630 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
00156630 t IVP_Compact_Ledge_Mass_Center_Solver::IVP_Compact_Ledge_Mass_Center_Solver(IVP_U_Matrix const*)
001a4db0 t IVP_Liquid_Surface_Descriptor_Simple::calc_liquid_surface(IVP_Environment*, IVP_Core*, IVP_U_Float_Hesse*, IVP_U_Float_Point*)
001a4e60 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
001a4e60 t IVP_Liquid_Surface_Descriptor_Simple::IVP_Liquid_Surface_Descriptor_Simple(IVP_U_Float_Hesse const*, IVP_U_Float_Point const*)
001a4ee0 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
001a4ed0 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
001a4ed0 t IVP_Liquid_Surface_Descriptor_Simple::~IVP_Liquid_Surface_Descriptor_Simple()
000d77e0 t vphysics_save_constraintballsocket_t::GetBaseMap()
0025e7b8 d vphysics_save_constraintballsocket_t::m_DataMap
00267a90 b vehicle_steeringparams_t_DataDescInit::g_DataMapHolder
00267aa4 b vehicle_operatingparams_t_DataDescInit::g_DataMapHolder
001a3d50 t IVP_BetterStatisticsmanager_Data_Entity::set_position(int, int)
001a3bb0 t IVP_BetterStatisticsmanager_Data_Entity::set_int_value(int)
001a3bd0 t IVP_BetterStatisticsmanager_Data_Entity::set_array_size(int)
001a3bc0 t IVP_BetterStatisticsmanager_Data_Entity::set_double_value(float)
001a3c40 t IVP_BetterStatisticsmanager_Data_Entity::set_int_array_latest_value(int)
001a3c90 t IVP_BetterStatisticsmanager_Data_Entity::set_double_array_latest_value(float)
001a3ce0 t IVP_BetterStatisticsmanager_Data_Entity::enable()
001a3cf0 t IVP_BetterStatisticsmanager_Data_Entity::disable()
001a3d10 t IVP_BetterStatisticsmanager_Data_Entity::set_text(char const*)
001a3d00 t IVP_BetterStatisticsmanager_Data_Entity::get_state()
001a3d70 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
001a3d70 t IVP_BetterStatisticsmanager_Data_Entity::IVP_BetterStatisticsmanager_Data_Entity(IVP_BETTERSTATISTICSMANAGER_DATA_ENTITY_TYPE)
001a3e80 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
001a3e80 t IVP_BetterStatisticsmanager_Data_Entity::~IVP_BetterStatisticsmanager_Data_Entity()
00267a98 b vehicle_suspensionparams_t_DataDescInit::g_DataMapHolder
000d6ff0 t vphysics_save_cphysicsconstraintgroup_t::GetBaseMap()
0025e890 d vphysics_save_cphysicsconstraintgroup_t::m_DataMap
00057130 t NXU::C_Accessor::setText(NXU::CELEMENT, char const*)
0005c690 t NXU::C_Accessor::~C_Accessor()
0005c5f0 t NXU::C_Accessor::~C_Accessor()
0005c5f0 t NXU::C_Accessor::~C_Accessor()
0005b6b0 t NXU::C_Geometry::getMesh(NXU::NxuPhysicsCollection*, NXU::C_Query*)
00057210 t NXU::C_Geometry::setText(NXU::CELEMENT, char const*)
000586f0 t NXU::C_Geometry::~C_Geometry()
00057ec0 t NXU::C_Geometry::~C_Geometry()
00057ec0 t NXU::C_Geometry::~C_Geometry()
00057c10 t NXU::C_IntArray::setText(NXU::CELEMENT, char const*)
00057e60 t NXU::C_IntArray::~C_IntArray()
000574e0 t NXU::C_IntArray::~C_IntArray()
000574e0 t NXU::C_IntArray::~C_IntArray()
00075af0 t NXU::ConvexHDup(NXU::ConvexH*)
00061520 t NXU::copyBuffer(NxArray<NxVec3, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
00061340 t NXU::copyBuffer(NxArray<float, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
00061120 t NXU::copyBuffer(NxArray<unsigned char, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
00061230 t NXU::copyBuffer(NxArray<unsigned int, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
00061640 t NXU::copyBuffer(NxArray<NXU::NxTri, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
00061890 t NXU::copyBuffer(NxArray<NXU::NxTetra, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
00061430 t NXU::copyBuffer(NxArray<unsigned short, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
00066360 t NXU::createHull(unsigned int, float const*, NXU::NxuGeometry&, NxMat34 const*, float, unsigned int)
000610e0 t NXU::CreatePMap(NxPMap&, NxTriangleMesh const&, unsigned int, NxUserOutputStream*)
000631c0 t NXU::CustomCopy::customCopyTo(NxActorDesc&, NXU::NxActorDesc const&)
00063170 t NXU::CustomCopy::customCopyTo(NxClothDesc&, NXU::NxClothDesc const&)
000631f0 t NXU::CustomCopy::customCopyTo(NxFluidDesc&, NXU::NxFluidDesc const&)
000620f0 t NXU::CustomCopy::customCopyTo(NxJointDesc&, NXU::NxJointDesc const&)
00061fe0 t NXU::CustomCopy::customCopyTo(NxSceneDesc&, NXU::NxSceneDesc const&)
00063d90 t NXU::CustomCopy::customCopyTo(NxShapeDesc&, NXU::NxShapeDesc const&)
00061ef0 t NXU::CustomCopy::customCopyTo(NxMaterialDesc&, NXU::NxMaterialDesc const&)
00062730 t NXU::CustomCopy::customCopyTo(NxParticleData&, NXU::NxParticleData const&)
00064060 t NXU::CustomCopy::customCopyTo(NxSoftBodyDesc&, NXU::NxSoftBodyDesc const&)
000624f0 t NXU::CustomCopy::customCopyTo(NxClothMeshDesc&, NXU::NxClothMeshDesc const&)
00061bd0 t NXU::CustomCopy::customCopyTo(NxConvexMeshDesc&, NXU::NxConvexMeshDesc const&)
00064dc0 t NXU::CustomCopy::customCopyTo(NxForceFieldDesc&, NXU::NxForceFieldDesc const&)
00062960 t NXU::CustomCopy::customCopyTo(NxConvexShapeDesc&, NXU::NxConvexShapeDesc const&)
00062450 t NXU::CustomCopy::customCopyTo(NxHeightFieldDesc&, NXU::NxHeightFieldDesc const&)
00061f40 t NXU::CustomCopy::customCopyTo(NxFluidEmitterDesc&, NXU::NxFluidEmitterDesc const&)
00063f20 t NXU::CustomCopy::customCopyTo(NxSoftBodyMeshDesc&, NXU::NxSoftBodyMeshDesc const&)
00061e90 t NXU::CustomCopy::customCopyTo(NxTriangleMeshDesc&, NXU::NxTriangleMeshDesc const&)
000623c0 t NXU::CustomCopy::customCopyTo(NxSimpleTriangleMesh&, NXU::NxSimpleTriangleMesh const&)
00061f20 t NXU::CustomCopy::customCopyTo(NxForceFieldShapeDesc&, NXU::NxForceFieldShapeDesc const&)
00062ca0 t NXU::CustomCopy::customCopyTo(NxHeightFieldShapeDesc&, NXU::NxHeightFieldShapeDesc const&)
00062b70 t NXU::CustomCopy::customCopyTo(NxTriangleMeshShapeDesc&, NXU::NxTriangleMeshShapeDesc const&)
00064d90 t NXU::CustomCopy::customCopyTo(NxForceFieldShapeGroupDesc&, NXU::NxForceFieldShapeGroupDesc const&)
00062990 t NXU::CustomCopy::customCopyTo(NxConvexForceFieldShapeDesc&, NXU::NxConvexForceFieldShapeDesc const&)
000620a0 t NXU::CustomCopy::customCopyTo(NxSpringAndDamperEffectorDesc&, NXU::NxSpringAndDamperEffectorDesc const&)
000639c0 t NXU::CustomCopy::customCopyFrom(NXU::NxActorDesc&, NxActorDesc const&)
00063910 t NXU::CustomCopy::customCopyFrom(NXU::NxClothDesc&, NxClothDesc const&)
00063960 t NXU::CustomCopy::customCopyFrom(NXU::NxFluidDesc&, NxFluidDesc const&)
00062200 t NXU::CustomCopy::customCopyFrom(NXU::NxJointDesc&, NxJointDesc const&)
00061f50 t NXU::CustomCopy::customCopyFrom(NXU::NxSceneDesc&, NxSceneDesc const&)
00063e30 t NXU::CustomCopy::customCopyFrom(NXU::NxShapeDesc&, NxShapeDesc const&)
00061eb0 t NXU::CustomCopy::customCopyFrom(NXU::NxMaterialDesc&, NxMaterialDesc const&)
00062580 t NXU::CustomCopy::customCopyFrom(NXU::NxParticleData&, NxParticleData const&)
00064110 t NXU::CustomCopy::customCopyFrom(NXU::NxSoftBodyDesc&, NxSoftBodyDesc const&)
00062480 t NXU::CustomCopy::customCopyFrom(NXU::NxClothMeshDesc&, NxClothMeshDesc const&)
00061ae0 t NXU::CustomCopy::customCopyFrom(NXU::NxConvexMeshDesc&, NxConvexMeshDesc const&)
000647a0 t NXU::CustomCopy::customCopyFrom(NXU::NxForceFieldDesc&, NxForceFieldDesc const&)
00062a90 t NXU::CustomCopy::customCopyFrom(NXU::NxConvexShapeDesc&, NxConvexShapeDesc const&)
00062410 t NXU::CustomCopy::customCopyFrom(NXU::NxHeightFieldDesc&, NxHeightFieldDesc const&)
00061f30 t NXU::CustomCopy::customCopyFrom(NXU::NxFluidEmitterDesc&, NxFluidEmitterDesc const&)
00063e70 t NXU::CustomCopy::customCopyFrom(NXU::NxSoftBodyMeshDesc&, NxSoftBodyMeshDesc const&)
00061c30 t NXU::CustomCopy::customCopyFrom(NXU::NxTriangleMeshDesc&, NxTriangleMeshDesc const&)
00062350 t NXU::CustomCopy::customCopyFrom(NXU::NxSimpleTriangleMesh&, NxSimpleTriangleMesh const&)
00061f10 t NXU::CustomCopy::customCopyFrom(NXU::NxForceFieldShapeDesc&, NxForceFieldShapeDesc const&)
00062d30 t NXU::CustomCopy::customCopyFrom(NXU::NxHeightFieldShapeDesc&, NxHeightFieldShapeDesc const&)
00062bf0 t NXU::CustomCopy::customCopyFrom(NXU::NxTriangleMeshShapeDesc&, NxTriangleMeshShapeDesc const&)
00064780 t NXU::CustomCopy::customCopyFrom(NXU::NxForceFieldShapeGroupDesc&, NxForceFieldShapeGroupDesc const&)
00062ac0 t NXU::CustomCopy::customCopyFrom(NXU::NxConvexForceFieldShapeDesc&, NxConvexForceFieldShapeDesc const&)
000621b0 t NXU::CustomCopy::customCopyFrom(NXU::NxSpringAndDamperEffectorDesc&, NxSpringAndDamperEffectorDesc const&)
00063b90 t NXU::CustomCopy::initCollection()
00062250 t NXU::CustomCopy::locateSceneDesc(NXU::NxuPhysicsCollection*, char const*, unsigned int&)
00062020 t NXU::CustomCopy::getActorFromName(char const*)
00062140 t NXU::CustomCopy::getNameFromActor(NxActor*)
00063de0 t NXU::CustomCopy::getNameFromSkeleton(NxCCDSkeleton*)
00063d10 t NXU::CustomCopy::getSkeletonFromName(char const*)
00063020 t NXU::CustomCopy::getClothMeshFromName(char const*)
000630a0 t NXU::CustomCopy::getNameFromClothMesh(NxClothMesh*)
000628c0 t NXU::CustomCopy::getConvexMeshFromName(char const*)
00062d60 t NXU::CustomCopy::getForceFieldFromName(char const*)
00062a40 t NXU::CustomCopy::getNameFromConvexMesh(NxConvexMesh*)
00062de0 t NXU::CustomCopy::getNameFromForceField(NxForceField*)
00062010 t NXU::CustomCopy::getRemapMaterialIndex(unsigned short)
00064970 t NXU::CustomCopy::copyForceFieldShapesTo(NxArray<NxForceFieldShapeDesc*, NxAllocatorDefault>&, NxArray<NXU::NxForceFieldShapeDesc*, NxAllocatorDefault> const&, char const*)
000630f0 t NXU::CustomCopy::getCompartmentFromName(char const*)
00062c20 t NXU::CustomCopy::getHeightFieldFromName(char const*)
00063690 t NXU::CustomCopy::getNameFromCompartment(NxCompartment*)
00062ce0 t NXU::CustomCopy::getNameFromHeightField(NxHeightField*)
000640b0 t NXU::CustomCopy::getNameFromSoftBodyMesh(NxSoftBodyMesh*)
00062ba0 t NXU::CustomCopy::getNameFromTriangleMesh(NxTriangleMesh*)
00063fe0 t NXU::CustomCopy::getSoftBodyMeshFromName(char const*)
00062af0 t NXU::CustomCopy::getTriangleMeshFromName(char const*)
000622d0 t NXU::CustomCopy::locateSceneInstanceDesc(NXU::NxuPhysicsCollection*, char const*, unsigned int&)
00064160 t NXU::CustomCopy::copyForceFieldShapesFrom(NxForceFieldShapeGroup*, NxArray<NXU::NxForceFieldShapeDesc*, NxAllocatorDefault>&)
000629c0 t NXU::CustomCopy::getConvexMeshDescFromName(char const*)
00062e50 t NXU::CustomCopy::getForceFieldShapeGroupFromName(char const*)
00062ed0 t NXU::CustomCopy::getNameFromForceFieldShapeGroup(NxForceFieldShapeGroup*)
00062f30 t NXU::CustomCopy::getForceFieldLinearKernelFromName(char const*)
00062fb0 t NXU::CustomCopy::getNameFromForceFieldLinearKernel(NxForceFieldLinearKernel*)
00063a30 t NXU::CustomCopy::initScene()
000571b0 t NXU::C_Vertices::setText(NXU::CELEMENT, char const*)
0005c810 t NXU::C_Vertices::~C_Vertices()
0005c770 t NXU::C_Vertices::~C_Vertices()
0005c770 t NXU::C_Vertices::~C_Vertices()
000743a0 t NXU::extrudable(float)
000bd030 t NXU::getElement(char const*)
000700c0 t NXU::Homogenize(NXU::float3 const&, float const&)
0009fa90 t NXU::NxBodyDesc::load(NXU::SchemaStream&, char const*)
0009f420 t NXU::NxBodyDesc::store(NXU::SchemaStream&, char const*)
0009feb0 t NXU::NxBodyDesc::copyTo(NxBodyDesc&, NXU::CustomCopy&)
0009fdc0 t NXU::NxBodyDesc::copyFrom(NxBodyDesc const&, NXU::CustomCopy&)
0009f370 t NXU::NxBodyDesc::NxBodyDesc()
0009f370 t NXU::NxBodyDesc::NxBodyDesc()
0009f410 t NXU::NxBodyDesc::~NxBodyDesc()
0009f410 t NXU::NxBodyDesc::~NxBodyDesc()
00065790 t NXU::nxu_fclose(NXU::NXU_FILE*)
00065e00 t NXU::nxu_ferror(NXU::NXU_FILE*)
00065b20 t NXU::nxu_fflush(NXU::NXU_FILE*)
000658a0 t NXU::nxu_fwrite(void const*, int, int, NXU::NXU_FILE*)
00071160 t NXU::Quaternion::Normalize()
000c5430 t NXU::UserStream::storeDword(unsigned int)
000c53f0 t NXU::UserStream::storeFloat(float)
000c5370 t NXU::UserStream::storeBuffer(void const*, unsigned int)
000c53b0 t NXU::UserStream::storeDouble(double)
000c54b0 t NXU::UserStream::storeByte(unsigned char)
000c5470 t NXU::UserStream::storeWord(unsigned short)
000c5690 t NXU::UserStream::UserStream(char const*, bool)
000c5690 t NXU::UserStream::UserStream(char const*, bool)
000c5670 t NXU::UserStream::~UserStream()
000c5630 t NXU::UserStream::~UserStream()
000c5630 t NXU::UserStream::~UserStream()
0006b190 t NXU::addEffector(NXU::NxuPhysicsCollection&, NxEffector&, char const*, char const*)
0006af50 t NXU::addMaterial(NXU::NxuPhysicsCollection&, NxMaterial&, char const*, char const*)
0006b3c0 t NXU::addPairFlag(NXU::NxuPhysicsCollection&, NxPairFlag&, char const*, char const*)
0006d590 t NXU::addSoftBody(NXU::NxuPhysicsCollection&, NxSoftBody&, char const*, char const*)
0006e440 t NXU::addSoftBody(NXU::NxuPhysicsCollection&, NxSoftBodyDesc const&, NxSoftBodyMeshDesc const&, char const*, char const*)
00077360 t NXU::calchullgen(NXU::float3*, int, int)
00057010 t NXU::C_BoolArray::setText(NXU::CELEMENT, char const*)
00057650 t NXU::C_BoolArray::~C_BoolArray()
00056ff0 t NXU::C_BoolArray::~C_BoolArray()
00056ff0 t NXU::C_BoolArray::~C_BoolArray()
00057090 t NXU::C_NameArray::setText(NXU::CELEMENT, char const*)
00057630 t NXU::C_NameArray::~C_NameArray()
00057070 t NXU::C_NameArray::~C_NameArray()
00057070 t NXU::C_NameArray::~C_NameArray()
00078960 t NXU::ComputeHull(unsigned int, float const*, NXU::PHullResult&, unsigned int, float)
00075b90 t NXU::ConvexHCrop(NXU::ConvexH&, NXU::Plane const&)
00057c60 t NXU::C_RigidBody::setText(NXU::CELEMENT, char const*)
0005af90 t NXU::C_RigidBody::getActor(NXU::NxSceneDesc*, NXU::C_Query*, NxMat34 const&, NxVec3 const&, NxVec3 const&)
00058570 t NXU::C_RigidBody::~C_RigidBody()
00057f70 t NXU::C_RigidBody::~C_RigidBody()
00057f70 t NXU::C_RigidBody::~C_RigidBody()
00059bc0 t NXU::C_Triangles::getTriangleMesh(NXU::C_TriangleMesh&, NXU::C_Source*, NXU::C_Vertices*)
000571d0 t NXU::C_Triangles::setText(NXU::CELEMENT, char const*)
0005c8f0 t NXU::C_Triangles::C_Triangles(NXU::TiXmlElement*, NXU::InputType)
0005c8f0 t NXU::C_Triangles::C_Triangles(NXU::TiXmlElement*, NXU::InputType)
0005cb10 t NXU::C_Triangles::~C_Triangles()
0005ca10 t NXU::C_Triangles::~C_Triangles()
0005ca10 t NXU::C_Triangles::~C_Triangles()
0006f4b0 t NXU::Determinant(NXU::float3x3 const&)
00076cd0 t NXU::FindSimplex(NXU::float3*, int, NXU::Array<int>&)
0006e650 t NXU::getKeyValue(char const*, char const*)
00264580 b NXU::gSaveCooked
00075120 t NXU::HullLibrary::ComputeNormal(float*, float const*, float const*, float const*)
000745e0 t NXU::HullLibrary::ReleaseResult(NXU::HullResult&)
00074670 t NXU::HullLibrary::CleanupVertices(unsigned int, float const*, unsigned int, unsigned int&, float*, float, float*)
00075020 t NXU::HullLibrary::BringOutYourDead(float const*, unsigned int, float*, unsigned int&, unsigned int*, unsigned int)
000796a0 t NXU::HullLibrary::CreateConvexHull(NXU::HullDesc const&, NXU::HullResult&)
00075210 t NXU::HullLibrary::AddConvexTriangle(NXU::ConvexHullTriangleInterface*, float const*, float const*, float const*)
000753d0 t NXU::HullLibrary::CreateTriangleMesh(NXU::HullResult&, NXU::ConvexHullTriangleInterface*)
000610c0 t NXU::InitCooking()
0006ed30 t NXU::Interpolate(float const&, float const&, float)
000717a0 t NXU::Interpolate(NXU::Quaternion const&, NXU::Quaternion const&, float)
0006f3a0 t NXU::Interpolate(NXU::float3 const&, NXU::float3 const&, float)
00072750 t NXU::LineProject(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&)
0025e490 d NXU::minadjangle
000a3af0 t NXU::NxActorDesc::load(NXU::SchemaStream&, char const*)
000a34f0 t NXU::NxActorDesc::store(NXU::SchemaStream&, char const*)
000a41c0 t NXU::NxActorDesc::copyTo(NxActorDesc&, NXU::CustomCopy&)
000a4110 t NXU::NxActorDesc::copyFrom(NxActorDesc const&, NXU::CustomCopy&)
000a3330 t NXU::NxActorDesc::NxActorDesc()
000a3330 t NXU::NxActorDesc::NxActorDesc()
000a3460 t NXU::NxActorDesc::~NxActorDesc()
000a3460 t NXU::NxActorDesc::~NxActorDesc()
000aeb10 t NXU::NxClothDesc::load(NXU::SchemaStream&, char const*)
000ae0a0 t NXU::NxClothDesc::store(NXU::SchemaStream&, char const*)
000af3a0 t NXU::NxClothDesc::copyTo(NxClothDesc&, NXU::CustomCopy&)
000af1d0 t NXU::NxClothDesc::copyFrom(NxClothDesc const&, NXU::CustomCopy&)
000ade30 t NXU::NxClothDesc::NxClothDesc()
000ade30 t NXU::NxClothDesc::NxClothDesc()
000adfe0 t NXU::NxClothDesc::~NxClothDesc()
000adfe0 t NXU::NxClothDesc::~NxClothDesc()
000ad1c0 t NXU::NxFluidDesc::load(NXU::SchemaStream&, char const*)
000ac450 t NXU::NxFluidDesc::store(NXU::SchemaStream&, char const*)
000adc70 t NXU::NxFluidDesc::copyTo(NxFluidDesc&, NXU::CustomCopy&)
000adab0 t NXU::NxFluidDesc::copyFrom(NxFluidDesc const&, NXU::CustomCopy&)
000ac180 t NXU::NxFluidDesc::NxFluidDesc()
000ac180 t NXU::NxFluidDesc::NxFluidDesc()
000ac3c0 t NXU::NxFluidDesc::~NxFluidDesc()
000ac3c0 t NXU::NxFluidDesc::~NxFluidDesc()
000a4d20 t NXU::NxJointDesc::load(NXU::SchemaStream&, char const*)
000a4630 t NXU::NxJointDesc::store(NXU::SchemaStream&, char const*)
000a5300 t NXU::NxJointDesc::copyTo(NxJointDesc&, NXU::CustomCopy&)
000a5250 t NXU::NxJointDesc::copyFrom(NxJointDesc const&, NXU::CustomCopy&)
000a44c0 t NXU::NxJointDesc::NxJointDesc()
000a44c0 t NXU::NxJointDesc::NxJointDesc()
000a45a0 t NXU::NxJointDesc::~NxJointDesc()
000a45a0 t NXU::NxJointDesc::~NxJointDesc()
000a8940 t NXU::NxMotorDesc::load(NXU::SchemaStream&, char const*)
000a8810 t NXU::NxMotorDesc::store(NXU::SchemaStream&, char const*)
000a8a10 t NXU::NxMotorDesc::copyTo(NxMotorDesc&, NXU::CustomCopy&)
000a89f0 t NXU::NxMotorDesc::copyFrom(NxMotorDesc const&, NXU::CustomCopy&)
000a87d0 t NXU::NxMotorDesc::NxMotorDesc()
000a87d0 t NXU::NxMotorDesc::NxMotorDesc()
000a8800 t NXU::NxMotorDesc::~NxMotorDesc()
000a8800 t NXU::NxMotorDesc::~NxMotorDesc()
000b7000 t NXU::NxSceneDesc::load(NXU::SchemaStream&, char const*)
000b5be0 t NXU::NxSceneDesc::store(NXU::SchemaStream&, char const*)
000b96a0 t NXU::NxSceneDesc::copyTo(NxSceneDesc&, NXU::CustomCopy&)
000b9570 t NXU::NxSceneDesc::copyFrom(NxSceneDesc const&, NXU::CustomCopy&)
000b5030 t NXU::NxSceneDesc::NxSceneDesc()
000b5030 t NXU::NxSceneDesc::NxSceneDesc()
000b5410 t NXU::NxSceneDesc::~NxSceneDesc()
000b5410 t NXU::NxSceneDesc::~NxSceneDesc()
000a0920 t NXU::NxShapeDesc::load(NXU::SchemaStream&, char const*)
000a03c0 t NXU::NxShapeDesc::store(NXU::SchemaStream&, char const*)
000a0d20 t NXU::NxShapeDesc::copyTo(NxShapeDesc&, NXU::CustomCopy&)
000a0c70 t NXU::NxShapeDesc::copyFrom(NxShapeDesc const&, NXU::CustomCopy&)
000a0310 t NXU::NxShapeDesc::NxShapeDesc()
000a0310 t NXU::NxShapeDesc::NxShapeDesc()
000a03b0 t NXU::NxShapeDesc::~NxShapeDesc()
000a03b0 t NXU::NxShapeDesc::~NxShapeDesc()
000659d0 t NXU::nxu_fprintf(NXU::NXU_FILE*, char const*, ...)
00074590 t NXU::ReleaseHull(NXU::PHullResult&)
000610f0 t NXU::ReleasePMap(NxPMap&)
000c5b70 t NXU::reportError(char const*, ...)
00072240 t NXU::RotationArc(NXU::float3, NXU::float3)
00051e50 t NXU::SaveCollada::saveColladaFile(NXU::NxuPhysicsCollection*, NXU::NXU_FILE*, char const*)
00051a30 t NXU::SaveCollada::savePhysicsMaterial(NXU::NXU_FILE*, NXU::NxMaterialDesc*, int, int)
0004e490 t NXU::SaveCollada::saveRigidConstraint(NXU::NXU_FILE*, NXU::NxJointDesc*, int, NXU::NxSceneDesc*)
0004e220 t NXU::SaveCollada::fstring(float)
0004e340 t NXU::SaveCollada::getName(char const*, int, int)
0006a900 t NXU::saveCOLLADA(NXU::NxuPhysicsCollection*, char const*)
0006a8e0 t NXU::saveCOLLADA(NXU::NxuPhysicsCollection*, NXU::NXU_FILE*, char const*)
00065200 t NXU::scalePoints(NXU::NxConvexMeshDesc&, NxVec3 const&)
00065270 t NXU::scalePoints(NXU::NxTriangleMeshDesc&, NxVec3 const&)
000c4ac0 t NXU::SchemaBlock::add(bool, char const*, ...)
000c5ac0 t NXU::setInstance(char const*, void*)
001e9374 r NXU::TiXmlString::npos
000c5dc0 t NXU::TiXmlString::append(char const*, unsigned int)
000c5ce0 t NXU::TiXmlString::assign(char const*, unsigned int)
000c5c30 t NXU::TiXmlString::reserve(unsigned int)
00266b00 b NXU::TiXmlString::nullrep_
000c5fe0 t NXU::TiXmlString::~TiXmlString()
000c5fe0 t NXU::TiXmlString::~TiXmlString()
0006d600 t NXU::addClothMesh(NXU::NxuPhysicsCollection&, NxClothMesh&, char const*)
0006ab50 t NXU::addParameter(NXU::NxuPhysicsCollection&, unsigned int, float)
00073c50 t NXU::AssertIntact(NXU::ConvexH&)
00072a20 t NXU::BoxIntersect(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3*)
00077ce0 t NXU::calchullpbev(NXU::float3*, int, int, NXU::Array<NXU::Plane>&, float)
00057bc0 t NXU::C_FloatArray::setText(NXU::CELEMENT, char const*)
00057e90 t NXU::C_FloatArray::~C_FloatArray()
000574b0 t NXU::C_FloatArray::~C_FloatArray()
000574b0 t NXU::C_FloatArray::~C_FloatArray()
000570d0 t NXU::C_IDREFArray::setText(NXU::CELEMENT, char const*)
00057610 t NXU::C_IDREFArray::~C_IDREFArray()
000570b0 t NXU::C_IDREFArray::~C_IDREFArray()
000570b0 t NXU::C_IDREFArray::~C_IDREFArray()
000610d0 t NXU::CloseCooking()
00061760 t NXU::copyBuffer16(NxArray<NXU::NxTri, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
000619b0 t NXU::copyBuffer16(NxArray<NXU::NxTetra, NxAllocatorDefault>&, void const*, unsigned int, unsigned int)
002655a0 b NXU::countpolyhit
00066770 t NXU::createSphere(float, NXU::NxuGeometry&, NxMat34 const*, int, float, unsigned int)
000979b0 t NXU::EnumToString(NXU::NxBodyFlag)
00097100 t NXU::EnumToString(NXU::NxFilterOp)
00097c80 t NXU::EnumToString(NXU::NxActorFlag)
00099b20 t NXU::EnumToString(NXU::NxClothFlag)
000996f0 t NXU::EnumToString(NXU::NxFluidFlag)
00098bd0 t NXU::EnumToString(NXU::NxJointFlag)
000989e0 t NXU::EnumToString(NXU::NxJointType)
00096b90 t NXU::EnumToString(NXU::NxMeshFlags)
000955a0 t NXU::EnumToString(NXU::NxParameter)
00098190 t NXU::EnumToString(NXU::NxShapeFlag)
00097de0 t NXU::EnumToString(NXU::NxShapeType)
00097510 t NXU::EnumToString(NXU::NxSceneFlags)
0009ac00 t NXU::EnumToString(NXU::SCHEMA_CLASS)
00097770 t NXU::EnumToString(NXU::NxCombineMode)
00096940 t NXU::EnumToString(NXU::NxConvexFlags)
00098ed0 t NXU::EnumToString(NXU::NxD6JointFlag)
000998e0 t NXU::EnumToString(NXU::NxEmitterType)
00099980 t NXU::EnumToString(NXU::NxEmitterShape)
00097880 t NXU::EnumToString(NXU::NxMaterialFlag)
0009a740 t NXU::EnumToString(NXU::NxSoftBodyFlag)
00098c70 t NXU::EnumToString(NXU::NxD6JointMotion)
0009aba0 t NXU::EnumToString(NXU::NxMeshDataFlags)
00098940 t NXU::EnumToString(NXU::NxMeshShapeFlag)
000967c0 t NXU::EnumToString(NXU::NxBroadPhaseType)
00096cb0 t NXU::EnumToString(NXU::NxClothMeshFlags)
0009a0d0 t NXU::EnumToString(NXU::NxForceFieldType)
00098860 t NXU::EnumToString(NXU::NxMeshPagingMode)
00097330 t NXU::EnumToString(NXU::NxSimulationType)
000973d0 t NXU::EnumToString(NXU::NxThreadPriority)
00097290 t NXU::EnumToString(NXU::NxTimeStepMethod)
00096860 t NXU::EnumToString(NXU::NxCompartmentFlag)
000965a0 t NXU::EnumToString(NXU::NxCompartmentType)
000992c0 t NXU::EnumToString(NXU::NxContactPairFlag)
0009a210 t NXU::EnumToString(NXU::NxForceFieldFlags)
00096ab0 t NXU::EnumToString(NXU::NxHeightFieldAxis)
00099220 t NXU::EnumToString(NXU::NxPulleyJointFlag)
00098700 t NXU::EnumToString(NXU::NxWheelShapeFlags)
000986a0 t NXU::EnumToString(NXU::NxCapsuleShapeFlag)
00096f10 t NXU::EnumToString(NXU::NxClothVertexFlags)
00098d50 t NXU::EnumToString(NXU::NxD6JointDriveType)
00099a20 t NXU::EnumToString(NXU::NxFluidEmitterFlag)
00096c50 t NXU::EnumToString(NXU::NxHeightFieldFlags)
00096680 t NXU::EnumToString(NXU::NxPruningStructure)
00098f70 t NXU::EnumToString(NXU::NxDistanceJointFlag)
00099030 t NXU::EnumToString(NXU::NxRevoluteJointFlag)
0009a490 t NXU::EnumToString(NXU::NxSoftBodyMeshFlags)
000990f0 t NXU::EnumToString(NXU::NxSphericalJointFlag)
00098df0 t NXU::EnumToString(NXU::NxJointProjectionMode)
0009a550 t NXU::EnumToString(NXU::NxSoftBodyVertexFlags)
00099650 t NXU::EnumToString(NXU::NxFluidCollisionMethod)
00097fa0 t NXU::EnumToString(NXU::NxShapeCompartmentType)
00099590 t NXU::EnumToString(NXU::NxFluidSimulationMethod)
00099fc0 t NXU::EnumToString(NXU::NxForceFieldCoordinates)
0009ab00 t NXU::EnumToString(NXU::NxSoftBodyAttachmentFlag)
0009a430 t NXU::EnumToString(NXU::NxForceFieldShapeGroupFlags)
000c5a60 t NXU::findInstance(char const*)
0004e180 t NXU::getJointType(NXU::SCHEMA_CLASS)
0006b750 t NXU::getSceneName(NXU::NxuPhysicsCollection&, unsigned int)
0004e160 t NXU::getShapeType(NXU::SCHEMA_CLASS)
00070460 t NXU::MatrixLookAt(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&)
00079f20 t int NXU::maxdirsterid<NXU::float3>(NXU::float3 const*, int, NXU::float3 const&, NXU::Array<int>&)
0009ded0 t NXU::NxGroupsMask::load(NXU::SchemaStream&, char const*)
0009dd70 t NXU::NxGroupsMask::store(NXU::SchemaStream&, char const*)
0009dfd0 t NXU::NxGroupsMask::copyTo(NxGroupsMask&, NXU::CustomCopy&)
0009dfa0 t NXU::NxGroupsMask::copyFrom(NxGroupsMask const&, NXU::CustomCopy&)
0009dd30 t NXU::NxGroupsMask::NxGroupsMask()
0009dd30 t NXU::NxGroupsMask::NxGroupsMask()
0009dd60 t NXU::NxGroupsMask::~NxGroupsMask()
0009dd60 t NXU::NxGroupsMask::~NxGroupsMask()
0009e860 t NXU::NxSpringDesc::load(NXU::SchemaStream&, char const*)
0009e720 t NXU::NxSpringDesc::store(NXU::SchemaStream&, char const*)
0009e930 t NXU::NxSpringDesc::copyTo(NxSpringDesc&, NXU::CustomCopy&)
0009e910 t NXU::NxSpringDesc::copyFrom(NxSpringDesc const&, NXU::CustomCopy&)
0009e6f0 t NXU::NxSpringDesc::NxSpringDesc()
0009e6f0 t NXU::NxSpringDesc::NxSpringDesc()
0009e710 t NXU::NxSpringDesc::~NxSpringDesc()
0009e710 t NXU::NxSpringDesc::~NxSpringDesc()
000726d0 t NXU::PlaneProject(NXU::Plane const&, NXU::float3 const&)
00085b40 t NXU::sameMaterial(NXU::NxMaterialDesc&, NxMaterialDesc&)
000bd1c0 t NXU::SchemaHeader::isValid()
000bd1f0 t NXU::SchemaStream::invalidate(char const*, ...)
000c3810 t NXU::SchemaStream::peekHeader(int, int*, int, int, int, int, int, int, int, int, int, int)
000c0690 t NXU::SchemaStream::beginHeader(int, char const*)
000c3650 t NXU::SchemaStream::peekReadMem(void*, unsigned int)
000c3f50 t NXU::SchemaStream::getMemBuffer(int&)
000bd400 t NXU::SchemaStream::setCurrentActor(NXU::NxActorDesc*)
000bd460 t NXU::SchemaStream::setCurrentCloth(NXU::NxClothDesc*)
000bd440 t NXU::SchemaStream::setCurrentFluid(NXU::NxFluidDesc*)
000bd3e0 t NXU::SchemaStream::setCurrentJoint(NXU::NxJointDesc*)
000bd3c0 t NXU::SchemaStream::setCurrentScene(NXU::NxSceneDesc*)
000bd420 t NXU::SchemaStream::setCurrentShape(NXU::NxShapeDesc*)
000bd3a0 t NXU::SchemaStream::setCurrentCollection(NXU::NxuPhysicsCollection*)
000c1580 t NXU::SchemaStream::load(NxQuat&, char const*, bool)
000c1100 t NXU::SchemaStream::load(NxVec3&, char const*, bool)
000c27a0 t NXU::SchemaStream::load(NxArray<NxVec3, NxAllocatorDefault>&, char const*, bool)
000c16d0 t NXU::SchemaStream::load(NxArray<float, NxAllocatorDefault>&, char const*, bool)
000c00e0 t NXU::SchemaStream::load(NxArray<unsigned char, NxAllocatorDefault>&, char const*, bool)
000c1ec0 t NXU::SchemaStream::load(NxArray<unsigned int, NxAllocatorDefault>&, char const*, bool)
000c2cc0 t NXU::SchemaStream::load(NxArray<NXU::NxTri, NxAllocatorDefault>&, char const*, bool)
000c31c0 t NXU::SchemaStream::load(NxArray<NXU::NxTetra, NxAllocatorDefault>&, char const*, bool)
000c2330 t NXU::SchemaStream::load(NxArray<unsigned short, NxAllocatorDefault>&, char const*, bool)
000c1cd0 t NXU::SchemaStream::load(NxMat33&, char const*, bool)
000c13a0 t NXU::SchemaStream::load(NxMat34&, char const*, bool)
000c0fb0 t NXU::SchemaStream::load(NxPlane&, char const*, bool)
000c0c80 t NXU::SchemaStream::load(NxBounds3&, char const*, bool)
000c0e20 t NXU::SchemaStream::load(float&, char const*, bool)
000c0540 t NXU::SchemaStream::load(int&, char const*, bool)
000bfd70 t NXU::SchemaStream::load(unsigned int&, char const*, bool)
000bfe60 t NXU::SchemaStream::load(char const*&, char const*, bool)
000bfbf0 t NXU::SchemaStream::load(unsigned short&, char const*, bool)
000c2730 t NXU::SchemaStream::read(NxVec3*, unsigned int)
000bfb40 t NXU::SchemaStream::read(char*, unsigned int)
000c1330 t NXU::SchemaStream::read(float*, unsigned int)
000c2c40 t NXU::SchemaStream::read(unsigned char*, unsigned int)
000c1e50 t NXU::SchemaStream::read(unsigned int*, unsigned int)
000c2c50 t NXU::SchemaStream::read(NXU::NxTri*, unsigned int)
000c3150 t NXU::SchemaStream::read(NXU::NxTetra*, unsigned int)
000c22c0 t NXU::SchemaStream::read(unsigned short*, unsigned int)
000c0f30 t NXU::SchemaStream::read(NxVec3&)
000c0bf0 t NXU::SchemaStream::read(float&)
000bfb50 t NXU::SchemaStream::read(unsigned char&)
000c04b0 t NXU::SchemaStream::read(int&)
000bfce0 t NXU::SchemaStream::read(unsigned int&)
000c1220 t NXU::SchemaStream::read(NXU::NxTri&)
000c12a0 t NXU::SchemaStream::read(NXU::NxTetra&)
000bfb80 t NXU::SchemaStream::read(unsigned short&)
000bd0f0 t NXU::SchemaStream::ftell()
000be1d0 t NXU::SchemaStream::store(float, char const*, bool)
000bde90 t NXU::SchemaStream::store(int, char const*, bool)
000bdd00 t NXU::SchemaStream::store(unsigned int, char const*, bool)
000bdae0 t NXU::SchemaStream::store(char const*, char const*, bool)
000be970 t NXU::SchemaStream::store(NxQuat&, char const*, bool)
000be520 t NXU::SchemaStream::store(NxVec3&, char const*, bool)
000bf2f0 t NXU::SchemaStream::store(NxArray<NxVec3, NxAllocatorDefault>&, char const*, bool)
000beb40 t NXU::SchemaStream::store(NxArray<float, NxAllocatorDefault>&, char const*, bool)
000bd8d0 t NXU::SchemaStream::store(NxArray<unsigned char, NxAllocatorDefault>&, char const*, bool)
000bede0 t NXU::SchemaStream::store(NxArray<unsigned int, NxAllocatorDefault>&, char const*, bool)
000bf620 t NXU::SchemaStream::store(NxArray<NXU::NxTri, NxAllocatorDefault>&, char const*, bool)
000bf900 t NXU::SchemaStream::store(NxArray<NXU::NxTetra, NxAllocatorDefault>&, char const*, bool)
000bf070 t NXU::SchemaStream::store(NxArray<unsigned short, NxAllocatorDefault>&, char const*, bool)
000c1ad0 t NXU::SchemaStream::store(NxMat33&, char const*, bool)
000be6e0 t NXU::SchemaStream::store(NxMat34&, char const*, bool)
000be370 t NXU::SchemaStream::store(NxPlane&, char const*, bool)
000be040 t NXU::SchemaStream::store(NxBounds3&, char const*, bool)
000bd760 t NXU::SchemaStream::store(unsigned short, char const*, bool)
000bdfc0 t NXU::SchemaStream::write(float)
000bd6c0 t NXU::SchemaStream::write(unsigned char)
000bde10 t NXU::SchemaStream::write(int)
000bd850 t NXU::SchemaStream::write(unsigned int)
000bf280 t NXU::SchemaStream::write(NxVec3 const*, unsigned int)
000bf550 t NXU::SchemaStream::write(char const*, unsigned int)
000be670 t NXU::SchemaStream::write(float const*, unsigned int)
000bf560 t NXU::SchemaStream::write(unsigned char const*, unsigned int)
000bed70 t NXU::SchemaStream::write(unsigned int const*, unsigned int)
000bf570 t NXU::SchemaStream::write(NXU::NxTri const*, unsigned int)
000bf850 t NXU::SchemaStream::write(NXU::NxTetra const*, unsigned int)
000bf000 t NXU::SchemaStream::write(unsigned short const*, unsigned int)
000be2f0 t NXU::SchemaStream::write(NxVec3 const&)
000bd6f0 t NXU::SchemaStream::write(unsigned short)
000bd250 t NXU::SchemaStream::readMem(void*, unsigned int)
000c3ce0 t NXU::SchemaStream::endFlush()
000bd310 t NXU::SchemaStream::myprintf(char const*, ...)
000c3760 t NXU::SchemaStream::peekRead(int&)
000c36b0 t NXU::SchemaStream::peekRead(unsigned int&)
000bd0d0 t NXU::SchemaStream::pushLast(unsigned int)
000bd2b0 t NXU::SchemaStream::writeMem(void const*, unsigned int)
000bd120 t NXU::SchemaStream::closeLast()
000c3a20 t NXU::SchemaStream::endHeader()
000c40b0 t NXU::SchemaStream::SchemaStream(char const*, bool, char const*, void*, int)
000c40b0 t NXU::SchemaStream::SchemaStream(char const*, bool, char const*, void*, int)
000c3fa0 t NXU::SchemaStream::~SchemaStream()
000c3fa0 t NXU::SchemaStream::~SchemaStream()
0006b5b0 t NXU::setFilterOps(NXU::NxuPhysicsCollection&, bool, NxFilterOp, NxFilterOp, NxFilterOp, NxGroupsMask const&, NxGroupsMask const&)
00097a70 t NXU::StringToEnum(char const*, NXU::NxBodyFlag&)
00097120 t NXU::StringToEnum(char const*, NXU::NxFilterOp&)
00097ca0 t NXU::StringToEnum(char const*, NXU::NxActorFlag&)
00099ca0 t NXU::StringToEnum(char const*, NXU::NxClothFlag&)
00099770 t NXU::StringToEnum(char const*, NXU::NxFluidFlag&)
00098c00 t NXU::StringToEnum(char const*, NXU::NxJointFlag&)
00098a00 t NXU::StringToEnum(char const*, NXU::NxJointType&)
00096bb0 t NXU::StringToEnum(char const*, NXU::NxMeshFlags&)
000955c0 t NXU::StringToEnum(char const*, NXU::NxParameter&)
00098330 t NXU::StringToEnum(char const*, NXU::NxShapeFlag&)
00097e00 t NXU::StringToEnum(char const*, NXU::NxShapeType&)
000975b0 t NXU::StringToEnum(char const*, NXU::NxSceneFlags&)
0009ac20 t NXU::StringToEnum(char const*, NXU::SCHEMA_CLASS&)
00097790 t NXU::StringToEnum(char const*, NXU::NxCombineMode&)
000969a0 t NXU::StringToEnum(char const*, NXU::NxConvexFlags&)
00098f00 t NXU::StringToEnum(char const*, NXU::NxD6JointFlag&)
00099910 t NXU::StringToEnum(char const*, NXU::NxEmitterType&)
000999b0 t NXU::StringToEnum(char const*, NXU::NxEmitterShape&)
000978a0 t NXU::StringToEnum(char const*, NXU::NxMaterialFlag&)
0009a850 t NXU::StringToEnum(char const*, NXU::NxSoftBodyFlag&)
00098c90 t NXU::StringToEnum(char const*, NXU::NxD6JointMotion&)
0009abc0 t NXU::StringToEnum(char const*, NXU::NxMeshDataFlags&)
00098970 t NXU::StringToEnum(char const*, NXU::NxMeshShapeFlag&)
000967e0 t NXU::StringToEnum(char const*, NXU::NxBroadPhaseType&)
00096d50 t NXU::StringToEnum(char const*, NXU::NxClothMeshFlags&)
0009a0f0 t NXU::StringToEnum(char const*, NXU::NxForceFieldType&)
00098880 t NXU::StringToEnum(char const*, NXU::NxMeshPagingMode&)
00097350 t NXU::StringToEnum(char const*, NXU::NxSimulationType&)
000973f0 t NXU::StringToEnum(char const*, NXU::NxThreadPriority&)
000972b0 t NXU::StringToEnum(char const*, NXU::NxTimeStepMethod&)
00096880 t NXU::StringToEnum(char const*, NXU::NxCompartmentFlag&)
000965c0 t NXU::StringToEnum(char const*, NXU::NxCompartmentType&)
00099380 t NXU::StringToEnum(char const*, NXU::NxContactPairFlag&)
0009a2a0 t NXU::StringToEnum(char const*, NXU::NxForceFieldFlags&)
00096ad0 t NXU::StringToEnum(char const*, NXU::NxHeightFieldAxis&)
00099250 t NXU::StringToEnum(char const*, NXU::NxPulleyJointFlag&)
00098720 t NXU::StringToEnum(char const*, NXU::NxWheelShapeFlags&)
000986c0 t NXU::StringToEnum(char const*, NXU::NxCapsuleShapeFlag&)
00096f90 t NXU::StringToEnum(char const*, NXU::NxClothVertexFlags&)
00098d80 t NXU::StringToEnum(char const*, NXU::NxD6JointDriveType&)
00099a40 t NXU::StringToEnum(char const*, NXU::NxFluidEmitterFlag&)
00096c70 t NXU::StringToEnum(char const*, NXU::NxHeightFieldFlags&)
000966a0 t NXU::StringToEnum(char const*, NXU::NxPruningStructure&)
00098f90 t NXU::StringToEnum(char const*, NXU::NxDistanceJointFlag&)
00099050 t NXU::StringToEnum(char const*, NXU::NxRevoluteJointFlag&)
0009a4b0 t NXU::StringToEnum(char const*, NXU::NxSoftBodyMeshFlags&)
00099110 t NXU::StringToEnum(char const*, NXU::NxSphericalJointFlag&)
00098e10 t NXU::StringToEnum(char const*, NXU::NxJointProjectionMode&)
0009a5d0 t NXU::StringToEnum(char const*, NXU::NxSoftBodyVertexFlags&)
00099680 t NXU::StringToEnum(char const*, NXU::NxFluidCollisionMethod&)
00098020 t NXU::StringToEnum(char const*, NXU::NxShapeCompartmentType&)
000995b0 t NXU::StringToEnum(char const*, NXU::NxFluidSimulationMethod&)
00099fe0 t NXU::StringToEnum(char const*, NXU::NxForceFieldCoordinates&)
0009ab30 t NXU::StringToEnum(char const*, NXU::NxSoftBodyAttachmentFlag&)
0009a450 t NXU::StringToEnum(char const*, NXU::NxForceFieldShapeGroupFlags&)
000cb200 t NXU::TiXmlComment::Parse(char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c9ad0 t NXU::TiXmlComment::ToComment()
000c85d0 t NXU::TiXmlComment::operator=(NXU::TiXmlComment const&)
000c8540 t NXU::TiXmlComment::TiXmlComment(NXU::TiXmlComment const&)
000c8540 t NXU::TiXmlComment::TiXmlComment(NXU::TiXmlComment const&)
000c9b80 t NXU::TiXmlComment::~TiXmlComment()
000c9b60 t NXU::TiXmlComment::~TiXmlComment()
000c9b60 t NXU::TiXmlComment::~TiXmlComment()
000c9620 t NXU::TiXmlElement::SetAttribute(char const*, int)
000c9150 t NXU::TiXmlElement::SetAttribute(char const*, char const*)
000c9670 t NXU::TiXmlElement::RemoveAttribute(char const*)
000c95c0 t NXU::TiXmlElement::SetDoubleAttribute(char const*, double)
000cbbd0 t NXU::TiXmlElement::Parse(char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c8c70 t NXU::TiXmlElement::ClearThis()
000cb9d0 t NXU::TiXmlElement::ReadValue(char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c9ab0 t NXU::TiXmlElement::ToElement()
000c94c0 t NXU::TiXmlElement::operator=(NXU::TiXmlElement const&)
000c8b10 t NXU::TiXmlElement::TiXmlElement(char const*)
000c94f0 t NXU::TiXmlElement::TiXmlElement(NXU::TiXmlElement const&)
000c8b10 t NXU::TiXmlElement::TiXmlElement(char const*)
000c94f0 t NXU::TiXmlElement::TiXmlElement(NXU::TiXmlElement const&)
000c8d40 t NXU::TiXmlElement::~TiXmlElement()
000c8ce0 t NXU::TiXmlElement::~TiXmlElement()
000c8ce0 t NXU::TiXmlElement::~TiXmlElement()
000cb070 t NXU::TiXmlUnknown::Parse(char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c9b30 t NXU::TiXmlUnknown::ToUnknown()
000c9c80 t NXU::TiXmlUnknown::~TiXmlUnknown()
000c9c60 t NXU::TiXmlUnknown::~TiXmlUnknown()
000c9c60 t NXU::TiXmlUnknown::~TiXmlUnknown()
000717f0 t NXU::YawPitchRoll(float, float, float)
0006afc0 t NXU::addConvexMesh(NXU::NxuPhysicsCollection&, NxConvexMesh&, char const*, char const*)
0006b200 t NXU::addForceField(NXU::NxuPhysicsCollection&, NxForceField&, char const*, char const*)
0006b830 t NXU::addPhysicsSDK(NXU::NxuPhysicsCollection&, NxPhysicsSDK&)
000578e0 t NXU::ColladaImport::locateNode(char const*)
00060220 t NXU::ColladaImport::ProcessNode(int, char const*, int, NXU::TiXmlNode*)
00057860 t NXU::ColladaImport::locateGeometry(char const*)
0005db30 t NXU::ColladaImport::ProcessElement(NXU::CELEMENT, NXU::TiXmlElement*, int)
0005bf90 t NXU::ColladaImport::createCollection(char const*)
00057a20 t NXU::ColladaImport::getMaterialIndex(char const*)
000579a0 t NXU::ColladaImport::locateVisualScene(char const*)
00057750 t NXU::ColladaImport::locatePhysicsModel(char const*)
000577d0 t NXU::ColladaImport::locatePhysicsScene(char const*)
00057aa0 t NXU::ColladaImport::locateConvexMeshDesc(char const*)
00057b30 t NXU::ColladaImport::locateTriangleMeshDesc(char const*)
0005b630 t NXU::ColladaImport::Display(int, char const*, ...)
000609d0 t NXU::ColladaImport::traverse(NXU::TiXmlNode*, int)
0005d750 t NXU::ColladaImport::~ColladaImport()
0005d640 t NXU::ColladaImport::~ColladaImport()
0005d640 t NXU::ColladaImport::~ColladaImport()
00056ab0 t NXU::colladaImport(char const*, void*, int)
00061090 t NXU::CookClothMesh(NxClothMeshDesc const&, NxStream&)
00066690 t NXU::createCapsule(float, float, NXU::NxuGeometry&, NxMat34 const*, int, int, float, unsigned int)
000573b0 t NXU::C_VisualScene::setText(NXU::CELEMENT, char const*)
00058ab0 t NXU::C_VisualScene::~C_VisualScene()
00058230 t NXU::C_VisualScene::~C_VisualScene()
00058230 t NXU::C_VisualScene::~C_VisualScene()
0025e484 d NXU::gCookOnExport
0006b730 t NXU::getSceneCount(NXU::NxuPhysicsCollection&)
0025e49c d NXU::gSaveDefaults
000a6aa0 t NXU::NxD6JointDesc::load(NXU::SchemaStream&, char const*)
000a6150 t NXU::NxD6JointDesc::store(NXU::SchemaStream&, char const*)
000a7470 t NXU::NxD6JointDesc::copyTo(NxD6JointDesc&, NXU::CustomCopy&)
000a7130 t NXU::NxD6JointDesc::copyFrom(NxD6JointDesc const&, NXU::CustomCopy&)
000a5eb0 t NXU::NxD6JointDesc::NxD6JointDesc()
000a5eb0 t NXU::NxD6JointDesc::NxD6JointDesc()
000a6140 t NXU::NxD6JointDesc::~NxD6JointDesc()
000a6140 t NXU::NxD6JointDesc::~NxD6JointDesc()
0009e5b0 t NXU::NxSceneLimits::load(NXU::SchemaStream&, char const*)
0009e410 t NXU::NxSceneLimits::store(NXU::SchemaStream&, char const*)
0009e6c0 t NXU::NxSceneLimits::copyTo(NxSceneLimits&, NXU::CustomCopy&)
0009e690 t NXU::NxSceneLimits::copyFrom(NxSceneLimits const&, NXU::CustomCopy&)
0009e3c0 t NXU::NxSceneLimits::NxSceneLimits()
0009e3c0 t NXU::NxSceneLimits::NxSceneLimits()
0009e400 t NXU::NxSceneLimits::~NxSceneLimits()
0009e400 t NXU::NxSceneLimits::~NxSceneLimits()
000c5bd0 t NXU::reportWarning(char const*, ...)
0006f230 t NXU::safenormalize(NXU::float3 const&)
0006e6d0 t NXU::setEndianMode(bool, bool)
000cc060 t NXU::TiXmlDocument::ToDocument()
000cae00 t NXU::TiXmlDocument::Parse(char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c7bd0 t NXU::TiXmlDocument::LoadFile(NXU::TiXmlEncoding)
000c7b10 t NXU::TiXmlDocument::LoadFile(char const*, void*, int, NXU::TiXmlEncoding)
000c7860 t NXU::TiXmlDocument::LoadFile(NXU::NXU_FILE*, NXU::TiXmlEncoding)
000ca7e0 t NXU::TiXmlDocument::SetError(int, char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c7e30 t NXU::TiXmlDocument::operator=(NXU::TiXmlDocument const&)
000c7770 t NXU::TiXmlDocument::TiXmlDocument(char const*)
000c7e90 t NXU::TiXmlDocument::TiXmlDocument(NXU::TiXmlDocument const&)
000c76a0 t NXU::TiXmlDocument::TiXmlDocument()
000c7770 t NXU::TiXmlDocument::TiXmlDocument(char const*)
000c7e90 t NXU::TiXmlDocument::TiXmlDocument(NXU::TiXmlDocument const&)
000c76a0 t NXU::TiXmlDocument::TiXmlDocument()
000cc100 t NXU::TiXmlDocument::~TiXmlDocument()
000cc070 t NXU::TiXmlDocument::~TiXmlDocument()
000cc070 t NXU::TiXmlDocument::~TiXmlDocument()
0006b110 t NXU::addCCDSkeleton(NXU::NxuPhysicsCollection&, NxCCDSkeleton&, char const*, char const*)
0006b890 t NXU::addCompartment(NXU::NxuPhysicsCollection&, NxCompartment&, char const*)
0006d6c0 t NXU::addEntireScene(NXU::NxuPhysicsCollection&, NxScene&, char const*, char const*, NXU_userNotify*)
0006b0a0 t NXU::addHeightField(NXU::NxuPhysicsCollection&, NxHeightField&, char const*, char const*)
000652e0 t NXU::clearNonCooked(NXU::NxConvexMeshDesc&)
00065310 t NXU::clearNonCooked(NXU::NxTriangleMeshDesc&)
00061080 t NXU::CookConvexMesh(NxConvexMeshDesc const&, NxStream&)
00056890 t NXU::C_PhysicsModel::getRigidBodyElements(NXU::NxSceneDesc*, NXU::C_Query*, NxMat34 const&)
00057290 t NXU::C_PhysicsModel::setText(NXU::CELEMENT, char const*)
00056a90 t NXU::C_PhysicsModel::~C_PhysicsModel()
000568f0 t NXU::C_PhysicsModel::~C_PhysicsModel()
000568f0 t NXU::C_PhysicsModel::~C_PhysicsModel()
00057320 t NXU::C_PhysicsScene::setText(NXU::CELEMENT, char const*)
0005d0a0 t NXU::C_PhysicsScene::~C_PhysicsScene()
0005d000 t NXU::C_PhysicsScene::~C_PhysicsScene()
0005d000 t NXU::C_PhysicsScene::~C_PhysicsScene()
00059a40 t NXU::C_TriangleMesh::vlookup(NxVec3 const&)
0005af30 t NXU::C_TriangleMesh::~C_TriangleMesh()
0005af30 t NXU::C_TriangleMesh::~C_TriangleMesh()
00266ae1 b NXU::gSaveBigEndian
0006c4e0 t NXU::loadCollection(char const*, NXU::NXU_FileType, void*, int)
00079e60 t int NXU::maxdirfiltered<NXU::float3>(NXU::float3 const*, int, NXU::float3 const&, NXU::Array<int>&)
000a0f20 t NXU::NxBoxShapeDesc::load(NXU::SchemaStream&, char const*)
000a0e20 t NXU::NxBoxShapeDesc::store(NXU::SchemaStream&, char const*)
000a0ff0 t NXU::NxBoxShapeDesc::copyTo(NxBoxShapeDesc&, NXU::CustomCopy&)
000a0fc0 t NXU::NxBoxShapeDesc::copyFrom(NxBoxShapeDesc const&, NXU::CustomCopy&)
000a0dd0 t NXU::NxBoxShapeDesc::NxBoxShapeDesc()
000a0dd0 t NXU::NxBoxShapeDesc::NxBoxShapeDesc()
000a0e10 t NXU::NxBoxShapeDesc::~NxBoxShapeDesc()
000a0e10 t NXU::NxBoxShapeDesc::~NxBoxShapeDesc()
0009ef20 t NXU::NxMaterialDesc::load(NXU::SchemaStream&, char const*)
0009e9d0 t NXU::NxMaterialDesc::store(NXU::SchemaStream&, char const*)
0009f310 t NXU::NxMaterialDesc::copyTo(NxMaterialDesc&, NXU::CustomCopy&)
0009f2b0 t NXU::NxMaterialDesc::copyFrom(NxMaterialDesc const&, NXU::CustomCopy&)
0009e950 t NXU::NxMaterialDesc::NxMaterialDesc()
0009e950 t NXU::NxMaterialDesc::NxMaterialDesc()
0009e9c0 t NXU::NxMaterialDesc::~NxMaterialDesc()
0009e9c0 t NXU::NxMaterialDesc::~NxMaterialDesc()
000aa8a0 t NXU::NxPairFlagDesc::load(NXU::SchemaStream&, char const*)
000aa5a0 t NXU::NxPairFlagDesc::store(NXU::SchemaStream&, char const*)
000aa540 t NXU::NxPairFlagDesc::NxPairFlagDesc()
000aa540 t NXU::NxPairFlagDesc::NxPairFlagDesc()
000aa590 t NXU::NxPairFlagDesc::~NxPairFlagDesc()
000aa590 t NXU::NxPairFlagDesc::~NxPairFlagDesc()
000ab0b0 t NXU::NxParticleData::load(NXU::SchemaStream&, char const*)
000aae50 t NXU::NxParticleData::store(NXU::SchemaStream&, char const*)
000ab220 t NXU::NxParticleData::copyTo(NxParticleData&, NXU::CustomCopy&)
000ab1f0 t NXU::NxParticleData::copyFrom(NxParticleData const&, NXU::CustomCopy&)
000aacc0 t NXU::NxParticleData::NxParticleData()
000aacc0 t NXU::NxParticleData::NxParticleData()
000aad60 t NXU::NxParticleData::~NxParticleData()
000aad60 t NXU::NxParticleData::~NxParticleData()
000b4690 t NXU::NxSoftBodyDesc::load(NXU::SchemaStream&, char const*)
000b3cf0 t NXU::NxSoftBodyDesc::store(NXU::SchemaStream&, char const*)
000b4e90 t NXU::NxSoftBodyDesc::copyTo(NxSoftBodyDesc&, NXU::CustomCopy&)
000b4cf0 t NXU::NxSoftBodyDesc::copyFrom(NxSoftBodyDesc const&, NXU::CustomCopy&)
000b3aa0 t NXU::NxSoftBodyDesc::NxSoftBodyDesc()
000b3aa0 t NXU::NxSoftBodyDesc::NxSoftBodyDesc()
000b3c30 t NXU::NxSoftBodyDesc::~NxSoftBodyDesc()
000b3c30 t NXU::NxSoftBodyDesc::~NxSoftBodyDesc()
0006c310 t NXU::saveCollection(NXU::NxuPhysicsCollection*, char const*, NXU::NXU_FileType, bool, bool)
0006b4b0 t NXU::setErrorReport(NXU_errorReport*)
000c83d0 t NXU::TiXmlAttribute::SetIntValue(int)
000c8450 t NXU::TiXmlAttribute::SetDoubleValue(double)
000c8060 t NXU::TiXmlAttribute::Next()
000ca880 t NXU::TiXmlAttribute::Parse(char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c80c0 t NXU::TiXmlAttribute::Previous()
000cc140 t NXU::TiXmlAttribute::~TiXmlAttribute()
000cc0b0 t NXU::TiXmlAttribute::~TiXmlAttribute()
000cc0b0 t NXU::TiXmlAttribute::~TiXmlAttribute()
0006d660 t NXU::addSoftBodyMesh(NXU::NxuPhysicsCollection&, NxSoftBodyMesh&, char const*)
0006b030 t NXU::addTriangleMesh(NXU::NxuPhysicsCollection&, NxTriangleMesh&, char const*, char const*)
00075850 t NXU::ConvexHMakeCube(NXU::float3 const&, NXU::float3 const&)
0008fd70 t NXU::copyScaledScene(NXU::NxSceneDesc*, NXU::NxSceneDesc const*, NxVec3 const&)
000c5960 t NXU::getGlobalString(char const*)
00072820 t NXU::LineProjectTime(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&)
000bd640 t NXU::locateActorDesc(NXU::NxSceneDesc*, char const*)
000bd480 t NXU::locateSceneDesc(NXU::NxuPhysicsCollection*, char const*, unsigned int&)
00070680 t NXU::MatrixRotationZ(float)
000701e0 t NXU::MatrixTranspose(NXU::float4x4 const&)
0009dab0 t NXU::NxClothMeshDesc::load(NXU::SchemaStream&, char const*)
000bb1e0 t NXU::NxClothMeshDesc::store(NXU::SchemaStream&, char const*)
0009dce0 t NXU::NxClothMeshDesc::copyTo(NxClothMeshDesc&, NXU::CustomCopy&)
0009dc90 t NXU::NxClothMeshDesc::copyFrom(NxClothMeshDesc const&, NXU::CustomCopy&)
0009d9c0 t NXU::NxClothMeshDesc::NxClothMeshDesc()
0009d9c0 t NXU::NxClothMeshDesc::NxClothMeshDesc()
0009da50 t NXU::NxClothMeshDesc::~NxClothMeshDesc()
0009da50 t NXU::NxClothMeshDesc::~NxClothMeshDesc()
0009c5a0 t NXU::NxParameterDesc::load(NXU::SchemaStream&, char const*)
0009c450 t NXU::NxParameterDesc::store(NXU::SchemaStream&, char const*)
0009c420 t NXU::NxParameterDesc::NxParameterDesc()
0009c420 t NXU::NxParameterDesc::NxParameterDesc()
0009c440 t NXU::NxParameterDesc::~NxParameterDesc()
0009c440 t NXU::NxParameterDesc::~NxParameterDesc()
000a4410 t NXU::NxPlaneInfoDesc::load(NXU::SchemaStream&, char const*)
000a42a0 t NXU::NxPlaneInfoDesc::store(NXU::SchemaStream&, char const*)
000a4270 t NXU::NxPlaneInfoDesc::NxPlaneInfoDesc()
000a4270 t NXU::NxPlaneInfoDesc::NxPlaneInfoDesc()
000a4290 t NXU::NxPlaneInfoDesc::~NxPlaneInfoDesc()
000a4290 t NXU::NxPlaneInfoDesc::~NxPlaneInfoDesc()
00085c10 t NXU::sameCompartment(NXU::NxCompartmentDesc&, NxCompartmentDesc&)
0004e1a0 t NXU::saveColladaFile(NXU::NxuPhysicsCollection*, NXU::NXU_FILE*, char const*)
0006c6a0 t NXU::setCollectionID(NXU::NxuPhysicsCollection&, char const*)
0006b430 t NXU::addDominancePair(NXU::NxuPhysicsCollection&, unsigned short, unsigned short, NxConstraintDominance&)
0006b630 t NXU::addSceneInstance(NXU::NxuPhysicsCollection&, char const*, char const*, NxMat34 const&, bool, char const*)
000610a0 t NXU::CookSoftBodyMesh(NxSoftBodyMeshDesc const&, NxStream&)
000610b0 t NXU::CookTriangleMesh(NxTriangleMeshDesc const&, NxStream&)
0006aaf0 t NXU::createCollection(char const*, char const*)
00064f30 t NXU::createCookedData(NXU::NxConvexMeshDesc&)
00065080 t NXU::createCookedData(NXU::NxTriangleMeshDesc&)
00061110 t NXU::GetCookingParams()
0006aa00 t NXU::instantiateScene(NXU::NxuPhysicsCollection*, char const*, NxPhysicsSDK&, NxScene*, NxMat34*, NXU_userNotify*)
000c5840 t NXU::MemoryReadBuffer::storeDword(unsigned int)
000c5850 t NXU::MemoryReadBuffer::storeFloat(float)
000c5870 t NXU::MemoryReadBuffer::storeBuffer(void const*, unsigned int)
000c5860 t NXU::MemoryReadBuffer::storeDouble(double)
000c5820 t NXU::MemoryReadBuffer::storeByte(unsigned char)
000c5830 t NXU::MemoryReadBuffer::storeWord(unsigned short)
000c5730 t NXU::MemoryReadBuffer::MemoryReadBuffer(unsigned char const*)
000c5730 t NXU::MemoryReadBuffer::MemoryReadBuffer(unsigned char const*)
000c50d0 t NXU::MemoryReadBuffer::~MemoryReadBuffer()
000c4e50 t NXU::MemoryReadBuffer::~MemoryReadBuffer()
000c4e50 t NXU::MemoryReadBuffer::~MemoryReadBuffer()
0009e240 t NXU::NxActorGroupPair::load(NXU::SchemaStream&, char const*)
0009e030 t NXU::NxActorGroupPair::store(NXU::SchemaStream&, char const*)
0009e000 t NXU::NxActorGroupPair::NxActorGroupPair()
0009e000 t NXU::NxActorGroupPair::NxActorGroupPair()
0009e020 t NXU::NxActorGroupPair::~NxActorGroupPair()
0009e020 t NXU::NxActorGroupPair::~NxActorGroupPair()
0009c750 t NXU::NxConvexMeshDesc::load(NXU::SchemaStream&, char const*)
000bb4f0 t NXU::NxConvexMeshDesc::store(NXU::SchemaStream&, char const*)
0009c980 t NXU::NxConvexMeshDesc::copyTo(NxConvexMeshDesc&, NXU::CustomCopy&)
0009c950 t NXU::NxConvexMeshDesc::copyFrom(NxConvexMeshDesc const&, NXU::CustomCopy&)
0009c660 t NXU::NxConvexMeshDesc::NxConvexMeshDesc()
0009c660 t NXU::NxConvexMeshDesc::NxConvexMeshDesc()
0009c6d0 t NXU::NxConvexMeshDesc::~NxConvexMeshDesc()
0009c6d0 t NXU::NxConvexMeshDesc::~NxConvexMeshDesc()
000a7e50 t NXU::NxFixedJointDesc::load(NXU::SchemaStream&, char const*)
000a7d90 t NXU::NxFixedJointDesc::store(NXU::SchemaStream&, char const*)
000a7ed0 t NXU::NxFixedJointDesc::copyTo(NxFixedJointDesc&, NXU::CustomCopy&)
000a7ec0 t NXU::NxFixedJointDesc::copyFrom(NxFixedJointDesc const&, NXU::CustomCopy&)
000a7d50 t NXU::NxFixedJointDesc::NxFixedJointDesc()
000a7d50 t NXU::NxFixedJointDesc::NxFixedJointDesc()
000a7d80 t NXU::NxFixedJointDesc::~NxFixedJointDesc()
000a7d80 t NXU::NxFixedJointDesc::~NxFixedJointDesc()
000b2060 t NXU::NxForceFieldDesc::load(NXU::SchemaStream&, char const*)
000b18c0 t NXU::NxForceFieldDesc::store(NXU::SchemaStream&, char const*)
000b2970 t NXU::NxForceFieldDesc::copyTo(NxForceFieldDesc&, NXU::CustomCopy&)
000b28b0 t NXU::NxForceFieldDesc::copyFrom(NxForceFieldDesc const&, NXU::CustomCopy&)
000b16e0 t NXU::NxForceFieldDesc::NxForceFieldDesc()
000b16e0 t NXU::NxForceFieldDesc::NxForceFieldDesc()
000b17d0 t NXU::NxForceFieldDesc::~NxForceFieldDesc()
000b17d0 t NXU::NxForceFieldDesc::~NxForceFieldDesc()
000a5cc0 t NXU::NxJointDriveDesc::load(NXU::SchemaStream&, char const*)
000a5a60 t NXU::NxJointDriveDesc::store(NXU::SchemaStream&, char const*)
000a5e80 t NXU::NxJointDriveDesc::copyTo(NxJointDriveDesc&, NXU::CustomCopy&)
000a5e50 t NXU::NxJointDriveDesc::copyFrom(NxJointDriveDesc const&, NXU::CustomCopy&)
000a5a20 t NXU::NxJointDriveDesc::NxJointDriveDesc()
000a5a20 t NXU::NxJointDriveDesc::NxJointDriveDesc()
000a5a50 t NXU::NxJointDriveDesc::~NxJointDriveDesc()
000a5a50 t NXU::NxJointDriveDesc::~NxJointDriveDesc()
000a8510 t NXU::NxJointLimitDesc::load(NXU::SchemaStream&, char const*)
000a83c0 t NXU::NxJointLimitDesc::store(NXU::SchemaStream&, char const*)
000a85e0 t NXU::NxJointLimitDesc::copyTo(NxJointLimitDesc&, NXU::CustomCopy&)
000a85c0 t NXU::NxJointLimitDesc::copyFrom(NxJointLimitDesc const&, NXU::CustomCopy&)
000a8390 t NXU::NxJointLimitDesc::NxJointLimitDesc()
000a8390 t NXU::NxJointLimitDesc::NxJointLimitDesc()
000a83b0 t NXU::NxJointLimitDesc::~NxJointLimitDesc()
000a83b0 t NXU::NxJointLimitDesc::~NxJointLimitDesc()
000b9bc0 t NXU::NxPhysicsSDKDesc::load(NXU::SchemaStream&, char const*)
000b9aa0 t NXU::NxPhysicsSDKDesc::store(NXU::SchemaStream&, char const*)
000b9c90 t NXU::NxPhysicsSDKDesc::copyTo(NxPhysicsSDKDesc&, NXU::CustomCopy&)
000b9c70 t NXU::NxPhysicsSDKDesc::copyFrom(NxPhysicsSDKDesc const&, NXU::CustomCopy&)
000b9a60 t NXU::NxPhysicsSDKDesc::NxPhysicsSDKDesc()
000b9a60 t NXU::NxPhysicsSDKDesc::NxPhysicsSDKDesc()
000b9a90 t NXU::NxPhysicsSDKDesc::~NxPhysicsSDKDesc()
000b9a90 t NXU::NxPhysicsSDKDesc::~NxPhysicsSDKDesc()
000a11f0 t NXU::NxPlaneShapeDesc::load(NXU::SchemaStream&, char const*)
000a1090 t NXU::NxPlaneShapeDesc::store(NXU::SchemaStream&, char const*)
000a12e0 t NXU::NxPlaneShapeDesc::copyTo(NxPlaneShapeDesc&, NXU::CustomCopy&)
000a12b0 t NXU::NxPlaneShapeDesc::copyFrom(NxPlaneShapeDesc const&, NXU::CustomCopy&)
000a1040 t NXU::NxPlaneShapeDesc::NxPlaneShapeDesc()
000a1040 t NXU::NxPlaneShapeDesc::NxPlaneShapeDesc()
000a1080 t NXU::NxPlaneShapeDesc::~NxPlaneShapeDesc()
000a1080 t NXU::NxPlaneShapeDesc::~NxPlaneShapeDesc()
00065e30 t NXU::nxu_getMemBuffer(NXU::NXU_FILE*, int&)
0007b940 t NXU::NxuPhysicsExport::setFilterOps(bool, NxFilterOp, NxFilterOp, NxFilterOp, NxGroupsMask const&, NxGroupsMask const&)
0007b670 t NXU::NxuPhysicsExport::getCurrentScene()
0007d2d0 t NXU::NxuPhysicsExport::addDominancePair(unsigned short, unsigned short, NxConstraintDominance)
0007b1d0 t NXU::NxuPhysicsExport::addSceneInstance(char const*, char const*, NxMat34 const&, bool, char const*)
0007db10 t NXU::NxuPhysicsExport::exportConvexMesh(NxConvexMesh*, char const*, char const*, NXU::NxConvexMeshDesc&)
0007d190 t NXU::NxuPhysicsExport::addActorGroupFlag(unsigned int, unsigned int, unsigned int)
0007dd80 t NXU::NxuPhysicsExport::exportTriangleMesh(NxTriangleMesh*, char const*, char const*, NXU::NxTriangleMeshDesc&)
0007d050 t NXU::NxuPhysicsExport::addGroupCollisionFlag(unsigned int, unsigned int, bool)
000803d0 t NXU::NxuPhysicsExport::getClothShapeAttachment(NxShape*)
0007b420 t NXU::NxuPhysicsExport::addToCurrentSceneInstance(char const*, char const*, NxMat34 const&, bool, char const*)
0007b7f0 t NXU::NxuPhysicsExport::addForFieldScaleTableEntry(unsigned short, unsigned short, float)
0007fb40 t NXU::NxuPhysicsExport::getSoftBodyShapeAttachment(NxShape*)
0007a3a0 t NXU::NxuPhysicsExport::Write(NXU::NxParameter, float)
0007c260 t NXU::NxuPhysicsExport::Write(NxEffector*, char const*, char const*)
0007cdc0 t NXU::NxuPhysicsExport::Write(NxMaterial*, char const*, char const*)
0007f850 t NXU::NxuPhysicsExport::Write(NxPairFlag*, char const*, char const*)
0007fc10 t NXU::NxuPhysicsExport::Write(NxSoftBody*, char const*, char const*)
0007aa80 t NXU::NxuPhysicsExport::Write(NxClothMesh*, char const*)
0007dbc0 t NXU::NxuPhysicsExport::Write(NxConvexMesh*, char const*, char const*)
0007b9e0 t NXU::NxuPhysicsExport::Write(NxForceField*, char const*, char const*)
0007a330 t NXU::NxuPhysicsExport::Write(NxPhysicsSDK*)
0007af70 t NXU::NxuPhysicsExport::Write(NxCCDSkeleton*, char const*, char const*)
0007cb90 t NXU::NxuPhysicsExport::Write(NxCompartment*, char const*)
0007ace0 t NXU::NxuPhysicsExport::Write(NxHeightField*, char const*, char const*)
0007d520 t NXU::NxuPhysicsExport::Write(NxSoftBodyMesh*, char const*)
0007df90 t NXU::NxuPhysicsExport::Write(NxTriangleMesh*, char const*, char const*)
0007bd40 t NXU::NxuPhysicsExport::Write(NxForceFieldShapeGroup*, char const*, char const*)
0007bf50 t NXU::NxuPhysicsExport::Write(NxForceFieldLinearKernel*, char const*, char const*)
0007e180 t NXU::NxuPhysicsExport::Write(NxActor*, char const*, char const*)
000804a0 t NXU::NxuPhysicsExport::Write(NxCloth*, char const*, char const*)
0007c4e0 t NXU::NxuPhysicsExport::Write(NxFluid*, char const*, char const*)
00080cd0 t NXU::NxuPhysicsExport::Write(NxJoint*, char const*, char const*)
0007a480 t NXU::NxuPhysicsExport::Write(NxSceneDesc const*, char const*, char const*)
0007d7a0 t NXU::NxuPhysicsExport::Write(NxSoftBodyDesc const&, NxSoftBodyMeshDesc const&, char const*, char const*)
0007f7c0 t NXU::NxuPhysicsExport::addActor(NxActor*)
0007a310 t NXU::NxuPhysicsExport::NxuPhysicsExport(NXU::NxuPhysicsCollection*)
0007db00 t NXU::NxuPhysicsExport::NxuPhysicsExport()
0007a310 t NXU::NxuPhysicsExport::NxuPhysicsExport(NXU::NxuPhysicsCollection*)
0007db00 t NXU::NxuPhysicsExport::NxuPhysicsExport()
0007a320 t NXU::NxuPhysicsExport::~NxuPhysicsExport()
0007a320 t NXU::NxuPhysicsExport::~NxuPhysicsExport()
000a27c0 t NXU::NxWheelShapeDesc::load(NXU::SchemaStream&, char const*)
000a23e0 t NXU::NxWheelShapeDesc::store(NXU::SchemaStream&, char const*)
000a2b30 t NXU::NxWheelShapeDesc::copyTo(NxWheelShapeDesc&, NXU::CustomCopy&)
000a2a40 t NXU::NxWheelShapeDesc::copyFrom(NxWheelShapeDesc const&, NXU::CustomCopy&)
000a22e0 t NXU::NxWheelShapeDesc::NxWheelShapeDesc()
000a22e0 t NXU::NxWheelShapeDesc::NxWheelShapeDesc()
000a23d0 t NXU::NxWheelShapeDesc::~NxWheelShapeDesc()
000a23d0 t NXU::NxWheelShapeDesc::~NxWheelShapeDesc()
0025e494 d NXU::planetestepsilon
00061100 t NXU::SetCookingParams(NxCookingParams const&)
0004e1d0 t NXU::StringCollection::~StringCollection()
0004e1d0 t NXU::StringCollection::~StringCollection()
000c9b10 t NXU::TiXmlDeclaration::ToDeclaration()
000cb520 t NXU::TiXmlDeclaration::Parse(char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c8950 t NXU::TiXmlDeclaration::operator=(NXU::TiXmlDeclaration const&)
000c8730 t NXU::TiXmlDeclaration::TiXmlDeclaration(char const*, char const*, char const*)
000c89b0 t NXU::TiXmlDeclaration::TiXmlDeclaration(NXU::TiXmlDeclaration const&)
000c8730 t NXU::TiXmlDeclaration::TiXmlDeclaration(char const*, char const*, char const*)
000c89b0 t NXU::TiXmlDeclaration::TiXmlDeclaration(NXU::TiXmlDeclaration const&)
000c9cb0 t NXU::TiXmlDeclaration::~TiXmlDeclaration()
000c9c00 t NXU::TiXmlDeclaration::~TiXmlDeclaration()
000c9c00 t NXU::TiXmlDeclaration::~TiXmlDeclaration()
000c9e80 t NXU::TiXmlParsingData::Stamp(char const*, NXU::TiXmlEncoding)
000732c0 t NXU::VirtualTrackBall(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3 const&)
0006b540 t NXU::addActorGroupFlag(NXU::NxuPhysicsCollection&, unsigned int, unsigned int, unsigned int)
00057400 t NXU::C_PhysicsMaterial::setText(NXU::CELEMENT, char const*)
00057550 t NXU::C_PhysicsMaterial::~C_PhysicsMaterial()
000573e0 t NXU::C_PhysicsMaterial::~C_PhysicsMaterial()
000573e0 t NXU::C_PhysicsMaterial::~C_PhysicsMaterial()
000590b0 t NXU::C_RigidConstraint::setText(NXU::CELEMENT, char const*)
000556f0 t NXU::C_RigidConstraint::getJoint(NXU::NxSceneDesc*, NXU::C_Query*, NXU::C_PhysicsModel*)
00057710 t NXU::C_RigidConstraint::~C_RigidConstraint()
00056f90 t NXU::C_RigidConstraint::~C_RigidConstraint()
00056f90 t NXU::C_RigidConstraint::~C_RigidConstraint()
0006b800 t NXU::getCollectionName(NXU::NxuPhysicsCollection&)
00084d90 t NXU::getShapeFromIndex(NxActor*, unsigned int)
00061070 t NXU::hasCookingLibrary()
00072420 t NXU::MatrixFromQuatVec(NXU::Quaternion const&, NXU::float3 const&)
00070610 t NXU::MatrixTranslation(NXU::float3 const&)
000c4db0 t NXU::MemoryWriteBuffer::storeDword(unsigned int)
000c4de0 t NXU::MemoryWriteBuffer::storeFloat(float)
000c5270 t NXU::MemoryWriteBuffer::storeBuffer(void const*, unsigned int)
000c4e10 t NXU::MemoryWriteBuffer::storeDouble(double)
000c5720 t NXU::MemoryWriteBuffer::clear()
000c4d50 t NXU::MemoryWriteBuffer::storeByte(unsigned char)
000c4d80 t NXU::MemoryWriteBuffer::storeWord(unsigned short)
000c56f0 t NXU::MemoryWriteBuffer::MemoryWriteBuffer()
000c56f0 t NXU::MemoryWriteBuffer::MemoryWriteBuffer()
000c5350 t NXU::MemoryWriteBuffer::~MemoryWriteBuffer()
000c5310 t NXU::MemoryWriteBuffer::~MemoryWriteBuffer()
000c5310 t NXU::MemoryWriteBuffer::~MemoryWriteBuffer()
0009ccb0 t NXU::NxCCDSkeletonDesc::load(NXU::SchemaStream&, char const*)
000bb070 t NXU::NxCCDSkeletonDesc::store(NXU::SchemaStream&, char const*)
0009cc20 t NXU::NxCCDSkeletonDesc::NxCCDSkeletonDesc()
0009cc20 t NXU::NxCCDSkeletonDesc::NxCCDSkeletonDesc()
0009cca0 t NXU::NxCCDSkeletonDesc::~NxCCDSkeletonDesc()
0009cca0 t NXU::NxCCDSkeletonDesc::~NxCCDSkeletonDesc()
0009d650 t NXU::NxClothAttachDesc::load(NXU::SchemaStream&, char const*)
0009d4b0 t NXU::NxClothAttachDesc::store(NXU::SchemaStream&, char const*)
0009d460 t NXU::NxClothAttachDesc::NxClothAttachDesc()
0009d460 t NXU::NxClothAttachDesc::NxClothAttachDesc()
0009d4a0 t NXU::NxClothAttachDesc::~NxClothAttachDesc()
0009d4a0 t NXU::NxClothAttachDesc::~NxClothAttachDesc()
0009c130 t NXU::NxCompartmentDesc::load(NXU::SchemaStream&, char const*)
0009bdd0 t NXU::NxCompartmentDesc::store(NXU::SchemaStream&, char const*)
0009c3e0 t NXU::NxCompartmentDesc::copyTo(NxCompartmentDesc&, NXU::CustomCopy&)
0009c3a0 t NXU::NxCompartmentDesc::copyFrom(NxCompartmentDesc const&, NXU::CustomCopy&)
0009bd70 t NXU::NxCompartmentDesc::NxCompartmentDesc()
0009bd70 t NXU::NxCompartmentDesc::NxCompartmentDesc()
0009bdc0 t NXU::NxCompartmentDesc::~NxCompartmentDesc()
0009bdc0 t NXU::NxCompartmentDesc::~NxCompartmentDesc()
000a1b60 t NXU::NxConvexShapeDesc::load(NXU::SchemaStream&, char const*)
000a1980 t NXU::NxConvexShapeDesc::store(NXU::SchemaStream&, char const*)
000a1d30 t NXU::NxConvexShapeDesc::copyTo(NxConvexShapeDesc&, NXU::CustomCopy&)
000a1ce0 t NXU::NxConvexShapeDesc::copyFrom(NxConvexShapeDesc const&, NXU::CustomCopy&)
000a1930 t NXU::NxConvexShapeDesc::NxConvexShapeDesc()
000a1930 t NXU::NxConvexShapeDesc::NxConvexShapeDesc()
000a1970 t NXU::NxConvexShapeDesc::~NxConvexShapeDesc()
000a1970 t NXU::NxConvexShapeDesc::~NxConvexShapeDesc()
0009d210 t NXU::NxHeightFieldDesc::load(NXU::SchemaStream&, char const*)
000bb9b0 t NXU::NxHeightFieldDesc::store(NXU::SchemaStream&, char const*)
0009d420 t NXU::NxHeightFieldDesc::copyTo(NxHeightFieldDesc&, NXU::CustomCopy&)
0009d3e0 t NXU::NxHeightFieldDesc::copyFrom(NxHeightFieldDesc const&, NXU::CustomCopy&)
0009d170 t NXU::NxHeightFieldDesc::NxHeightFieldDesc()
0009d170 t NXU::NxHeightFieldDesc::NxHeightFieldDesc()
0009d1d0 t NXU::NxHeightFieldDesc::~NxHeightFieldDesc()
0009d1d0 t NXU::NxHeightFieldDesc::~NxHeightFieldDesc()
000aa1b0 t NXU::NxPulleyJointDesc::load(NXU::SchemaStream&, char const*)
000a9de0 t NXU::NxPulleyJointDesc::store(NXU::SchemaStream&, char const*)
000aa480 t NXU::NxPulleyJointDesc::copyTo(NxPulleyJointDesc&, NXU::CustomCopy&)
000aa3d0 t NXU::NxPulleyJointDesc::copyFrom(NxPulleyJointDesc const&, NXU::CustomCopy&)
000a9d30 t NXU::NxPulleyJointDesc::NxPulleyJointDesc()
000a9d30 t NXU::NxPulleyJointDesc::NxPulleyJointDesc()
000a9dd0 t NXU::NxPulleyJointDesc::~NxPulleyJointDesc()
000a9dd0 t NXU::NxPulleyJointDesc::~NxPulleyJointDesc()
000a1450 t NXU::NxSphereShapeDesc::load(NXU::SchemaStream&, char const*)
000a1370 t NXU::NxSphereShapeDesc::store(NXU::SchemaStream&, char const*)
000a1510 t NXU::NxSphereShapeDesc::copyTo(NxSphereShapeDesc&, NXU::CustomCopy&)
000a14f0 t NXU::NxSphereShapeDesc::copyFrom(NxSphereShapeDesc const&, NXU::CustomCopy&)
000a1330 t NXU::NxSphereShapeDesc::NxSphereShapeDesc()
000a1330 t NXU::NxSphereShapeDesc::NxSphereShapeDesc()
000a1360 t NXU::NxSphereShapeDesc::~NxSphereShapeDesc()
000a1360 t NXU::NxSphereShapeDesc::~NxSphereShapeDesc()
0006aa80 t NXU::releaseCollection(NXU::NxuPhysicsCollection*)
000c8bf0 t NXU::TiXmlAttributeSet::Add(NXU::TiXmlAttribute*)
000c90e0 t NXU::TiXmlAttributeSet::Find(NXU::TiXmlString const&)
000c8c10 t NXU::TiXmlAttributeSet::Remove(NXU::TiXmlAttribute*)
000c8a80 t NXU::TiXmlAttributeSet::TiXmlAttributeSet()
000c8a80 t NXU::TiXmlAttributeSet::TiXmlAttributeSet()
000c8ac0 t NXU::TiXmlAttributeSet::~TiXmlAttributeSet()
000c8ac0 t NXU::TiXmlAttributeSet::~TiXmlAttributeSet()
0006b270 t NXU::addForceFieldScale(NXU::NxuPhysicsCollection&, unsigned short, unsigned short, float)
00056190 t NXU::C_DisableCollision::getBodyPairFlag(NXU::NxSceneDesc*, NXU::C_Query*, NXU::C_PhysicsModel*)
00057270 t NXU::C_DisableCollision::setText(NXU::CELEMENT, char const*)
00057590 t NXU::C_DisableCollision::~C_DisableCollision()
00057250 t NXU::C_DisableCollision::~C_DisableCollision()
00057250 t NXU::C_DisableCollision::~C_DisableCollision()
0006b8f0 t NXU::createCCDSkeletons(NXU::NxuPhysicsCollection&, float, unsigned int)
00070290 t NXU::MatrixRigidInverse(NXU::float4x4 const&)
000a1770 t NXU::NxCapsuleShapeDesc::load(NXU::SchemaStream&, char const*)
000a15a0 t NXU::NxCapsuleShapeDesc::store(NXU::SchemaStream&, char const*)
000a18e0 t NXU::NxCapsuleShapeDesc::copyTo(NxCapsuleShapeDesc&, NXU::CustomCopy&)
000a18b0 t NXU::NxCapsuleShapeDesc::copyFrom(NxCapsuleShapeDesc const&, NXU::CustomCopy&)
000a1550 t NXU::NxCapsuleShapeDesc::NxCapsuleShapeDesc()
000a1550 t NXU::NxCapsuleShapeDesc::NxCapsuleShapeDesc()
000a1590 t NXU::NxCapsuleShapeDesc::~NxCapsuleShapeDesc()
000a1590 t NXU::NxCapsuleShapeDesc::~NxCapsuleShapeDesc()
000abb00 t NXU::NxFluidEmitterDesc::load(NXU::SchemaStream&, char const*)
000ab300 t NXU::NxFluidEmitterDesc::store(NXU::SchemaStream&, char const*)
000ac0c0 t NXU::NxFluidEmitterDesc::copyTo(NxFluidEmitterDesc&, NXU::CustomCopy&)
000ac000 t NXU::NxFluidEmitterDesc::copyFrom(NxFluidEmitterDesc const&, NXU::CustomCopy&)
000ab240 t NXU::NxFluidEmitterDesc::NxFluidEmitterDesc()
000ab240 t NXU::NxFluidEmitterDesc::NxFluidEmitterDesc()
000ab2f0 t NXU::NxFluidEmitterDesc::~NxFluidEmitterDesc()
000ab2f0 t NXU::NxFluidEmitterDesc::~NxFluidEmitterDesc()
000b3560 t NXU::NxSoftBodyMeshDesc::load(NXU::SchemaStream&, char const*)
000b3370 t NXU::NxSoftBodyMeshDesc::store(NXU::SchemaStream&, char const*)
000b36b0 t NXU::NxSoftBodyMeshDesc::copyTo(NxSoftBodyMeshDesc&, NXU::CustomCopy&)
000b3680 t NXU::NxSoftBodyMeshDesc::copyFrom(NxSoftBodyMeshDesc const&, NXU::CustomCopy&)
000b3250 t NXU::NxSoftBodyMeshDesc::NxSoftBodyMeshDesc()
000b3250 t NXU::NxSoftBodyMeshDesc::NxSoftBodyMeshDesc()
000b32d0 t NXU::NxSoftBodyMeshDesc::~NxSoftBodyMeshDesc()
000b32d0 t NXU::NxSoftBodyMeshDesc::~NxSoftBodyMeshDesc()
000a01d0 t NXU::NxTireFunctionDesc::load(NXU::SchemaStream&, char const*)
0009fff0 t NXU::NxTireFunctionDesc::store(NXU::SchemaStream&, char const*)
000a02e0 t NXU::NxTireFunctionDesc::copyTo(NxTireFunctionDesc&, NXU::CustomCopy&)
000a02b0 t NXU::NxTireFunctionDesc::copyFrom(NxTireFunctionDesc const&, NXU::CustomCopy&)
0009ffa0 t NXU::NxTireFunctionDesc::NxTireFunctionDesc()
0009ffa0 t NXU::NxTireFunctionDesc::NxTireFunctionDesc()
0009ffe0 t NXU::NxTireFunctionDesc::~NxTireFunctionDesc()
0009ffe0 t NXU::NxTireFunctionDesc::~NxTireFunctionDesc()
0009ceb0 t NXU::NxTriangleMeshDesc::load(NXU::SchemaStream&, char const*)
000bbcd0 t NXU::NxTriangleMeshDesc::store(NXU::SchemaStream&, char const*)
0009d110 t NXU::NxTriangleMeshDesc::copyTo(NxTriangleMeshDesc&, NXU::CustomCopy&)
0009d0b0 t NXU::NxTriangleMeshDesc::copyFrom(NxTriangleMeshDesc const&, NXU::CustomCopy&)
0009cd60 t NXU::NxTriangleMeshDesc::NxTriangleMeshDesc()
0009cd60 t NXU::NxTriangleMeshDesc::NxTriangleMeshDesc()
0009ce20 t NXU::NxTriangleMeshDesc::~NxTriangleMeshDesc()
0009ce20 t NXU::NxTriangleMeshDesc::~NxTriangleMeshDesc()
000572e0 t NXU::C_InstanceRigidBody::setText(NXU::CELEMENT, char const*)
00055320 t NXU::C_InstanceRigidBody::getActors(NXU::NxSceneDesc*, NXU::C_Query*, NXU::C_PhysicsModel*, NxMat34 const&)
00057570 t NXU::C_InstanceRigidBody::~C_InstanceRigidBody()
000572c0 t NXU::C_InstanceRigidBody::~C_InstanceRigidBody()
000572c0 t NXU::C_InstanceRigidBody::~C_InstanceRigidBody()
00057360 t NXU::C_LibraryGeometries::setText(NXU::CELEMENT, char const*)
00058930 t NXU::C_LibraryGeometries::~C_LibraryGeometries()
00058180 t NXU::C_LibraryGeometries::~C_LibraryGeometries()
00058180 t NXU::C_LibraryGeometries::~C_LibraryGeometries()
00266ae0 b NXU::gProcessorBigEndian
000a7ad0 t NXU::NxDistanceJointDesc::load(NXU::SchemaStream&, char const*)
000a7830 t NXU::NxDistanceJointDesc::store(NXU::SchemaStream&, char const*)
000a7ce0 t NXU::NxDistanceJointDesc::copyTo(NxDistanceJointDesc&, NXU::CustomCopy&)
000a7c90 t NXU::NxDistanceJointDesc::copyFrom(NxDistanceJointDesc const&, NXU::CustomCopy&)
000a77c0 t NXU::NxDistanceJointDesc::NxDistanceJointDesc()
000a77c0 t NXU::NxDistanceJointDesc::NxDistanceJointDesc()
000a7820 t NXU::NxDistanceJointDesc::~NxDistanceJointDesc()
000a7820 t NXU::NxDistanceJointDesc::~NxDistanceJointDesc()
000a8eb0 t NXU::NxRevoluteJointDesc::load(NXU::SchemaStream&, char const*)
000a8b20 t NXU::NxRevoluteJointDesc::store(NXU::SchemaStream&, char const*)
000a9200 t NXU::NxRevoluteJointDesc::copyTo(NxRevoluteJointDesc&, NXU::CustomCopy&)
000a9130 t NXU::NxRevoluteJointDesc::copyFrom(NxRevoluteJointDesc const&, NXU::CustomCopy&)
000a8a30 t NXU::NxRevoluteJointDesc::NxRevoluteJointDesc()
000a8a30 t NXU::NxRevoluteJointDesc::NxRevoluteJointDesc()
000a8b10 t NXU::NxRevoluteJointDesc::~NxRevoluteJointDesc()
000a8b10 t NXU::NxRevoluteJointDesc::~NxRevoluteJointDesc()
000b9850 t NXU::NxSceneInstanceDesc::load(NXU::SchemaStream&, char const*)
000bc1e0 t NXU::NxSceneInstanceDesc::store(NXU::SchemaStream&, char const*)
000b97d0 t NXU::NxSceneInstanceDesc::NxSceneInstanceDesc()
000b97d0 t NXU::NxSceneInstanceDesc::NxSceneInstanceDesc()
000bc150 t NXU::NxSceneInstanceDesc::~NxSceneInstanceDesc()
000bc150 t NXU::NxSceneInstanceDesc::~NxSceneInstanceDesc()
000667d0 t NXU::NxuLoadGraphicsMesh(char const*, NXU::NxuGraphicsInterface*)
0006e4c0 t NXU::parseUserProperties(char const*, unsigned int&)
000935f0 t NXU::scaleCopyCollection(NXU::NxuPhysicsCollection const*, char const*, NxVec3 const&, NxPhysicsSDK*)
00093130 t NXU::copyConvexMeshScaled(NXU::NxConvexMeshDesc*, NXU::NxConvexMeshDesc*, NxVec3 const&, NxPhysicsSDK*, char const*, char const*)
00072ec0 t NXU::DistanceBetweenLines(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3*, NXU::float3*)
0006e300 t NXU::extractCollectionSDK(NxPhysicsSDK*, char const*, NXU_userNotify*)
0006b7a0 t NXU::getSceneInstanceName(NXU::NxuPhysicsCollection&, unsigned int)
00266ae3 b NXU::gUseClothActiveState
000bd4f0 t NXU::locateConvexMeshDesc(NXU::NxuPhysicsCollection*, char const*)
000703b0 t NXU::MatrixPerspectiveFov(float, float, float, float)
000aac10 t NXU::NxCollisionGroupDesc::load(NXU::SchemaStream&, char const*)
000aaaf0 t NXU::NxCollisionGroupDesc::store(NXU::SchemaStream&, char const*)
000aaab0 t NXU::NxCollisionGroupDesc::NxCollisionGroupDesc()
000aaab0 t NXU::NxCollisionGroupDesc::NxCollisionGroupDesc()
000aaae0 t NXU::NxCollisionGroupDesc::~NxCollisionGroupDesc()
000aaae0 t NXU::NxCollisionGroupDesc::~NxCollisionGroupDesc()
000a86f0 t NXU::NxJointLimitPairDesc::load(NXU::SchemaStream&, char const*)
000a8650 t NXU::NxJointLimitPairDesc::store(NXU::SchemaStream&, char const*)
000a87a0 t NXU::NxJointLimitPairDesc::copyTo(NxJointLimitPairDesc&, NXU::CustomCopy&)
000a8770 t NXU::NxJointLimitPairDesc::copyFrom(NxJointLimitPairDesc const&, NXU::CustomCopy&)
000a8600 t NXU::NxJointLimitPairDesc::NxJointLimitPairDesc()
000a8600 t NXU::NxJointLimitPairDesc::NxJointLimitPairDesc()
000a8640 t NXU::NxJointLimitPairDesc::~NxJointLimitPairDesc()
000a8640 t NXU::NxJointLimitPairDesc::~NxJointLimitPairDesc()
000a5700 t NXU::NxJointLimitSoftDesc::load(NXU::SchemaStream&, char const*)
000a5570 t NXU::NxJointLimitSoftDesc::store(NXU::SchemaStream&, char const*)
000a5800 t NXU::NxJointLimitSoftDesc::copyTo(NxJointLimitSoftDesc&, NXU::CustomCopy&)
000a57d0 t NXU::NxJointLimitSoftDesc::copyFrom(NxJointLimitSoftDesc const&, NXU::CustomCopy&)
000a5540 t NXU::NxJointLimitSoftDesc::NxJointLimitSoftDesc()
000a5540 t NXU::NxJointLimitSoftDesc::NxJointLimitSoftDesc()
000a5560 t NXU::NxJointLimitSoftDesc::~NxJointLimitSoftDesc()
000a5560 t NXU::NxJointLimitSoftDesc::~NxJointLimitSoftDesc()
000a8300 t NXU::NxPrismaticJointDesc::load(NXU::SchemaStream&, char const*)
000a8240 t NXU::NxPrismaticJointDesc::store(NXU::SchemaStream&, char const*)
000a8380 t NXU::NxPrismaticJointDesc::copyTo(NxPrismaticJointDesc&, NXU::CustomCopy&)
000a8370 t NXU::NxPrismaticJointDesc::copyFrom(NxPrismaticJointDesc const&, NXU::CustomCopy&)
000a8200 t NXU::NxPrismaticJointDesc::NxPrismaticJointDesc()
000a8200 t NXU::NxPrismaticJointDesc::NxPrismaticJointDesc()
000a8230 t NXU::NxPrismaticJointDesc::~NxPrismaticJointDesc()
000a8230 t NXU::NxPrismaticJointDesc::~NxPrismaticJointDesc()
0009ca40 t NXU::NxSimpleTriangleMesh::load(NXU::SchemaStream&, char const*)
000bad40 t NXU::NxSimpleTriangleMesh::store(NXU::SchemaStream&, char const*)
0009cc00 t NXU::NxSimpleTriangleMesh::copyTo(NxSimpleTriangleMesh&, NXU::CustomCopy&)
0009cbd0 t NXU::NxSimpleTriangleMesh::copyFrom(NxSimpleTriangleMesh const&, NXU::CustomCopy&)
0009c9a0 t NXU::NxSimpleTriangleMesh::NxSimpleTriangleMesh()
0009c9a0 t NXU::NxSimpleTriangleMesh::NxSimpleTriangleMesh()
0009c9e0 t NXU::NxSimpleTriangleMesh::~NxSimpleTriangleMesh()
0009c9e0 t NXU::NxSimpleTriangleMesh::~NxSimpleTriangleMesh()
000b3910 t NXU::NxSoftBodyAttachDesc::load(NXU::SchemaStream&, char const*)
000b3700 t NXU::NxSoftBodyAttachDesc::store(NXU::SchemaStream&, char const*)
000b36d0 t NXU::NxSoftBodyAttachDesc::NxSoftBodyAttachDesc()
000b36d0 t NXU::NxSoftBodyAttachDesc::NxSoftBodyAttachDesc()
000b36f0 t NXU::NxSoftBodyAttachDesc::~NxSoftBodyAttachDesc()
000b36f0 t NXU::NxSoftBodyAttachDesc::~NxSoftBodyAttachDesc()
000a9810 t NXU::NxSphericalJointDesc::load(NXU::SchemaStream&, char const*)
000a9410 t NXU::NxSphericalJointDesc::store(NXU::SchemaStream&, char const*)
000a9bf0 t NXU::NxSphericalJointDesc::copyTo(NxSphericalJointDesc&, NXU::CustomCopy&)
000a9ac0 t NXU::NxSphericalJointDesc::copyFrom(NxSphericalJointDesc const&, NXU::CustomCopy&)
000a92e0 t NXU::NxSphericalJointDesc::NxSphericalJointDesc()
000a92e0 t NXU::NxSphericalJointDesc::NxSphericalJointDesc()
000a9400 t NXU::NxSphericalJointDesc::~NxSphericalJointDesc()
000a9400 t NXU::NxSphericalJointDesc::~NxSphericalJointDesc()
000b9df0 t NXU::NxuPhysicsCollection::load(NXU::SchemaStream&, char const*)
000bc940 t NXU::NxuPhysicsCollection::store(NXU::SchemaStream&, char const*)
000b9cb0 t NXU::NxuPhysicsCollection::NxuPhysicsCollection()
000b9cb0 t NXU::NxuPhysicsCollection::NxuPhysicsCollection()
000bc400 t NXU::NxuPhysicsCollection::~NxuPhysicsCollection()
000bc400 t NXU::NxuPhysicsCollection::~NxuPhysicsCollection()
000c5a10 t NXU::releaseGlobalStrings()
0006b4d0 t NXU::addGroupCollisionFlag(NXU::NxuPhysicsCollection&, unsigned int, unsigned int, bool)
00057480 t NXU::C_InstanceVisualScene::setText(NXU::CELEMENT, char const*)
00057510 t NXU::C_InstanceVisualScene::~C_InstanceVisualScene()
00057460 t NXU::C_InstanceVisualScene::~C_InstanceVisualScene()
00057460 t NXU::C_InstanceVisualScene::~C_InstanceVisualScene()
000573d0 t NXU::C_LibraryVisualScenes::setText(NXU::CELEMENT, char const*)
00058630 t NXU::C_LibraryVisualScenes::~C_LibraryVisualScenes()
000582e0 t NXU::C_LibraryVisualScenes::~C_LibraryVisualScenes()
000582e0 t NXU::C_LibraryVisualScenes::~C_LibraryVisualScenes()
0006b780 t NXU::getSceneInstanceCount(NXU::NxuPhysicsCollection&)
0006a980 t NXU::instantiateCollection(NXU::NxuPhysicsCollection*, NxPhysicsSDK&, NxScene*, NxMat34 const*, NXU_userNotify*)
000bd5d0 t NXU::locateHeightFieldDesc(NXU::NxuPhysicsCollection*, char const*)
000af710 t NXU::NxForceFieldShapeDesc::load(NXU::SchemaStream&, char const*)
000af5d0 t NXU::NxForceFieldShapeDesc::store(NXU::SchemaStream&, char const*)
000af820 t NXU::NxForceFieldShapeDesc::copyTo(NxForceFieldShapeDesc&, NXU::CustomCopy&)
000af7c0 t NXU::NxForceFieldShapeDesc::copyFrom(NxForceFieldShapeDesc const&, NXU::CustomCopy&)
000af570 t NXU::NxForceFieldShapeDesc::NxForceFieldShapeDesc()
000af570 t NXU::NxForceFieldShapeDesc::NxForceFieldShapeDesc()
000af5c0 t NXU::NxForceFieldShapeDesc::~NxForceFieldShapeDesc()
000af5c0 t NXU::NxForceFieldShapeDesc::~NxForceFieldShapeDesc()
00072570 t NXU::PlaneLineIntersection(NXU::Plane const&, NXU::float3 const&, NXU::float3 const&)
00056460 t NXU::C_InstancePhysicsModel::getRigidBodyElements(NXU::NxSceneDesc*, NXU::C_Query*, NxMat34 const&)
00057300 t NXU::C_InstancePhysicsModel::setText(NXU::CELEMENT, char const*)
0005d200 t NXU::C_InstancePhysicsModel::C_InstancePhysicsModel(NXU::TiXmlElement*)
0005d200 t NXU::C_InstancePhysicsModel::C_InstancePhysicsModel(NXU::TiXmlElement*)
0005d480 t NXU::C_InstancePhysicsModel::~C_InstancePhysicsModel()
0005d310 t NXU::C_InstancePhysicsModel::~C_InstancePhysicsModel()
0005d310 t NXU::C_InstancePhysicsModel::~C_InstancePhysicsModel()
00057450 t NXU::C_InstancePhysicsScene::setText(NXU::CELEMENT, char const*)
00057530 t NXU::C_InstancePhysicsScene::~C_InstancePhysicsScene()
00057430 t NXU::C_InstancePhysicsScene::~C_InstancePhysicsScene()
00057430 t NXU::C_InstancePhysicsScene::~C_InstancePhysicsScene()
000572b0 t NXU::C_LibraryPhysicsModels::setText(NXU::CELEMENT, char const*)
00058870 t NXU::C_LibraryPhysicsModels::~C_LibraryPhysicsModels()
00058020 t NXU::C_LibraryPhysicsModels::~C_LibraryPhysicsModels()
00058020 t NXU::C_LibraryPhysicsModels::~C_LibraryPhysicsModels()
00057340 t NXU::C_LibraryPhysicsScenes::setText(NXU::CELEMENT, char const*)
000589f0 t NXU::C_LibraryPhysicsScenes::~C_LibraryPhysicsScenes()
000580d0 t NXU::C_LibraryPhysicsScenes::~C_LibraryPhysicsScenes()
000580d0 t NXU::C_LibraryPhysicsScenes::~C_LibraryPhysicsScenes()
00092ab0 t NXU::copyTriangleMeshScaled(NXU::NxTriangleMeshDesc*, NXU::NxTriangleMeshDesc*, NxVec3 const&, NxPhysicsSDK*, char const*, char const*)
0006e290 t NXU::extractCollectionScene(NxScene*, char const*, char const*)
000c5900 t NXU::ImportMemoryReadBuffer::storeDword(unsigned int)
000c5910 t NXU::ImportMemoryReadBuffer::storeFloat(float)
000c5930 t NXU::ImportMemoryReadBuffer::storeBuffer(void const*, unsigned int)
000c5920 t NXU::ImportMemoryReadBuffer::storeDouble(double)
000c58e0 t NXU::ImportMemoryReadBuffer::storeByte(unsigned char)
000c58f0 t NXU::ImportMemoryReadBuffer::storeWord(unsigned short)
000c5790 t NXU::ImportMemoryReadBuffer::ImportMemoryReadBuffer(unsigned char const*)
000c5790 t NXU::ImportMemoryReadBuffer::ImportMemoryReadBuffer(unsigned char const*)
000c50b0 t NXU::ImportMemoryReadBuffer::~ImportMemoryReadBuffer()
000c5000 t NXU::ImportMemoryReadBuffer::~ImportMemoryReadBuffer()
000c5000 t NXU::ImportMemoryReadBuffer::~ImportMemoryReadBuffer()
000bd560 t NXU::locateTriangleMeshDesc(NXU::NxuPhysicsCollection*, char const*)
000a54b0 t NXU::NxCylindricalJointDesc::load(NXU::SchemaStream&, char const*)
000a53f0 t NXU::NxCylindricalJointDesc::store(NXU::SchemaStream&, char const*)
000a5530 t NXU::NxCylindricalJointDesc::copyTo(NxCylindricalJointDesc&, NXU::CustomCopy&)
000a5520 t NXU::NxCylindricalJointDesc::copyFrom(NxCylindricalJointDesc const&, NXU::CustomCopy&)
000a53b0 t NXU::NxCylindricalJointDesc::NxCylindricalJointDesc()
000a53b0 t NXU::NxCylindricalJointDesc::NxCylindricalJointDesc()
000a53e0 t NXU::NxCylindricalJointDesc::~NxCylindricalJointDesc()
000a53e0 t NXU::NxCylindricalJointDesc::~NxCylindricalJointDesc()
000a3010 t NXU::NxHeightFieldShapeDesc::load(NXU::SchemaStream&, char const*)
000a2ca0 t NXU::NxHeightFieldShapeDesc::store(NXU::SchemaStream&, char const*)
000a32b0 t NXU::NxHeightFieldShapeDesc::copyTo(NxHeightFieldShapeDesc&, NXU::CustomCopy&)
000a3230 t NXU::NxHeightFieldShapeDesc::copyFrom(NxHeightFieldShapeDesc const&, NXU::CustomCopy&)
000a2c30 t NXU::NxHeightFieldShapeDesc::NxHeightFieldShapeDesc()
000a2c30 t NXU::NxHeightFieldShapeDesc::NxHeightFieldShapeDesc()
000a2c90 t NXU::NxHeightFieldShapeDesc::~NxHeightFieldShapeDesc()
000a2c90 t NXU::NxHeightFieldShapeDesc::~NxHeightFieldShapeDesc()
000a8170 t NXU::NxPointOnLineJointDesc::load(NXU::SchemaStream&, char const*)
000a80b0 t NXU::NxPointOnLineJointDesc::store(NXU::SchemaStream&, char const*)
000a81f0 t NXU::NxPointOnLineJointDesc::copyTo(NxPointOnLineJointDesc&, NXU::CustomCopy&)
000a81e0 t NXU::NxPointOnLineJointDesc::copyFrom(NxPointOnLineJointDesc const&, NXU::CustomCopy&)
000a8070 t NXU::NxPointOnLineJointDesc::NxPointOnLineJointDesc()
000a8070 t NXU::NxPointOnLineJointDesc::NxPointOnLineJointDesc()
000a80a0 t NXU::NxPointOnLineJointDesc::~NxPointOnLineJointDesc()
000a80a0 t NXU::NxPointOnLineJointDesc::~NxPointOnLineJointDesc()
0008cc50 t NXU::NxuPhysicsInstantiator::instantiate(NxPhysicsSDK&, NXU_userNotify*, NxScene*, NxMat34 const*)
000864f0 t NXU::NxuPhysicsInstantiator::instanceModel(NxScene&, NXU::NxSceneDesc&, NxMat34&, bool, NXU_userNotify*, int)
000863f0 t NXU::NxuPhysicsInstantiator::instanceConvexes(NxPhysicsSDK&, NXU_userNotify*)
0008bf50 t NXU::NxuPhysicsInstantiator::instantiateScene(char const*, int, NxPhysicsSDK&, NXU_userNotify*, NxScene*, NxMat34 const*)
00084e30 t NXU::NxuPhysicsInstantiator::instanceSkeletons(NxPhysicsSDK&, NXU_userNotify*)
00085840 t NXU::NxuPhysicsInstantiator::instanceTrimeshes(NxPhysicsSDK&, NXU_userNotify*)
00085030 t NXU::NxuPhysicsInstantiator::instanceClothMeshes(NxPhysicsSDK&, NXU_userNotify*)
00085c80 t NXU::NxuPhysicsInstantiator::instanceCompartments(NxPhysicsSDK&, NXU::NxSceneDesc&, NXU_userNotify*, bool)
000858c0 t NXU::NxuPhysicsInstantiator::instanceHeightFields(NxPhysicsSDK&, NXU_userNotify*)
00086200 t NXU::NxuPhysicsInstantiator::instantiateConvexMesh(NxPhysicsSDK&, NXU::NxConvexMeshDesc&, char const*, NXU_userNotify*, NXU::CustomCopy&)
000852c0 t NXU::NxuPhysicsInstantiator::instanceSoftBodyMeshes(NxPhysicsSDK&, NXU_userNotify*)
00085550 t NXU::NxuPhysicsInstantiator::instantiateTriangleMesh(NxPhysicsSDK&, NXU::NxTriangleMeshDesc&, char const*, NXU_userNotify*, NXU::CustomCopy&)
0008c800 t NXU::NxuPhysicsInstantiator::instantiateSceneInstance(NXU::NxSceneInstanceDesc*, NxPhysicsSDK&, NXU_userNotify*, NxMat34 const*, int)
00084dd0 t NXU::NxuPhysicsInstantiator::NxuPhysicsInstantiator(NXU::NxuPhysicsCollection*)
00084e00 t NXU::NxuPhysicsInstantiator::NxuPhysicsInstantiator()
00084dd0 t NXU::NxuPhysicsInstantiator::NxuPhysicsInstantiator(NXU::NxuPhysicsCollection*)
00084e00 t NXU::NxuPhysicsInstantiator::NxuPhysicsInstantiator()
00084d70 t NXU::NxuPhysicsInstantiator::~NxuPhysicsInstantiator()
00084d60 t NXU::NxuPhysicsInstantiator::~NxuPhysicsInstantiator()
00084d60 t NXU::NxuPhysicsInstantiator::~NxuPhysicsInstantiator()
000c5b20 t NXU::releaseGlobalInstances()
0006c0c0 t NXU::saveCollectionToMemory(NXU::NxuPhysicsCollection*, char const*, NXU::NXU_FileType, bool, bool, void*, int, int&)
0006b810 t NXU::setUseClothActiveState(bool)
0006fd20 t NXU::ThreePlaneIntersection(NXU::Plane const&, NXU::Plane const&, NXU::Plane const&)
0006b2e0 t NXU::addForceFieldShapeGroup(NXU::NxuPhysicsCollection&, NxForceFieldShapeGroup&, char const*, char const*)
00266ae2 b NXU::gUseSoftBodyActiveState
000c4f60 t NXU::ImportMemoryWriteBuffer::storeDword(unsigned int)
000c4f90 t NXU::ImportMemoryWriteBuffer::storeFloat(float)
000c5170 t NXU::ImportMemoryWriteBuffer::storeBuffer(void const*, unsigned int)
000c4fc0 t NXU::ImportMemoryWriteBuffer::storeDouble(double)
000c5780 t NXU::ImportMemoryWriteBuffer::clear()
000c4f00 t NXU::ImportMemoryWriteBuffer::storeByte(unsigned char)
000c4f30 t NXU::ImportMemoryWriteBuffer::storeWord(unsigned short)
000c5750 t NXU::ImportMemoryWriteBuffer::ImportMemoryWriteBuffer()
000c5750 t NXU::ImportMemoryWriteBuffer::ImportMemoryWriteBuffer()
000c5250 t NXU::ImportMemoryWriteBuffer::~ImportMemoryWriteBuffer()
000c5210 t NXU::ImportMemoryWriteBuffer::~ImportMemoryWriteBuffer()
000c5210 t NXU::ImportMemoryWriteBuffer::~ImportMemoryWriteBuffer()
000a7fe0 t NXU::NxPointInPlaneJointDesc::load(NXU::SchemaStream&, char const*)
000a7f20 t NXU::NxPointInPlaneJointDesc::store(NXU::SchemaStream&, char const*)
000a8060 t NXU::NxPointInPlaneJointDesc::copyTo(NxPointInPlaneJointDesc&, NXU::CustomCopy&)
000a8050 t NXU::NxPointInPlaneJointDesc::copyFrom(NxPointInPlaneJointDesc const&, NXU::CustomCopy&)
000a7ee0 t NXU::NxPointInPlaneJointDesc::NxPointInPlaneJointDesc()
000a7ee0 t NXU::NxPointInPlaneJointDesc::NxPointInPlaneJointDesc()
000a7f10 t NXU::NxPointInPlaneJointDesc::~NxPointInPlaneJointDesc()
000a7f10 t NXU::NxPointInPlaneJointDesc::~NxPointInPlaneJointDesc()
000a2040 t NXU::NxTriangleMeshShapeDesc::load(NXU::SchemaStream&, char const*)
000a1dd0 t NXU::NxTriangleMeshShapeDesc::store(NXU::SchemaStream&, char const*)
000a2290 t NXU::NxTriangleMeshShapeDesc::copyTo(NxTriangleMeshShapeDesc&, NXU::CustomCopy&)
000a2240 t NXU::NxTriangleMeshShapeDesc::copyFrom(NxTriangleMeshShapeDesc const&, NXU::CustomCopy&)
000a1d80 t NXU::NxTriangleMeshShapeDesc::NxTriangleMeshShapeDesc()
000a1d80 t NXU::NxTriangleMeshShapeDesc::NxTriangleMeshShapeDesc()
000a1dc0 t NXU::NxTriangleMeshShapeDesc::~NxTriangleMeshShapeDesc()
000a1dc0 t NXU::NxTriangleMeshShapeDesc::~NxTriangleMeshShapeDesc()
0006b4c0 t NXU::releaseCollectionMemory(void*)
0006aab0 t NXU::releasePersistentMemory()
0006c6c0 t NXU::autoGenerateCCDSkeletons(NxActor*, float, unsigned int)
000af9d0 t NXU::NxBoxForceFieldShapeDesc::load(NXU::SchemaStream&, char const*)
000af8d0 t NXU::NxBoxForceFieldShapeDesc::store(NXU::SchemaStream&, char const*)
000afad0 t NXU::NxBoxForceFieldShapeDesc::copyTo(NxBoxForceFieldShapeDesc&, NXU::CustomCopy&)
000afa60 t NXU::NxBoxForceFieldShapeDesc::copyFrom(NxBoxForceFieldShapeDesc const&, NXU::CustomCopy&)
000af880 t NXU::NxBoxForceFieldShapeDesc::NxBoxForceFieldShapeDesc()
000af880 t NXU::NxBoxForceFieldShapeDesc::NxBoxForceFieldShapeDesc()
000af8c0 t NXU::NxBoxForceFieldShapeDesc::~NxBoxForceFieldShapeDesc()
000af8c0 t NXU::NxBoxForceFieldShapeDesc::~NxBoxForceFieldShapeDesc()
000a5920 t NXU::NxJointLimitSoftPairDesc::load(NXU::SchemaStream&, char const*)
000a5880 t NXU::NxJointLimitSoftPairDesc::store(NXU::SchemaStream&, char const*)
000a59e0 t NXU::NxJointLimitSoftPairDesc::copyTo(NxJointLimitSoftPairDesc&, NXU::CustomCopy&)
000a59a0 t NXU::NxJointLimitSoftPairDesc::copyFrom(NxJointLimitSoftPairDesc const&, NXU::CustomCopy&)
000a5830 t NXU::NxJointLimitSoftPairDesc::NxJointLimitSoftPairDesc()
000a5830 t NXU::NxJointLimitSoftPairDesc::NxJointLimitSoftPairDesc()
000a5870 t NXU::NxJointLimitSoftPairDesc::~NxJointLimitSoftPairDesc()
000a5870 t NXU::NxJointLimitSoftPairDesc::~NxJointLimitSoftPairDesc()
0006b350 t NXU::addForceFieldLinearKernel(NXU::NxuPhysicsCollection&, NxForceFieldLinearKernel&, char const*, char const*)
0006b6a0 t NXU::addToCurrentSceneInstance(NXU::NxuPhysicsCollection&, char const*, char const*, NxMat34 const&, bool, char const*)
00056fc0 t NXU::C_InstanceRigidConstraint::setText(NXU::CELEMENT, char const*)
000560f0 t NXU::C_InstanceRigidConstraint::getJoints(NXU::NxSceneDesc*, NXU::C_Query*, NXU::C_PhysicsModel*)
00057690 t NXU::C_InstanceRigidConstraint::~C_InstanceRigidConstraint()
00056fb0 t NXU::C_InstanceRigidConstraint::~C_InstanceRigidConstraint()
00056fb0 t NXU::C_InstanceRigidConstraint::~C_InstanceRigidConstraint()
00057420 t NXU::C_LibraryPhysicsMaterials::setText(NXU::CELEMENT, char const*)
000587b0 t NXU::C_LibraryPhysicsMaterials::~C_LibraryPhysicsMaterials()
00058390 t NXU::C_LibraryPhysicsMaterials::~C_LibraryPhysicsMaterials()
00058390 t NXU::C_LibraryPhysicsMaterials::~C_LibraryPhysicsMaterials()
0006b710 t NXU::closeCurrentSceneInstance(NXU::NxuPhysicsCollection&)
0006b7d0 t NXU::getSceneInstanceSceneName(NXU::NxuPhysicsCollection&, unsigned int)
0009d8f0 t NXU::NxConstraintDominanceDesc::load(NXU::SchemaStream&, char const*)
0009d770 t NXU::NxConstraintDominanceDesc::store(NXU::SchemaStream&, char const*)
0009d730 t NXU::NxConstraintDominanceDesc::NxConstraintDominanceDesc()
0009d730 t NXU::NxConstraintDominanceDesc::NxConstraintDominanceDesc()
0009d760 t NXU::NxConstraintDominanceDesc::~NxConstraintDominanceDesc()
0009d760 t NXU::NxConstraintDominanceDesc::~NxConstraintDominanceDesc()
0006b820 t NXU::setUseSoftBodyActiveState(bool)
000b1670 t NXU::NxForceFieldGroupReference::load(NXU::SchemaStream&, char const*)
000b15c0 t NXU::NxForceFieldGroupReference::store(NXU::SchemaStream&, char const*)
000b15a0 t NXU::NxForceFieldGroupReference::NxForceFieldGroupReference()
000b15a0 t NXU::NxForceFieldGroupReference::NxForceFieldGroupReference()
000b15b0 t NXU::NxForceFieldGroupReference::~NxForceFieldGroupReference()
000b15b0 t NXU::NxForceFieldGroupReference::~NxForceFieldGroupReference()
000b0690 t NXU::NxForceFieldShapeGroupDesc::load(NXU::SchemaStream&, char const*)
000b03f0 t NXU::NxForceFieldShapeGroupDesc::store(NXU::SchemaStream&, char const*)
000b0a40 t NXU::NxForceFieldShapeGroupDesc::copyTo(NxForceFieldShapeGroupDesc&, NXU::CustomCopy&)
000b0a10 t NXU::NxForceFieldShapeGroupDesc::copyFrom(NxForceFieldShapeGroupDesc const&, NXU::CustomCopy&)
000b0340 t NXU::NxForceFieldShapeGroupDesc::NxForceFieldShapeGroupDesc()
000b0340 t NXU::NxForceFieldShapeGroupDesc::NxForceFieldShapeGroupDesc()
000b0380 t NXU::NxForceFieldShapeGroupDesc::~NxForceFieldShapeGroupDesc()
000b0380 t NXU::NxForceFieldShapeGroupDesc::~NxForceFieldShapeGroupDesc()
000b01c0 t NXU::NxConvexForceFieldShapeDesc::load(NXU::SchemaStream&, char const*)
000b00f0 t NXU::NxConvexForceFieldShapeDesc::store(NXU::SchemaStream&, char const*)
000b02d0 t NXU::NxConvexForceFieldShapeDesc::copyTo(NxConvexForceFieldShapeDesc&, NXU::CustomCopy&)
000b0250 t NXU::NxConvexForceFieldShapeDesc::copyFrom(NxConvexForceFieldShapeDesc const&, NXU::CustomCopy&)
000b00b0 t NXU::NxConvexForceFieldShapeDesc::NxConvexForceFieldShapeDesc()
000b00b0 t NXU::NxConvexForceFieldShapeDesc::NxConvexForceFieldShapeDesc()
000b00e0 t NXU::NxConvexForceFieldShapeDesc::~NxConvexForceFieldShapeDesc()
000b00e0 t NXU::NxConvexForceFieldShapeDesc::~NxConvexForceFieldShapeDesc()
000b14f0 t NXU::NxForceFieldScaleTableEntry::load(NXU::SchemaStream&, char const*)
000b13c0 t NXU::NxForceFieldScaleTableEntry::store(NXU::SchemaStream&, char const*)
000b1380 t NXU::NxForceFieldScaleTableEntry::NxForceFieldScaleTableEntry()
000b1380 t NXU::NxForceFieldScaleTableEntry::NxForceFieldScaleTableEntry()
000b13b0 t NXU::NxForceFieldScaleTableEntry::~NxForceFieldScaleTableEntry()
000b13b0 t NXU::NxForceFieldScaleTableEntry::~NxForceFieldScaleTableEntry()
000afc60 t NXU::NxSphereForceFieldShapeDesc::load(NXU::SchemaStream&, char const*)
000afb80 t NXU::NxSphereForceFieldShapeDesc::store(NXU::SchemaStream&, char const*)
000afd50 t NXU::NxSphereForceFieldShapeDesc::copyTo(NxSphereForceFieldShapeDesc&, NXU::CustomCopy&)
000afcf0 t NXU::NxSphereForceFieldShapeDesc::copyFrom(NxSphereForceFieldShapeDesc const&, NXU::CustomCopy&)
000afb40 t NXU::NxSphereForceFieldShapeDesc::NxSphereForceFieldShapeDesc()
000afb40 t NXU::NxSphereForceFieldShapeDesc::NxSphereForceFieldShapeDesc()
000afb70 t NXU::NxSphereForceFieldShapeDesc::~NxSphereForceFieldShapeDesc()
000afb70 t NXU::NxSphereForceFieldShapeDesc::~NxSphereForceFieldShapeDesc()
0006c680 t NXU::setAutoGenerateCCDSkeletons(bool, float, unsigned int)
000aff20 t NXU::NxCapsuleForceFieldShapeDesc::load(NXU::SchemaStream&, char const*)
000afe00 t NXU::NxCapsuleForceFieldShapeDesc::store(NXU::SchemaStream&, char const*)
000b0040 t NXU::NxCapsuleForceFieldShapeDesc::copyTo(NxCapsuleForceFieldShapeDesc&, NXU::CustomCopy&)
000affd0 t NXU::NxCapsuleForceFieldShapeDesc::copyFrom(NxCapsuleForceFieldShapeDesc const&, NXU::CustomCopy&)
000afdb0 t NXU::NxCapsuleForceFieldShapeDesc::NxCapsuleForceFieldShapeDesc()
000afdb0 t NXU::NxCapsuleForceFieldShapeDesc::NxCapsuleForceFieldShapeDesc()
000afdf0 t NXU::NxCapsuleForceFieldShapeDesc::~NxCapsuleForceFieldShapeDesc()
000afdf0 t NXU::NxCapsuleForceFieldShapeDesc::~NxCapsuleForceFieldShapeDesc()
000b0f80 t NXU::NxForceFieldLinearKernelDesc::load(NXU::SchemaStream&, char const*)
000b0b40 t NXU::NxForceFieldLinearKernelDesc::store(NXU::SchemaStream&, char const*)
000b1260 t NXU::NxForceFieldLinearKernelDesc::copyTo(NxForceFieldLinearKernelDesc&, NXU::CustomCopy&)
000b1140 t NXU::NxForceFieldLinearKernelDesc::copyFrom(NxForceFieldLinearKernelDesc const&, NXU::CustomCopy&)
000b0a70 t NXU::NxForceFieldLinearKernelDesc::NxForceFieldLinearKernelDesc()
000b0a70 t NXU::NxForceFieldLinearKernelDesc::NxForceFieldLinearKernelDesc()
000b0b30 t NXU::NxForceFieldLinearKernelDesc::~NxForceFieldLinearKernelDesc()
000b0b30 t NXU::NxForceFieldLinearKernelDesc::~NxForceFieldLinearKernelDesc()
000b2f20 t NXU::NxSpringAndDamperEffectorDesc::load(NXU::SchemaStream&, char const*)
000b2aa0 t NXU::NxSpringAndDamperEffectorDesc::store(NXU::SchemaStream&, char const*)
000b31d0 t NXU::NxSpringAndDamperEffectorDesc::copyTo(NxSpringAndDamperEffectorDesc&, NXU::CustomCopy&)
000b3150 t NXU::NxSpringAndDamperEffectorDesc::copyFrom(NxSpringAndDamperEffectorDesc const&, NXU::CustomCopy&)
000b2a30 t NXU::NxSpringAndDamperEffectorDesc::NxSpringAndDamperEffectorDesc()
000b2a30 t NXU::NxSpringAndDamperEffectorDesc::NxSpringAndDamperEffectorDesc()
000b2a90 t NXU::NxSpringAndDamperEffectorDesc::~NxSpringAndDamperEffectorDesc()
000b2a90 t NXU::NxSpringAndDamperEffectorDesc::~NxSpringAndDamperEffectorDesc()
00073f80 t NXU::b2b(NXU::int3 const&, NXU::int3 const&)
00071400 t NXU::dot(NXU::Quaternion const&, NXU::Quaternion const&)
0006ef30 t NXU::dot(NXU::float3 const&, NXU::float3 const&)
00073ef0 t NXU::isa(NXU::int3 const&, NXU::int3 const&)
0006ec80 t NXU::sqr(float)
00074170 t NXU::Tri::neib(int, int)
00071a30 t NXU::Yaw(NXU::Quaternion const&)
00071f40 t NXU::Yaw(NXU::float3 const&)
0006ef70 t NXU::cmul(NXU::float3 const&, NXU::float3 const&)
0006ff30 t NXU::cmul(NXU::float4 const&, NXU::float4 const&)
00073df0 t NXU::orth(NXU::float3 const&)
00071c90 t NXU::Roll(NXU::Quaternion)
00085ab0 t NXU::same(float, float)
00085ae0 t NXU::same(NxVec3 const&, NxVec3 const&)
0006f120 t NXU::vabs(NXU::float3 const&)
00073fb0 t NXU::above(NXU::float3*, NXU::int3 const&, NXU::float3 const&, float)
00079d50 t NXU::Array<int>::Add(int)
00079cc0 t NXU::Array<int>::allocate(int)
00079d20 t NXU::Array<int>::Array(int)
00079d20 t NXU::Array<int>::Array(int)
00079a40 t NXU::Array<int>::~Array()
00079a40 t NXU::Array<int>::~Array()
00079c60 t NXU::Array<NXU::Plane>::Add(NXU::Plane)
00079be0 t NXU::Array<NXU::Plane>::allocate(int)
00079ac0 t NXU::Array<NXU::Plane>::~Array()
00079ac0 t NXU::Array<NXU::Plane>::~Array()
00079b80 t NXU::Array<NXU::float3>::Add(NXU::float3)
00079b00 t NXU::Array<NXU::float3>::allocate(int)
00079a80 t NXU::Array<NXU::float3>::~Array()
00079a80 t NXU::Array<NXU::float3>::~Array()
00079e00 t NXU::Array<NXU::Tri*>::SetSize(int)
00079da0 t NXU::Array<NXU::Tri*>::allocate(int)
00079a00 t NXU::Array<NXU::Tri*>::~Array()
00079a00 t NXU::Array<NXU::Tri*>::~Array()
0006efb0 t NXU::cross(NXU::float3 const&, NXU::float3 const&)
00071b70 t NXU::Pitch(NXU::Quaternion const&)
00071fa0 t NXU::Pitch(NXU::float3 const&)
00071ff0 t NXU::Plane::Transform(NXU::float3 const&, NXU::Quaternion const&)
00073ed0 t NXU::roll3(NXU::int3)
0006ecd0 t NXU::Round(float, float)
0006f2a0 t NXU::Round(NXU::float3 const&, float)
0006a850 t NXU::setId(NXU::NxuPhysicsCollection*, char const*, char const*, bool)
00071500 t NXU::slerp(NXU::Quaternion, NXU::Quaternion const&, float)
0006ed70 t NXU::argmin(float*, int)
00074220 t NXU::b2bfix(NXU::Tri*, NXU::Tri*)
00056f70 t NXU::C_Base::setText(NXU::CELEMENT, char const*)
000599b0 t NXU::C_Base::C_Base(NXU::TiXmlElement*)
000599b0 t NXU::C_Base::C_Base(NXU::TiXmlElement*)
000576d0 t NXU::C_Base::~C_Base()
00056f50 t NXU::C_Base::~C_Base()
00056f50 t NXU::C_Base::~C_Base()
0006eca0 t NXU::clampf(float)
000562b0 t NXU::C_Mesh::getTriangleMesh(NXU::C_TriangleMesh&, NXU::C_Query*)
000571f0 t NXU::C_Mesh::setText(NXU::CELEMENT, char const*)
0005cc90 t NXU::C_Mesh::C_Mesh(NXU::TiXmlElement*, bool)
0005cc90 t NXU::C_Mesh::C_Mesh(NXU::TiXmlElement*, bool)
0005cea0 t NXU::C_Mesh::~C_Mesh()
0005cd90 t NXU::C_Mesh::~C_Mesh()
0005cd90 t NXU::C_Mesh::~C_Mesh()
00057390 t NXU::C_Node::setText(NXU::CELEMENT, char const*)
000576f0 t NXU::C_Node::~C_Node()
00057370 t NXU::C_Node::~C_Node()
00057370 t NXU::C_Node::~C_Node()
0004c790 t NXU::strtol(char const*, int)
0004c8c0 t NXU::Asc2Bin(char const*, int, char const*, void*)
0004d630 t NXU::Asc2Bin(char const*, int&, char const*)
00057670 t NXU::C_Array::~C_Array()
00056fe0 t NXU::C_Array::~C_Array()
00056fe0 t NXU::C_Array::~C_Array()
00074390 t NXU::checkit(NXU::Tri*)
00057190 t NXU::C_Input::setText(NXU::CELEMENT, char const*)
000575b0 t NXU::C_Input::~C_Input()
00057170 t NXU::C_Input::~C_Input()
00057170 t NXU::C_Input::~C_Input()
000754e0 t NXU::ConvexH::ConvexH(int, int, int)
000754e0 t NXU::ConvexH::ConvexH(int, int, int)
00057110 t NXU::C_Param::setText(NXU::CELEMENT, char const*)
000575f0 t NXU::C_Param::~C_Param()
000570f0 t NXU::C_Param::~C_Param()
000570f0 t NXU::C_Param::~C_Param()
000576b0 t NXU::C_Query::~C_Query()
00056f80 t NXU::C_Query::~C_Query()
00056f80 t NXU::C_Query::~C_Query()
000574a0 t NXU::C_Scene::setText(NXU::CELEMENT, char const*)
00058b70 t NXU::C_Scene::~C_Scene()
00058440 t NXU::C_Scene::~C_Scene()
00058440 t NXU::C_Scene::~C_Scene()
00059590 t NXU::C_Shape::setText(NXU::CELEMENT, char const*)
00057730 t NXU::C_Shape::~C_Shape()
00057220 t NXU::C_Shape::~C_Shape()
00057220 t NXU::C_Shape::~C_Shape()
00076950 t NXU::extrude(NXU::Tri*, int)
00074620 t NXU::GetDist(float, float, float, float const*)
00074050 t NXU::hasedge(NXU::int3 const&, int, int)
000740d0 t NXU::hasvert(NXU::int3 const&, int)
000710e0 t NXU::Inverse(NXU::Quaternion const&)
0006f560 t NXU::Inverse(NXU::float3x3 const&)
000707e0 t NXU::Inverse(NXU::float4x4 const&)
000736e0 t NXU::PolyHit(NXU::float3 const*, int, NXU::float3 const&, NXU::float3 const&, NXU::float3*, NXU::float3*)
0006ad90 t NXU::addActor(NXU::NxuPhysicsCollection&, NxActor&, char const*, char const*)
0006ae70 t NXU::addCloth(NXU::NxuPhysicsCollection&, NxCloth&, char const*, char const*)
0006aee0 t NXU::addFluid(NXU::NxuPhysicsCollection&, NxFluid&, char const*, char const*)
0006ae00 t NXU::addJoint(NXU::NxuPhysicsCollection&, NxJoint&, char const*, char const*)
0006abb0 t NXU::addScene(NXU::NxuPhysicsCollection&, NxScene&, char const*, char const*)
00078830 t NXU::calchull(NXU::float3*, int, int*&, int&, int)
0006e3c0 t NXU::coreDump(NxPhysicsSDK*, char const*, NXU::NXU_FileType, bool, bool, NXU_userNotify*)
00057160 t NXU::C_Source::setText(NXU::CELEMENT, char const*)
000575d0 t NXU::C_Source::~C_Source()
00057140 t NXU::C_Source::~C_Source()
00057140 t NXU::C_Source::~C_Source()
00065dc0 t NXU::nxu_feof(NXU::NXU_FILE*)
000669c0 t NXU::ParsePxl::ProcessNode(int, char const*, int)
00067500 t NXU::ParsePxl::Process(NXU::TiXmlNode*, int)
00067c30 t NXU::ParsePxl::Traverse(NXU::TiXmlNode*, int)
000729d0 t NXU::BoxInside(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&)
0008efd0 t NXU::copyActor(NXU::NxActorDesc*, NXU::NxActorDesc const*, NxVec3 const&)
0008cf40 t NXU::copyJoint(NXU::NxJointDesc*)
00066050 t NXU::createBox(NxVec3&, NXU::NxuGeometry&, NxMat34 const*, float, unsigned int)
00074400 t NXU::hasVolume(NXU::float3*, int, int, int, int)
0006f160 t NXU::magnitude(NXU::float3 const&)
00071450 t NXU::normalize(NXU::Quaternion)
0006f1a0 t NXU::normalize(NXU::float3 const&)
00065640 t NXU::nxu_fopen(char const*, char const*, void*, int)
00065be0 t NXU::nxu_fputc(char, NXU::NXU_FILE*)
00065cc0 t NXU::nxu_fputs(char const*, NXU::NXU_FILE*)
000657e0 t NXU::nxu_fread(void*, int, int, NXU::NXU_FILE*)
00065b50 t NXU::nxu_fseek(NXU::NXU_FILE*, int, int)
00065bb0 t NXU::nxu_ftell(NXU::NXU_FILE*)
00073b80 t NXU::PlaneTest(NXU::Plane const&, NXU::float3 const&)
00074320 t NXU::removeb2b(NXU::Tri*, NXU::Tri*)
000c4720 t NXU::SchemaXML::preParse(NXU::TiXmlNode*)
00074100 t NXU::shareedge(NXU::int3 const&, NXU::int3 const&)
00073bf0 t NXU::SplitTest(NXU::ConvexH&, NXU::Plane const&)
000759d0 t NXU::test_btbq()
000755b0 t NXU::test_cube()
000c9e50 t NXU::TiXmlBase::IsAlphaNum(unsigned char, NXU::TiXmlEncoding)
0025e4c0 d NXU::TiXmlBase::errorString
000ca3c0 t NXU::TiXmlBase::StringEqual(char const*, char const*, bool, NXU::TiXmlEncoding)
001e9a00 r NXU::TiXmlBase::utf8ByteTable
000c9fc0 t NXU::TiXmlBase::SkipWhiteSpace(char const*, NXU::TiXmlEncoding)
000c6b00 t NXU::TiXmlBase::StringToBuffer::StringToBuffer(NXU::TiXmlString const&)
000c6b00 t NXU::TiXmlBase::StringToBuffer::StringToBuffer(NXU::TiXmlString const&)
000c6b50 t NXU::TiXmlBase::StringToBuffer::~StringToBuffer()
000c6b50 t NXU::TiXmlBase::StringToBuffer::~StringToBuffer()
0025e4a0 d NXU::TiXmlBase::condenseWhiteSpace
000c9d20 t NXU::TiXmlBase::ConvertUTF32ToUTF8(unsigned long, char*, int*)
0025e500 d NXU::TiXmlBase::entity
000c9e20 t NXU::TiXmlBase::IsAlpha(unsigned char, NXU::TiXmlEncoding)
000ca0c0 t NXU::TiXmlBase::ReadName(char const*, NXU::TiXmlString*, NXU::TiXmlEncoding)
000ca4a0 t NXU::TiXmlBase::ReadText(char const*, NXU::TiXmlString*, bool, char const*, bool, NXU::TiXmlEncoding)
000ca190 t NXU::TiXmlBase::GetEntity(char const*, char*, int*, NXU::TiXmlEncoding)
000c68c0 t NXU::TiXmlBase::PutString(NXU::TiXmlString const&, NXU::TiXmlOutStream*)
000c65e0 t NXU::TiXmlBase::PutString(NXU::TiXmlString const&, NXU::TiXmlString*)
000c9b40 t NXU::TiXmlBase::~TiXmlBase()
000c99d0 t NXU::TiXmlBase::~TiXmlBase()
000c99d0 t NXU::TiXmlBase::~TiXmlBase()
000c7020 t NXU::TiXmlNode::FirstChild(char const*)
000c9a40 t NXU::TiXmlNode::ToDocument()
000c7630 t NXU::TiXmlNode::GetDocument()
000c71d0 t NXU::TiXmlNode::NextSibling(char const*)
000c6f60 t NXU::TiXmlNode::RemoveChild(NXU::TiXmlNode*)
000c6d60 t NXU::TiXmlNode::LinkEndChild(NXU::TiXmlNode*)
000c6ed0 t NXU::TiXmlNode::ReplaceChild(NXU::TiXmlNode*, NXU::TiXmlNode const&)
000c9a90 t NXU::TiXmlNode::ToDeclaration()
000c6da0 t NXU::TiXmlNode::InsertEndChild(NXU::TiXmlNode const&)
000c7220 t NXU::TiXmlNode::IterateChildren(char const*, NXU::TiXmlNode*)
000c7130 t NXU::TiXmlNode::IterateChildren(NXU::TiXmlNode*)
000c72a0 t NXU::TiXmlNode::PreviousSibling(char const*)
000c6e60 t NXU::TiXmlNode::InsertAfterChild(NXU::TiXmlNode*, NXU::TiXmlNode const&)
000c7400 t NXU::TiXmlNode::FirstChildElement(char const*)
000c7340 t NXU::TiXmlNode::FirstChildElement()
000c6df0 t NXU::TiXmlNode::InsertBeforeChild(NXU::TiXmlNode*, NXU::TiXmlNode const&)
000c7580 t NXU::TiXmlNode::NextSiblingElement(char const*)
000c74c0 t NXU::TiXmlNode::NextSiblingElement()
000c6d20 t NXU::TiXmlNode::Clear()
000c9a80 t NXU::TiXmlNode::ToText()
000cab20 t NXU::TiXmlNode::Identify(char const*, NXU::TiXmlEncoding)
000c70c0 t NXU::TiXmlNode::LastChild(char const*)
000c9a60 t NXU::TiXmlNode::ToComment()
000c9a50 t NXU::TiXmlNode::ToElement()
000c9a70 t NXU::TiXmlNode::ToUnknown()
000c6b70 t NXU::TiXmlNode::TiXmlNode(NXU::TiXmlNode::NodeType)
000c6b70 t NXU::TiXmlNode::TiXmlNode(NXU::TiXmlNode::NodeType)
000c65c0 t NXU::TiXmlNode::~TiXmlNode()
000c6550 t NXU::TiXmlNode::~TiXmlNode()
000c6550 t NXU::TiXmlNode::~TiXmlNode()
000cb300 t NXU::TiXmlText::Parse(char const*, NXU::TiXmlParsingData*, NXU::TiXmlEncoding)
000c9af0 t NXU::TiXmlText::ToText()
000c9bd0 t NXU::TiXmlText::~TiXmlText()
000c9bb0 t NXU::TiXmlText::~TiXmlText()
000c9bb0 t NXU::TiXmlText::~TiXmlText()
0006f6b0 t NXU::Transpose(NXU::float3x3 const&)
000728c0 t NXU::TriNormal(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&)
0006f460 t NXU::VectorMax(NXU::float3 const&, NXU::float3 const&)
0006f410 t NXU::VectorMin(NXU::float3 const&, NXU::float3 const&)
0006eef0 t NXU::operator/(NXU::float3 const&, float)
0006f970 t NXU::operator/(NXU::float3x3 const&, float const&)
0006f0e0 t NXU::operator/=(NXU::float3&, float)
00073ea0 t NXU::operator==(NXU::int3 const&, NXU::int3 const&)
0006fee0 t NXU::operator==(NXU::float4 const&, NXU::float4 const&)
00070700 t NXU::operator==(NXU::float4x4 const&, NXU::float4x4 const&)
000bcfc0 t NXU::getElement(char const*, char const*, NXU::TiXmlNode*) [clone .constprop.218]
00264584 b NXU::gSkeletons
00266af0 b NXU::gStringMem
00263928 b NXU::gActorNames
00065f00 t NXU::createSphere(float, int, unsigned int&)
002662e0 b NXU::filterString
00055100 t NXU::getAttribute(NXU::TiXmlElement*, char const*)
00266afc b NXU::gInstanceMem
0025e48c d NXU::gShrinkRatio
00266aec b NXU::gStringCount
00055170 t NXU::colladaMatrix(char const*, NxMat34&)
0007a2a0 t NXU::GetShapeIndex(NxActor*, NxShape*)
00266af4 b NXU::gInstanceRoot
00266af8 b NXU::gInstanceCount
0025e488 d NXU::gMaxSkeletonVertices
00264581 b NXU::gAutoGenerateSkeletons
00065e70 t NXU::set(float*, int, float, float, float, NxMat34 const*)
00265694 b NXU::tris
000550b0 t NXU::getTF(char const*)
00266ae8 b NXU::gRoot
000bce20 t NXU::getHex(char)
00095510 t NXU::isSame(NxMat33 const&, NxMat33 const&) [clone .constprop.332]
00095430 t NXU::isSame(NxMat34 const&, NxMat34 const&) [clone .constprop.331]
000953d0 t NXU::isSame(NxBounds3 const&, NxBounds3 const&) [clone .constprop.329]
000bce60 t NXU::fstring(float, bool) [clone .constprop.217]
001e2c80 r NXU::CE_NAMES
00055250 t NXU::getFloat(char const*)
00264da0 b NXU::keyValue
002645a0 b NXU::keyBuffer
000c9740 t NXU::operator<<(NXU::TiXmlOutStream&, NXU::TiXmlNode const&)
0006edf0 t NXU::operator-(NXU::float3 const&, NXU::float3 const&)
00070070 t NXU::operator-(NXU::float4 const&, NXU::float4 const&)
0006fac0 t NXU::operator-(NXU::float3x3 const&, NXU::float3x3 const&)
0006f060 t NXU::operator-=(NXU::float3&, NXU::float3 const&)
0006fc00 t NXU::operator-=(NXU::float3x3&, NXU::float3x3 const&)
0006eeb0 t NXU::operator*(float, NXU::float3 const&)
0006ffd0 t NXU::operator*(float, NXU::float4 const&)
00071090 t NXU::operator*(NXU::Quaternion const&, float)
00071210 t NXU::operator*(NXU::Quaternion const&, NXU::float3 const&)
00070f90 t NXU::operator*(NXU::Quaternion const&, NXU::Quaternion const&)
0006ee70 t NXU::operator*(NXU::float3 const&, float)
00071390 t NXU::operator*(NXU::float3 const&, NXU::Quaternion const&)
0006f720 t NXU::operator*(NXU::float3 const&, NXU::float3x3 const&)
0006ff80 t NXU::operator*(NXU::float4 const&, float)
0006fdf0 t NXU::operator*(NXU::float4 const&, NXU::float4x4 const&)
0006f8e0 t NXU::operator*(NXU::float3x3 const&, float const&)
0006f7b0 t NXU::operator*(NXU::float3x3 const&, NXU::float3 const&)
0006f840 t NXU::operator*(NXU::float3x3 const&, NXU::float3x3 const&)
00070100 t NXU::operator*(NXU::float4x4 const&, NXU::float4x4 const&)
00071120 t NXU::operator*=(NXU::Quaternion&, float)
0006f0a0 t NXU::operator*=(NXU::float3&, float)
0006fc90 t NXU::operator*=(NXU::float3x3&, float const&)
0006ee30 t NXU::operator-(NXU::float3 const&)
000c5f50 t NXU::operator+(char const*, NXU::TiXmlString const&)
000713b0 t NXU::operator+(NXU::Quaternion const&, NXU::Quaternion const&)
000c5ec0 t NXU::operator+(NXU::TiXmlString const&, char const*)
000c5e30 t NXU::operator+(NXU::TiXmlString const&, NXU::TiXmlString const&)
0006edb0 t NXU::operator+(NXU::float3 const&, NXU::float3 const&)
00070020 t NXU::operator+(NXU::float4 const&, NXU::float4 const&)
0006fa10 t NXU::operator+(NXU::float3x3 const&, NXU::float3x3 const&)
0006f020 t NXU::operator+=(NXU::float3&, NXU::float3 const&)
0006fb70 t NXU::operator+=(NXU::float3x3&, NXU::float3x3 const&)
00267918 b vphysics_save_cphysicsobject_t_DataDescInit::g_DataMapHolder
00267a28 b vphysics_save_cphysicsspring_t_DataDescInit::g_DataMapHolder
0017e740 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
0017e740 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::IVP_Controller_Raycast_Car_Vector_of_Cores_1()
0017e7a0 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::~IVP_Controller_Raycast_Car_Vector_of_Cores_1()
0017e7a0 t IVP_Controller_Raycast_Car_Vector_of_Cores_1::~IVP_Controller_Raycast_Car_Vector_of_Cores_1()
00267110 b vphysics_save_constraintfixed_t_DataDescInit::g_DataMapHolder
0026710c b vphysics_save_constrainthinge_t_DataDescInit::g_DataMapHolder
00267100 b vphysics_save_constraintlength_t_DataDescInit::g_DataMapHolder
00267104 b vphysics_save_constraintpulley_t_DataDescInit::g_DataMapHolder
002678b8 b vphysics_save_motioncontroller_t_DataDescInit::g_DataMapHolder
002670f8 b vphysics_save_constraintragdoll_t_DataDescInit::g_DataMapHolder
00267108 b vphysics_save_constraintsliding_t_DataDescInit::g_DataMapHolder
00267990 b vphysics_save_cshadowcontroller_t_DataDescInit::g_DataMapHolder
0026711c b vphysics_save_cphysicsconstraint_t_DataDescInit::g_DataMapHolder
00267aa8 b vphysics_save_cvehiclecontroller_t_DataDescInit::g_DataMapHolder
000d1e10 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
000d1e10 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
000d2030 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::~IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
000d2030 t IVP_Controller_Raycast_Airboat_Vector_of_Cores_1::~IVP_Controller_Raycast_Airboat_Vector_of_Cores_1()
00267114 b vphysics_save_constraintaxislimit_t_DataDescInit::g_DataMapHolder
00267118 b vphysics_save_constraintbreakable_t_DataDescInit::g_DataMapHolder
00267994 b vphysics_save_shadowcontrolparams_t_DataDescInit::g_DataMapHolder
002670fc b vphysics_save_constraintballsocket_t_DataDescInit::g_DataMapHolder
00267120 b vphysics_save_cphysicsconstraintgroup_t_DataDescInit::g_DataMapHolder
00110190 t CWrap::~CWrap() [clone .constprop.2]
0010bc00 t ConVar::ClampValue(float&)
0010c810 t ConVar::SetDefault(char const*)
0010b910 t ConVar::InternalSetValue(char const*)
0010ba70 t ConVar::ChangeStringValue(char const*, float)
0010bc40 t ConVar::InternalSetIntValue(int)
0010c720 t ConVar::InstallChangeCallback(void (*)(IConVar*, char const*, float))
0010b5c0 t ConVar::InternalSetColorValue(Color)
0010b700 t ConVar::InternalSetFloatValue(float)
0010b5a0 t ConVar::Init()
0010b800 t ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0010c760 t ConVar::Revert()
0010b500 t ConVar::AddFlags(int)
0010b6a0 t ConVar::SetValue(Color)
0010b640 t ConVar::SetValue(float)
0010b670 t ConVar::SetValue(int)
0010b610 t ConVar::SetValue(char const*)
0010c400 t ConVar::ConVar(char const*, char const*, int)
0010c4a0 t ConVar::ConVar(char const*, char const*, int, char const*)
0010c540 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0010c680 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0010c5e0 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0010c400 t ConVar::ConVar(char const*, char const*, int)
0010c4a0 t ConVar::ConVar(char const*, char const*, int, char const*)
0010c540 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float)
0010c680 t ConVar::ConVar(char const*, char const*, int, char const*, bool, float, bool, float, void (*)(IConVar*, char const*, float))
0010c5e0 t ConVar::ConVar(char const*, char const*, int, char const*, void (*)(IConVar*, char const*, float))
0010bb80 t ConVar::~ConVar()
0010bb40 t ConVar::~ConVar()
0010bb40 t ConVar::~ConVar()
00058ca0 t NxQuat::fromAngleAxis(float, NxVec3 const&)
00109350 t CDefOps<void*>::LessFunc(void* const&, void* const&)
000f8420 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
000f8420 t CTSPool<CUtlVector<CPhysCollideVirtualMesh*, CUtlMemory<CPhysCollideVirtualMesh*, int> > >::~CTSPool()
00103f10 t CTSPool<CVisitHash>::~CTSPool()
00103f10 t CTSPool<CVisitHash>::~CTSPool()
00109490 t CUtlMap<void*, void*, unsigned short>::~CUtlMap()
00109490 t CUtlMap<void*, void*, unsigned short>::~CUtlMap()
00262c60 d hk_Math::hk_random_seed
00133140 t hk_Math::rand01()
00133130 t hk_Math::srand01(unsigned int)
000bcd20 t NxArray<NxVec3, NxAllocatorDefault>::~NxArray()
000bcd20 t NxArray<NxVec3, NxAllocatorDefault>::~NxArray()
000c4cd0 t NxArray<char, NxAllocatorDefault>::~NxArray()
000c4cd0 t NxArray<char, NxAllocatorDefault>::~NxArray()
000bcda0 t NxArray<unsigned char, NxAllocatorDefault>::~NxArray()
000bcda0 t NxArray<unsigned char, NxAllocatorDefault>::~NxArray()
0005c500 t NxArray<unsigned int, NxAllocatorDefault>::push_back(unsigned int const&)
0005c8b0 t NxArray<unsigned int, NxAllocatorDefault>::~NxArray()
0005c8b0 t NxArray<unsigned int, NxAllocatorDefault>::~NxArray()
000bcd60 t NxArray<NXU::NxTri, NxAllocatorDefault>::~NxArray()
000bcd60 t NxArray<NXU::NxTri, NxAllocatorDefault>::~NxArray()
0008cf00 t NxArray<NxShapeDesc*, NxAllocatorDefault>::~NxArray()
0008cf00 t NxArray<NxShapeDesc*, NxAllocatorDefault>::~NxArray()
0005d600 t NxArray<char const*, NxAllocatorDefault>::~NxArray()
0005d600 t NxArray<char const*, NxAllocatorDefault>::~NxArray()
0005d9d0 t NxArray<NXU::C_Triangles*, NxAllocatorDefault>::push_back(NXU::C_Triangles* const&)
0005cc50 t NxArray<NXU::C_Triangles*, NxAllocatorDefault>::~NxArray()
0005cc50 t NxArray<NXU::C_Triangles*, NxAllocatorDefault>::~NxArray()
000c4d10 t NxArray<NXU::SchemaBlock*, NxAllocatorDefault>::~NxArray()
000c4d10 t NxArray<NXU::SchemaBlock*, NxAllocatorDefault>::~NxArray()
000c4c90 t NxArray<NXU::SchemaClass*, NxAllocatorDefault>::~NxArray()
000c4c90 t NxArray<NXU::SchemaClass*, NxAllocatorDefault>::~NxArray()
0005d1c0 t NxArray<NXU::C_DisableCollision*, NxAllocatorDefault>::~NxArray()
0005d1c0 t NxArray<NXU::C_DisableCollision*, NxAllocatorDefault>::~NxArray()
0005d140 t NxArray<NXU::C_InstanceRigidBody*, NxAllocatorDefault>::~NxArray()
0005d140 t NxArray<NXU::C_InstanceRigidBody*, NxAllocatorDefault>::~NxArray()
000bcde0 t NxArray<NXU::NxSceneInstanceDesc*, NxAllocatorDefault>::~NxArray()
000bcde0 t NxArray<NXU::NxSceneInstanceDesc*, NxAllocatorDefault>::~NxArray()
0005da80 t NxArray<NXU::C_InstancePhysicsModel*, NxAllocatorDefault>::push_back(NXU::C_InstancePhysicsModel* const&)
0005cfc0 t NxArray<NXU::C_InstancePhysicsModel*, NxAllocatorDefault>::~NxArray()
0005cfc0 t NxArray<NXU::C_InstancePhysicsModel*, NxAllocatorDefault>::~NxArray()
0005d180 t NxArray<NXU::C_InstanceRigidConstraint*, NxAllocatorDefault>::~NxArray()
0005d180 t NxArray<NXU::C_InstanceRigidConstraint*, NxAllocatorDefault>::~NxArray()
0005d870 t NxArray<NXU::C_Mesh*, NxAllocatorDefault>::push_back(NXU::C_Mesh* const&)
0005d920 t NxArray<NXU::C_Input*, NxAllocatorDefault>::push_back(NXU::C_Input* const&)
0005c730 t NxArray<NXU::C_Input*, NxAllocatorDefault>::~NxArray()
0005c730 t NxArray<NXU::C_Input*, NxAllocatorDefault>::~NxArray()
0005c5b0 t NxArray<NXU::C_Param*, NxAllocatorDefault>::~NxArray()
0005c5b0 t NxArray<NXU::C_Param*, NxAllocatorDefault>::~NxArray()
0005cc10 t NxArray<NXU::C_Source*, NxAllocatorDefault>::~NxArray()
0005cc10 t NxArray<NXU::C_Source*, NxAllocatorDefault>::~NxArray()
00058d80 t NxMat33::fromQuat(NxQuat const&)
00058eb0 t NxMat33::multiply(NxMat33 const&, NxMat33 const&)
0010c160 t CCommand::DefaultBreakSet()
0010c140 t CCommand::Reset()
0010d1c0 t CCommand::Tokenize(char const*, characterset_t*)
0010c000 t CCommand::CCommand(int, char const**)
0010bfb0 t CCommand::CCommand()
0010c000 t CCommand::CCommand(int, char const**)
0010bfb0 t CCommand::CCommand()
001beb00 t CFmtStrN<256>::InitQuietTruncation()
001beb10 t CFmtStrN<256>::sprintf(char const*, ...)
000e9260 t CSurface::get_damping()
000e9250 t CSurface::get_adhesion()
000e9230 t CSurface::get_elasticity()
000e9220 t CSurface::get_friction_factor()
000e9240 t CSurface::get_second_friction_factor()
000e75f0 t CSurface::get_name()
000e9300 t CSurface::~CSurface()
000e92e0 t CSurface::~CSurface()
000e92e0 t CSurface::~CSurface()
00120800 t hk_Array<hk_Constraint*>::~hk_Array()
00120800 t hk_Array<hk_Constraint*>::~hk_Array()
001c9230 t IVP_Ball::set_radius(float)
001c8f20 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
001c8f20 t IVP_Ball::IVP_Ball(IVP_Cluster*, IVP_Template_Ball const*, IVP_Template_Real_Object const*, IVP_U_Quat const*, IVP_U_Point const*)
001c8e90 t IVP_Ball::~IVP_Ball()
001c8e70 t IVP_Ball::~IVP_Ball()
001c8e70 t IVP_Ball::~IVP_Ball()
00183280 t IVP_Core::reset_time(IVP_Time)
001822e0 t IVP_Core::set_radius(float, float)
00182560 t IVP_Core::damp_object(float, IVP_U_Float_Point const*, float)
001827f0 t IVP_Core::push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
00185350 t IVP_Core::clip_velocity(IVP_U_Float_Point*, IVP_U_Float_Point*)
00182d90 t IVP_Core::async_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00185260 t IVP_Core::get_environment()
00185280 t IVP_Core::get_position_PSI()
00182fa0 t IVP_Core::get_rot_speed_cs(IVP_U_Float_Point const*)
00182720 t IVP_Core::global_damp_core(float)
001830d0 t IVP_Core::rot_push_core_cs(IVP_U_Float_Point const*)
00184500 t IVP_Core::add_friction_info(IVP_Friction_Info_For_Core*)
001844b0 t IVP_Core::get_friction_info(IVP_Friction_System*)
00182960 t IVP_Core::async_push_core_ws(IVP_U_Point const*, IVP_U_Float_Point const*)
00182260 t IVP_Core::get_energy_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00182f50 t IVP_Core::get_rot_inertia_cs(IVP_U_Float_Point const*)
0019fe40 t IVP_Core::add_core_controller(IVP_Controller*)
00183b60 t IVP_Core::calc_movement_state(IVP_Time)
001851f0 t IVP_Core::fast_piling_allowed()
0019fc30 t IVP_Core::rem_core_controller(IVP_Controller*)
00184250 t IVP_Core::apply_velocity_limit()
00185200 t IVP_Core::calc_next_PSI_matrix(IVP_U_Vector<IVP_Core>*, IVP_Event_Sim*)
001832f0 t IVP_Core::core_add_link_to_obj(IVP_Real_Object*)
00184440 t IVP_Core::core_plausible_check()
00184620 t IVP_Core::delete_friction_info(IVP_Friction_Info_For_Core*)
00181da0 t IVP_Core::get_surface_speed_ws(IVP_U_Point const*, IVP_U_Float_Point*)
0018ca10 t IVP_Core::grow_friction_system()
00183980 t IVP_Core::set_rotation_inertia(IVP_U_Float_Point const*)
001845e0 t IVP_Core::unlink_friction_info(IVP_Friction_Info_For_Core*)
0018b350 t IVP_Core::union_find_get_father()
00182470 t IVP_Core::abort_all_async_pushes()
0019e500 t IVP_Core::freeze_simulation_core()
00185270 t IVP_Core::get_m_world_f_core_PSI()
0019e280 t IVP_Core::revive_simulation_core()
00183fc0 t IVP_Core::set_matrizes_and_speed(IVP_Core_Merged*, IVP_U_Matrix*)
00183400 t IVP_Core::stop_physical_movement()
001835f0 t IVP_Core::synchronize_with_rot_z()
001837f0 t IVP_Core::undo_synchronize_rot_z()
00183130 t IVP_Core::commit_all_async_pushes()
0019e520 t IVP_Core::debug_out_movement_vars()
001851d0 t IVP_Core::set_fast_piling_allowed(IVP_BOOL)
0019e5b0 t IVP_Core::debug_vec_movement_state()
0019e480 t IVP_Core::fire_event_object_frozen()
00183540 t IVP_Core::init_core_for_simulation()
00183510 t IVP_Core::reset_freeze_check_values()
00183060 t IVP_Core::rot_push_core_multiple_cs(IVP_U_Float_Point const*, float)
00182b70 t IVP_Core::rot_push_core_multiple_ws(IVP_U_Float_Point const*, float)
00184490 t IVP_Core::rot_speed_plausible_check(IVP_U_Float_Point const*)
001839b0 t IVP_Core::transform_PSI_matrizes_core(IVP_U_Matrix const*)
001824a0 t IVP_Core::center_push_core_multiple_ws(IVP_U_Float_Point const*, float)
00184710 t IVP_Core::revive_adjacent_to_unmoveable()
00182f00 t IVP_Core::test_rot_push_core_multiple_cs(IVP_U_Float_Point const*, float, IVP_U_Float_Point*)
00182ff0 t IVP_Core::async_rot_push_core_multiple_cs(IVP_U_Float_Point const*, float)
00182ad0 t IVP_Core::async_rot_push_core_multiple_ws(IVP_U_Float_Point const*, float)
001831f0 t IVP_Core::calc_next_PSI_matrix_zero_speed(IVP_Event_Sim*)
00184680 t IVP_Core::ensure_core_to_be_in_simulation()
001844f0 t IVP_Core::moveable_core_has_friction_info()
00184880 t IVP_Core::values_changed_recalc_redundants()
00183fa0 t IVP_Core::create_collision_merged_core_with(IVP_Core*)
00185240 t IVP_Core::ensure_core_in_simulation_delayed()
00182500 t IVP_Core::async_center_push_core_multiple_ws(IVP_U_Float_Point const*, float)
001846c0 t IVP_Core::ensure_all_core_objs_in_simulation()
001845a0 t IVP_Core::unmovable_core_debug_friction_hash()
00181e70 t IVP_Core::get_diff_surface_speed_of_two_cores(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
001841a0 t IVP_Core::update_exact_mindist_events_of_core()
00184af0 t IVP_Core::ensure_all_core_objs_in_simulation_now()
00184c70 t IVP_Core::unlink_obj_from_core_and_maybe_destroy(IVP_Real_Object*)
00183330 t IVP_Core::stop_movement_without_collision_recheck()
00181f40 t IVP_Core::get_diff_surface_speed_of_two_cores_on_test(IVP_Core const*, IVP_Core const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*)
00183a40 t IVP_Core::init(IVP_Real_Object*, bool)
00184200 t IVP_Core::set_mass(float)
00183880 t IVP_Core::calc_calc()
00182cd0 t IVP_Core::push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*)
00184ec0 t IVP_Core::IVP_Core(IVP_Real_Object*)
00184d30 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
00184ec0 t IVP_Core::IVP_Core(IVP_Real_Object*)
00184d30 t IVP_Core::IVP_Core(IVP_Real_Object*, IVP_U_Quat const*, IVP_U_Point const*, IVP_BOOL, IVP_BOOL)
00184b40 t IVP_Core::~IVP_Core()
00184b40 t IVP_Core::~IVP_Core()
001a93a0 t IVP_Hash::add(char const*, void*)
001a9430 t IVP_Hash::remove(char const*)
001a9260 t IVP_Hash::IVP_Hash(int, int, void*)
001a9260 t IVP_Hash::IVP_Hash(int, int, void*)
001a92a0 t IVP_Hash::~IVP_Hash()
001a92a0 t IVP_Hash::~IVP_Hash()
000c5940 t NxStream::~NxStream()
000c57b0 t NxStream::~NxStream()
000c57b0 t NxStream::~NxStream()
001b27f0 t P_String::string_cmp(char const*, char const*, IVP_BOOL)
001b2230 t P_String::find_string(char const*, char const*, int)
001b2200 t P_String::uppercase(char*)
001530e0 t P_Sur_2D::calc_line_representation()
001534f0 t P_Sur_2D::calc_triangle_representation()
00152f50 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
00152f50 t P_Sur_2D::P_Sur_2D(IVP_Object_Polygon_Tetra*, IVP_Template_Surface*)
00152ff0 t P_Sur_2D::~P_Sur_2D()
00152ff0 t P_Sur_2D::~P_Sur_2D()
0010ad90 t CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
0010ad10 t CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
0010c830 t ConVarRef::Init(char const*, bool)
0010c930 t ConVarRef::ConVarRef(IConVar*)
0010c900 t ConVarRef::ConVarRef(char const*)
0010c8f0 t ConVarRef::ConVarRef(char const*, bool)
0010c930 t ConVarRef::ConVarRef(IConVar*)
0010c900 t ConVarRef::ConVarRef(char const*)
0010c8f0 t ConVarRef::ConVarRef(char const*, bool)
000fb280 t CTraceIVP::BuildLeafmapCache(leafmap_t const*)
000faf80 t CTraceIVP::BuildLeafmapCacheRLE(leafmap_t const*)
000fada0 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
000fada0 t CTraceIVP::CTraceIVP(CPhysCollide const*, Vector const&, QAngle const&)
000fb4d0 t CTraceRay::Init(Vector const&, Vector const&)
000fb6a0 t CTraceRay::Reset(float)
000fb610 t CTraceRay::CTraceRay(Ray_t const&)
000fb640 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
000fb5c0 t CTraceRay::CTraceRay(Vector const&, Vector const&)
000fb610 t CTraceRay::CTraceRay(Ray_t const&)
000fb640 t CTraceRay::CTraceRay(Ray_t const&, Vector const&)
000fb5c0 t CTraceRay::CTraceRay(Vector const&, Vector const&)
001d7cb0 t Frustum_t::SetPlane(int, Vector const&, float)
001d7e20 t Frustum_t::GetPlanes(VPlane*)
001d7d30 t Frustum_t::SetPlanes(VPlane const*)
001d7c50 t Frustum_t::Frustum_t()
001d7c50 t Frustum_t::Frustum_t()
00131f50 t hk_Memory::deallocate(void*, int, hk_MEMORY_CLASS)
00131f80 t hk_Memory::aligned_free(void*)
00131f90 t hk_Memory::get_instance()
00131f60 t hk_Memory::aligned_malloc(unsigned int, unsigned int)
00131f40 t hk_Memory::allocate(int, hk_MEMORY_CLASS)
00131f30 t hk_Memory::hk_Memory()
00131f30 t hk_Memory::hk_Memory()
00131f20 t hk_Memory::~hk_Memory()
00131f20 t hk_Memory::~hk_Memory()
001815f0 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
001815d0 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
001815d0 t IVP_U_Set<IVP_Real_Object>::~IVP_U_Set()
00181640 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
00181620 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
00181620 t IVP_U_Set<IVP_Mindist_Base>::~IVP_U_Set()
00181690 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
00181670 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
00181670 t IVP_U_Set<IVP_Core>::~IVP_U_Set()
001b2de0 t IVP_VHash::deactivate()
001b3080 t IVP_VHash::remove_elem(void const*, unsigned int)
001b2e50 t IVP_VHash::untouch_all()
001b32c0 t IVP_VHash::touch_element(void const*, unsigned int)
001b3030 t IVP_VHash::garbage_collection(int)
001b3220 t IVP_VHash::check()
001b2f80 t IVP_VHash::rehash(int)
001b2da0 t IVP_VHash::activate(int)
001b2e90 t IVP_VHash::add_elem(void const*, int)
001b2d60 t IVP_VHash::IVP_VHash(int)
001b2e20 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
001b2d60 t IVP_VHash::IVP_VHash(int)
001b2e20 t IVP_VHash::IVP_VHash(IVP_VHash_Elem*, int)
001b2ce0 t IVP_VHash::~IVP_VHash()
001b2ca0 t IVP_VHash::~IVP_VHash()
001b2ca0 t IVP_VHash::~IVP_VHash()
000fdc30 t simplex_t::SolveGJKSet(simplexvert_t const&, Vector*)
000feae0 t simplex_t::ClipRayToTriangle(Vector const&, float)
000fc030 t simplex_t::SolveVoronoiRegion2(simplexvert_t const&, Vector*)
000fc220 t simplex_t::SolveVoronoiRegion3(simplexvert_t const&, Vector*)
000fc770 t simplex_t::SolveVoronoiRegion4(simplexvert_t const&, Vector*)
000fe680 t simplex_t::ClipRayToTetrahedron(Vector const&)
000fdf40 t simplex_t::ClipRayToTetrahedronBase(Vector const&)
         U operator new[](unsigned int)@@GLIBCXX_3.4
0010b490 t ConCommand::IsCommand() const
000f9870 t CTraceAABB::SupportMap(Vector const&, Vector*) const
000f9790 t CTraceAABB::GetVertByIndex(int) const
00103ce0 t CTraceAABB::Radius() const
00103dc0 t CTraceCone::SupportMap(Vector const&, Vector*) const
00103ca0 t CTraceCone::GetVertByIndex(int) const
00103cc0 t CTraceCone::Radius() const
000e36c0 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
000e3a90 t CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Find(CPhysicsListenerCollision::corepair_t const&) const
0011d800 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::NextInorder(unsigned short) const
0011d6d0 t CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Find(char const* const&) const
00118540 t CUtlString::Get() const
00118520 t CUtlString::Length() const
00118560 t CUtlString::operator char const*() const
00118590 t CUtlString::operator==(char const*) const
00118580 t CUtlString::operator==(CUtlString const&) const
00119a50 t CUtlSymbol::String() const
00119b30 t CUtlSymbol::operator==(char const*) const
001332f0 t hk_Matrix3::is_identity_rotation() const
0019c710 t IVP_Object::get_environment() const
0019c700 t IVP_Object::get_name() const
0019c6f0 t IVP_Object::get_type() const
001b11c0 t IVP_U_Quat::set_matrix(IVP_U_Matrix3*) const
001b10a0 t IVP_U_Quat::set_matrix(float (*) [4]) const
001af900 t IVP_U_Quat::inline_estimate_q_diff_to(IVP_U_Float_Quat const*) const
001ae910 t IVP_U_Quat::acos_quat(IVP_U_Quat const*) const
0011bf80 t CStringPool::Count() const
001b9360 t IVP_Mindist::get_synapse(int) const
001b9370 t IVP_Mindist::get_sorted_synapse(int) const
001b91d0 t IVP_Synapse::get_status() const
001b91f0 t IVP_Synapse::get_synapse_mindist() const
001b91e0 t IVP_Synapse::get_edge() const
001b5e40 t IVP_Synapse::get_ledge() const
001aa640 t IVP_U_Hesse::proj_on_plane(IVP_U_Point const*, IVP_U_Point*) const
001a8dc0 t IVP_U_Hesse::calc_intersect_with(IVP_U_Straight const*, IVP_U_Point*) const
001ae510 t IVP_U_Hesse::get_dist(IVP_U_Float_Point const*) const
001a8f30 t IVP_U_Plain::calc_intersect_with(IVP_U_Hesse const*, IVP_U_Straight*) const
001a9ea0 t IVP_U_Point::is_parallel(IVP_U_Point const*, float) const
00082c30 t NxJointDesc::isValid() const
0006e870 t NxShapeDesc::isValid() const
0010d540 t CEmptyConVar::GetName() const
0010d560 t CEmptyConVar::IsFlagSet(int) const
000d5f40 t CPhysCollide::GetOBBMaxs() const
000d5f10 t CPhysCollide::GetOBBMins() const
000d5ef0 t CPhysCollide::GetCollideMap() const
000d5f00 t CPhysCollide::GetExtraRadius() const
000d5ec0 t CPhysCollide::GetSphereRadius() const
000d5e90 t CPhysCollide::GetCompactSurface() const
000d5e70 t CPhysCollide::GetPhysics2VCollide() const
000d5ea0 t CPhysCollide::GetOrthographicAreas() const
000d5e80 t CPhysCollide::GetActor() const
001d7a80 t fourplanes_t::GetPlane(int, Vector*, float*) const
001344b0 t hk_Transform::get_4x4_column_major(float*) const
001ae010 t IVP_U_Matrix::get_position() const
001af4c0 t IVP_U_Matrix::inline_mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
001ae750 t IVP_U_Matrix::inline_vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001af6b0 t IVP_U_Matrix::inline_mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
001ae590 t IVP_U_Matrix::inline_vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001af890 t IVP_U_Matrix::get_4x4_column_major(float*) const
001ac7a0 t IVP_U_Matrix::mmult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
001ad420 t IVP_U_Matrix::vmult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001ac990 t IVP_U_Matrix::mimult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
001ad380 t IVP_U_Matrix::vimult4(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001acf30 t IVP_U_Matrix::mi2mult4(IVP_U_Matrix const*, IVP_U_Matrix*) const
000fa710 t CTraceObject2::SupportMap(Vector const&, Vector*) const
000f97d0 t CTraceObject2::GetVertByIndex(int) const
000df4c0 t CUtlMultiList<void*, unsigned short>::IsValidList(unsigned short) const
0016fb80 t IVP_CFEP_Hash::compare(void*, void*) const
001b58c0 t IVP_Collision::get_fvector_index(int) const
0017f180 t IVP_MI_Vector::print() const
0017e950 t IVP_MI_Vector::length() const
001af390 t IVP_U_Matrix3::inline_mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
001ae630 t IVP_U_Matrix3::inline_vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001af230 t IVP_U_Matrix3::inline_mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
001ae6c0 t IVP_U_Matrix3::inline_vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001ab100 t IVP_U_Matrix3::get_determinante() const
001acb70 t IVP_U_Matrix3::mmult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
001ad4c0 t IVP_U_Matrix3::vmult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001af0d0 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Point*) const
001af100 t IVP_U_Matrix3::get_col(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
001af070 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Point*) const
001af0a0 t IVP_U_Matrix3::get_row(IVP_COORDINATE_INDEX, IVP_U_Float_Point*) const
001acca0 t IVP_U_Matrix3::mimult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
001ad550 t IVP_U_Matrix3::vimult3(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001adf60 t IVP_U_Matrix3::get_elem(int, int) const
001ace00 t IVP_U_Matrix3::mi2mult3(IVP_U_Matrix3 const*, IVP_U_Matrix3*) const
00084170 t NxD6JointDesc::isValid() const
0010b450 t ConCommandBase::GetHelpText() const
0010b460 t ConCommandBase::IsRegistered() const
0010b350 t ConCommandBase::GetDLLIdentifier() const
0010b3f0 t ConCommandBase::GetName() const
0010bf20 t ConCommandBase::GetNext() const
0010b440 t ConCommandBase::GetFlags() const
0010b340 t ConCommandBase::IsCommand() const
0010b400 t ConCommandBase::IsFlagSet(int) const
000ead30 t CPhysicsObject::GetCollide() const
000eabb0 t CPhysicsObject::GetDamping(float*, float*) const
000eab10 t CPhysicsObject::GetInertia() const
000eaaf0 t CPhysicsObject::GetInvMass() const
000ea9f0 t CPhysicsObject::IsMoveable() const
000eedd0 t CPhysicsObject::GetContents() const
000eaac0 t CPhysicsObject::GetGameData() const
000ebad0 t CPhysicsObject::GetPosition(Vector*, QAngle*) const
000ec560 t CPhysicsObject::GetVelocity(Vector*, Vector*) const
000ea860 t CPhysicsObject::GetGameFlags() const
000ea880 t CPhysicsObject::GetGameIndex() const
000ebe60 t CPhysicsObject::LocalToWorld(Vector*, Vector const&) const
000ebe00 t CPhysicsObject::WorldToLocal(Vector*, Vector const&) const
000eab60 t CPhysicsObject::GetInvInertia() const
000ecf20 t CPhysicsObject::IsControlling(IVP_Controller const*) const
000ec970 t CPhysicsObject::IsDragEnabled() const
000eb670 t CPhysicsObject::GetContactPoint(Vector*, IPhysicsObject**) const
000ec660 t CPhysicsObject::GetSphereRadius() const
000ea9d0 t CPhysicsObject::IsMotionEnabled() const
000eafc0 t CPhysicsObject::OutputDebugInfo() const
000ea840 t CPhysicsObject::GetCallbackFlags() const
000eedc0 t CPhysicsObject::GetMaterialIndex() const
000ec9f0 t CPhysicsObject::IsGravityEnabled() const
000ea900 t CPhysicsObject::GetCollisionHints() const
000ebb60 t CPhysicsObject::GetPositionMatrix(matrix3x4_t*) const
000eb5d0 t CPhysicsObject::GetShadowPosition(Vector*, QAngle*) const
000edc60 t CPhysicsObject::GetSurfaceManager() const
000edc80 t CPhysicsObject::GetDragInDirection(IVP_U_Float_Point const&) const
000eb950 t CPhysicsObject::GetVelocityAtPoint(Vector const&, Vector*) const
000eaee0 t CPhysicsObject::IsCollisionEnabled() const
000ed300 t CPhysicsObject::IsControlledByGame() const
000ebda0 t CPhysicsObject::LocalToWorldVector(Vector*, Vector const&) const
000ebd40 t CPhysicsObject::WorldToLocalVector(Vector*, Vector const&) const
000edd00 t CPhysicsObject::CalculateLinearDrag(Vector const&) const
000ec3b0 t CPhysicsObject::GetImplicitVelocity(Vector*, Vector*) const
000ead20 t CPhysicsObject::GetShadowController() const
000eae00 t CPhysicsObject::CalculateAngularDrag(Vector const&) const
000ebba0 t CPhysicsObject::CalculateForceOffset(Vector const&, Vector const&, Vector*, Vector*) const
000ed340 t CPhysicsObject::IsMassCenterAtDefault() const
000ecf00 t CPhysicsObject::GetVPhysicsEnvironment() const
000eaf00 t CPhysicsObject::IsAttachedToConstraint(bool) const
000ecb50 t CPhysicsObject::CalculateVelocityOffset(Vector const&, Vector const&, Vector*, Vector*) const
000ec4e0 t CPhysicsObject::GetMassCenterLocalSpace() const
000edd40 t CPhysicsObject::GetAngularDragInDirection(IVP_U_Float_Point const&) const
000eaad0 t CPhysicsObject::GetMass() const
000ead40 t CPhysicsObject::GetName() const
000eaec0 t CPhysicsObject::IsFluid() const
000ec0e0 t CPhysicsObject::IsAsleep() const
000eeda0 t CPhysicsObject::IsHinged() const
000ea890 t CPhysicsObject::IsStatic() const
000ead50 t CPhysicsObject::GetEnergy() const
000ed650 t CPhysicsObject::GetVolume() const
000eaea0 t CPhysicsObject::IsTrigger() const
000fa5b0 t CTraceHullList::SupportMap(Vector const&, Vector*) const
000f9820 t CTraceHullList::GetVertByIndex(int) const
001520f0 t IVP_point_hash::element_at(int) const
001520e0 t IVP_point_hash::len() const
00152140 t IVP_point_hash::print() const
00151e10 t IVP_point_hash::compare(void*, void*) const
001b0270 t IVP_U_Min_Hash::is_elem(void*) const
001a8b30 t IVP_U_Straight::get_quad_dist_to_point(IVP_U_Point*) const
001a8a90 t IVP_U_Straight::calc_orthogonal_vec_from_point(IVP_U_Point const*, IVP_U_Point*) const
0006e9b0 t NxBoxShapeDesc::isValid() const
00082750 t NxEffectorDesc::isValid() const
0008cdf0 t NxParticleData::isValid() const
00118430 t CUtlBinaryBlock::Get(void*, int) const
00118470 t CUtlBinaryBlock::operator==(CUtlBinaryBlock const&) const
001192a0 t CUtlSymbolTable::FindPoolWithSpace(int) const
00118f20 t CUtlSymbolTable::Find(char const*) const
00118d90 t CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
001192f0 t CUtlSymbolTable::String(CUtlSymbol) const
001880c0 t IVP_Environment::get_time_manager() const
00188130 t IVP_Environment::get_debug_manager() const
00188180 t IVP_Environment::get_range_manager() const
00188210 t IVP_Environment::get_static_object() const
00188200 t IVP_Environment::get_anomaly_limits() const
00188260 t IVP_Environment::get_gravity_length() const
00188140 t IVP_Environment::get_memory_manager() const
001881f0 t IVP_Environment::get_anomaly_manager() const
00188120 t IVP_Environment::get_cluster_manager() const
001880e0 t IVP_Environment::get_mindist_manager() const
00188110 t IVP_Environment::get_ov_tree_manager() const
001881a0 t IVP_Environment::get_collision_filter() const
00188190 t IVP_Environment::get_material_manager() const
001881e0 t IVP_Environment::get_universe_manager() const
001880f0 t IVP_Environment::get_sim_units_manager() const
001880d0 t IVP_Environment::get_controller_manager() const
001881d0 t IVP_Environment::get_active_value_manager() const
00188100 t IVP_Environment::get_cache_object_manager() const
0019c840 t IVP_Real_Object::to_nonconst() const
0019b750 t IVP_Real_Object::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
0019c060 t IVP_Real_Object::get_geom_radius() const
0019c830 t IVP_Real_Object::get_extra_radius() const
0019c860 t IVP_Real_Object::get_original_core() const
0019b980 t IVP_Real_Object::calc_at_quaternion(IVP_Time, IVP_U_Quat*, IVP_U_Point*) const
0019c800 t IVP_Real_Object::get_surface_manager() const
0019c080 t IVP_Real_Object::get_geom_center_speed() const
0019b950 t IVP_Real_Object::get_m_world_f_object_AT(IVP_U_Matrix*) const
0019c0a0 t IVP_Real_Object::get_geom_center_speed_vec(IVP_U_Point*) const
0019bb90 t IVP_Real_Object::get_quat_world_f_object_AT(IVP_U_Quat*, IVP_U_Point*) const
0019c030 t IVP_Real_Object::get_geom_center_world_space(IVP_U_Point*) const
0019c850 t IVP_Real_Object::get_core() const
001a4a30 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Point const*, IVP_U_Point*) const
001a4ac0 t IVP_Cache_Object::transform_vector_to_world_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001a4910 t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
001a49a0 t IVP_Cache_Object::transform_vector_to_object_coords(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001a4870 t IVP_Cache_Object::transform_position_to_world_coords(IVP_U_Float_Point const*, IVP_U_Point*) const
001a47d0 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Float_Point*) const
001a4730 t IVP_Cache_Object::transform_position_to_object_coords(IVP_U_Point const*, IVP_U_Point*) const
00170c10 t IVP_Compact_Edge::get_opposite() const
00170b20 t IVP_Compact_Edge::get_triangle() const
00170b90 t IVP_Compact_Edge::get_edge_index() const
001707d0 t IVP_Compact_Edge::get_is_virtual() const
00170b50 t IVP_Compact_Edge::get_start_point(IVP_Compact_Ledge const*) const
00170b30 t IVP_Compact_Edge::get_compact_ledge() const
001707b0 t IVP_Compact_Edge::get_opposite_index() const
001707a0 t IVP_Compact_Edge::get_start_point_index() const
00170b70 t IVP_Compact_Edge::get_next() const
00170bd0 t IVP_Compact_Edge::get_prev() const
001b9260 t IVP_Mindist_Base::get_length() const
001b9250 t IVP_Mindist_Base::get_mindist_synapse(int) const
001b5520 t IVP_ov_tree_hash::compare(void*, void*) const
001b5e30 t IVP_Synapse_Real::check_consistency_of_ledge(IVP_Compact_Edge const*) const
001b9300 t IVP_Synapse_Real::get_core() const
00083950 t NxFixedJointDesc::isValid() const
00082de0 t NxPlaneShapeDesc::isValid() const
00082e80 t NxWheelShapeDesc::isValid() const
000d2610 t CPhysicsCollision::GetExtraRadius(CPhysCollide const*) const
001709c0 t IVP_Compact_Ledge::is_terminal() const
00170a00 t IVP_Compact_Ledge::get_n_points() const
00170a60 t IVP_Compact_Ledge::get_client_data() const
001709f0 t IVP_Compact_Ledge::get_n_triangles() const
00170980 t IVP_Compact_Ledge::get_point_array() const
00170a90 t IVP_Compact_Ledge::get_cache_handle() const
001709a0 t IVP_Compact_Ledge::get_first_triangle() const
001709e0 t IVP_Compact_Ledge::get_ledgetree_node() const
00170a20 t IVP_Compact_Ledge::get_size() const
0018cf80 t IVP_Contact_Point::is_same_as(IVP_Mindist const*) const
00152280 t IVP_I_Point_VHash::element_at(int) const
00152270 t IVP_I_Point_VHash::len() const
001522d0 t IVP_I_Point_VHash::print() const
00151de0 t IVP_I_Point_VHash::compare(void*, void*) const
001aaa80 t IVP_U_Float_Hesse::proj_on_plane(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
001ae550 t IVP_U_Float_Hesse::get_dist(IVP_U_Float_Point const*) const
001ae2e0 t IVP_U_Float_Point::dot_product(IVP_U_Float_Point const*) const
001ae480 t IVP_U_Float_Point::quad_length() const
001a9910 t IVP_U_Float_Point::real_length() const
001a9f80 t IVP_U_Float_Point::fast_real_length() const
001ae4c0 t IVP_U_Float_Point::quad_distance_to(IVP_U_Float_Point const*) const
001aa040 t IVP_U_Float_Point::print(char const*) const
001a9590 t IVP_U_String_Hash::find(char const*) const
0006e8c0 t NxConvexShapeDesc::isValid() const
00084670 t NxPulleyJointDesc::isValid() const
0006e910 t NxSphereShapeDesc::isValid() const
000d7b40 t CPhysicsConstraint::WriteFixed(constraint_fixedparams_t&) const
000d7e60 t CPhysicsConstraint::WriteHinge(constraint_hingeparams_t&) const
000dbb20 t CPhysicsConstraint::GetGameData() const
000d85c0 t CPhysicsConstraint::WriteLength(constraint_lengthparams_t&) const
000d8350 t CPhysicsConstraint::WritePulley(constraint_pulleyparams_t&) const
000d7c10 t CPhysicsConstraint::WriteRagdoll(constraint_ragdollparams_t&) const
000d80d0 t CPhysicsConstraint::WriteSliding(constraint_slidingparams_t&) const
000d8770 t CPhysicsConstraint::WriteBallsocket(constraint_ballsocketparams_t&) const
000d88f0 t CPhysicsConstraint::WriteToTemplate(vphysics_save_cphysicsconstraint_t&, vphysics_save_constraint_t&) const
000d65a0 t CPhysicsConstraint::GetAttachedObject() const
000d7a50 t CPhysicsConstraint::GetConstraintGroup() const
000d6590 t CPhysicsConstraint::GetReferenceObject() const
000d8a20 t CPhysicsConstraint::GetConstraintParams(constraint_breakableparams_t*) const
000d6d50 t CPhysicsConstraint::GetConstraintTransform(matrix3x4_t*, matrix3x4_t*) const
000d7a70 t CPhysicsConstraint::ReadBreakableConstraint(constraint_breakableparams_t&) const
001156e0 t CUtlCharConversion::GetDelimiter() const
001156d0 t CUtlCharConversion::GetEscapeChar() const
001156f0 t CUtlCharConversion::GetDelimiterLength() const
00115720 t CUtlCharConversion::GetConversionLength(char) const
00115700 t CUtlCharConversion::GetConversionString(char) const
00115740 t CUtlCharConversion::MaxConversionLength() const
001a3970 t IVP_Anomaly_Limits::get_max_velocity() const
001a3980 t IVP_Anomaly_Limits::get_max_angular_velocity_per_psi() const
00151d80 t IVP_I_FPoint_VHash::element_at(int) const
00151d70 t IVP_I_FPoint_VHash::len() const
00151dd0 t IVP_I_FPoint_VHash::print() const
00151b30 t IVP_I_FPoint_VHash::compare(void*, void*) const
0006e960 t NxCapsuleShapeDesc::isValid() const
00082c00 t NxTireFunctionDesc::isValid() const
000e7a70 t CIVPMaterialManager::RemapIVPMaterialIndex(int) const
000dc610 t CPhysicsEnvironment::GetGravity(Vector*) const
000dc990 t CPhysicsEnvironment::GetAirDensity() const
000dc6d0 t CPhysicsEnvironment::GetObjectList(int*) const
000dc7e0 t CPhysicsEnvironment::IsInSimulation() const
000dc930 t CPhysicsEnvironment::GetActiveObjects(IPhysicsObject**) const
000dc770 t CPhysicsEnvironment::GetNextFrameTime() const
000dc7a0 t CPhysicsEnvironment::GetDeltaFrameTime(int) const
000dc740 t CPhysicsEnvironment::GetSimulationTime() const
000dec10 t CPhysicsEnvironment::ShouldQuickDelete() const
000dc670 t CPhysicsEnvironment::GetAlternateGravity(Vector*) const
000dc920 t CPhysicsEnvironment::GetActiveObjectCount() const
000dd1d0 t CPhysicsEnvironment::IsCollisionModelUsed(CPhysCollide*) const
000dc720 t CPhysicsEnvironment::GetSimulationTimestep() const
000dc6c0 t CPhysicsEnvironment::GetObjectSerializeSize(IPhysicsObject*) const
000dc9d0 t CPhysicsEnvironment::GetPerformanceSettings(physics_performanceparams_t*) const
001b40e0 t IVP_OV_Tree_Manager::box_contains_box(IVP_OV_Node_Data const*, IVP_OV_Node const*, int) const
001b4670 t IVP_OV_Tree_Manager::find_smallest_box(IVP_OV_Node const*, IVP_OV_Node const*) const
001b45c0 t IVP_OV_Tree_Manager::box_overlaps_with_box(IVP_OV_Node const*, IVP_OV_Node const*, int) const
001b40c0 t IVP_OV_Tree_Manager::log_base2(float) const
001770e0 t IVP_Template_Anchor::get_anchor_position_ws() const
00084480 t NxDistanceJointDesc::isValid() const
00084850 t NxRevoluteJointDesc::isValid() const
000e78a0 t CPhysicsSurfaceProps::GetPropName(int) const
000e79c0 t CPhysicsSurfaceProps::GetIVPMaterial(int) const
000e7430 t CPhysicsSurfaceProps::SurfacePropCount() const
000e7970 t CPhysicsSurfaceProps::GetInternalSurface(int) const
000e7460 t CPhysicsSurfaceProps::GetIVPMaterialIndex(IVP_Material const*) const
000e79d0 t CPhysicsSurfaceProps::GetReservedFallBack(int) const
000e77c0 t CPhysicsSurfaceProps::GetPhysicsParameters(int, surfacephysicsparams_t*) const
000e7810 t CPhysicsSurfaceProps::GetPhysicsProperties(int, float*, float*, float*, float*) const
000e9290 t CPhysicsSurfaceProps::RemapIVPMaterialIndex(int) const
000e7440 t CPhysicsSurfaceProps::GetReservedMaterialName(int) const
000e7990 t CPhysicsSurfaceProps::GetReservedSurfaceIndex(char const*) const
000e7980 t CPhysicsSurfaceProps::IsReservedMaterialIndex(int) const
000e7540 t CPhysicsSurfaceProps::GetString(unsigned short) const
00170910 t IVP_Compact_Triangle::get_next_tri() const
00170870 t IVP_Compact_Triangle::get_tri_index() const
001708d0 t IVP_Compact_Triangle::get_first_edge() const
001708b0 t IVP_Compact_Triangle::get_is_virtual() const
00170880 t IVP_Compact_Triangle::get_pierce_index() const
00170c50 t IVP_Compact_Triangle::get_compact_ledge() const
001708a0 t IVP_Compact_Triangle::get_material_index() const
001708f0 t IVP_Compact_Triangle::get_edge(int) const
00199df0 t IVP_Controller_VHash::compare(void*, void*) const
001851c0 t IVP_Core_Fast_Static::get_inv_mass() const
001851a0 t IVP_Core_Fast_Static::get_rot_inertia() const
001851b0 t IVP_Core_Fast_Static::get_inv_rot_inertia() const
00185190 t IVP_Core_Fast_Static::get_mass() const
0018ce60 t IVP_Synapse_Friction::is_same_as(IVP_Synapse_Real const*) const
0018ce40 t IVP_Synapse_Friction::get_material_index() const
00083c90 t NxPrismaticJointDesc::isValid() const
00084aa0 t NxSphericalJointDesc::isValid() const
0010cbc0 t SplitScreenConVarRef::IsValid() const
001a6640 t IVP_Active_Value_Hash::compare(void*, void*) const
001c8db0 t IVP_Controller_Motion::get_max_torque() const
001c8de0 t IVP_Controller_Motion::get_damp_factor() const
001c8dd0 t IVP_Controller_Motion::get_force_factor() const
001c8df0 t IVP_Controller_Motion::get_torque_factor() const
001c8e20 t IVP_Controller_Motion::get_target_orientation() const
001c8e10 t IVP_Controller_Motion::get_target_position_ws() const
001c8e00 t IVP_Controller_Motion::get_angular_damp_factor() const
001c8dc0 t IVP_Controller_Motion::get_max_translation_force() const
000653a0 t NxForceFieldShapeDesc::isValid() const
00170740 t IVP_Compact_Poly_Point::get_client_data() const
00181b10 t IVP_Controller_Phantom::get_object() const
00181af0 t IVP_Controller_Phantom::get_intruding_cores() const
00181ae0 t IVP_Controller_Phantom::get_intruding_objects() const
00083af0 t NxCylindricalJointDesc::isValid() const
00083310 t NxHeightFieldShapeDesc::isValid() const
00083e30 t NxPointOnLineJointDesc::isValid() const
000f8360 t CPhysCollideVirtualMesh::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
000f6ba0 t CPhysCollideVirtualMesh::GetMassCenter() const
000f6dd0 t CPhysCollideVirtualMesh::GetSphereRadius() const
000f8260 t CPhysCollideVirtualMesh::OutputDebugInfo() const
000f80e0 t CPhysCollideVirtualMesh::GetVCollideIndex() const
000f8270 t CPhysCollideVirtualMesh::SerializeToBuffer(char*, bool) const
000f7190 t CPhysCollideVirtualMesh::GetSphereRadiusIVP() const
000f8230 t CPhysCollideVirtualMesh::CreateSurfaceManager(short&) const
000f8100 t CPhysCollideVirtualMesh::GetOrthographicAreas() const
000f8090 t CPhysCollideVirtualMesh::GetSerializationSize() const
000e1710 t CPhysicsFluidController::GetDensity() const
000e1720 t CPhysicsFluidController::GetContents() const
000e1620 t CPhysicsFluidController::GetGameData() const
000e18b0 t CPhysicsFluidController::GetIVPObject() const
000e1630 t CPhysicsFluidController::GetSurfacePlane(Vector*, float*) const
000ce660 t CSplitScreenAddedConVar::GetBaseName() const
000ce690 t CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
001c8ff0 t IVP_SurfaceManager_Ball::get_mass_center(IVP_U_Float_Point*) const
001c8fe0 t IVP_SurfaceManager_Ball::get_single_convex() const
001c9090 t IVP_SurfaceManager_Ball::get_rotation_inertia(IVP_U_Float_Point*) const
001c90c0 t IVP_SurfaceManager_Ball::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
00083fd0 t NxPointInPlaneJointDesc::isValid() const
00082e30 t NxTriangleMeshShapeDesc::isValid() const
00065400 t NxBoxForceFieldShapeDesc::isValid() const
000d6180 t CPhysCollideCompactSurface::GetOBBMaxs() const
000d61c0 t CPhysCollideCompactSurface::GetOBBMins() const
000d3c80 t CPhysCollideCompactSurface::GetAllLedges(IVP_U_BigVector<IVP_Compact_Ledge>&) const
000d4350 t CPhysCollideCompactSurface::ComputeBounds() const
000d6010 t CPhysCollideCompactSurface::GetCollideMap() const
000d20a0 t CPhysCollideCompactSurface::GetMassCenter() const
000d5fd0 t CPhysCollideCompactSurface::GetExtraRadius() const
000d5fa0 t CPhysCollideCompactSurface::GetSphereRadius() const
000d4750 t CPhysCollideCompactSurface::OutputDebugInfo() const
000d5f90 t CPhysCollideCompactSurface::GetVCollideIndex() const
000d46f0 t CPhysCollideCompactSurface::ComputeHullInfo_r(CPhysCollideCompactSurface::hullinfo_t*, IVP_Compact_Ledgetree_Node const*) const
000d6000 t CPhysCollideCompactSurface::GetCompactSurface() const
000d3b30 t CPhysCollideCompactSurface::SerializeToBuffer(char*, bool) const
000d2b20 t CPhysCollideCompactSurface::CreateSurfaceManager(short&) const
000d2140 t CPhysCollideCompactSurface::GetOrthographicAreas() const
000d2080 t CPhysCollideCompactSurface::GetSerializationSize() const
00170ae0 t IVP_Compact_Ledgetree_Node::is_terminal() const
00170b00 t IVP_Compact_Ledgetree_Node::get_compact_hull() const
00170ab0 t IVP_Compact_Ledgetree_Node::get_compact_ledge() const
00170ac0 t IVP_Compact_Ledgetree_Node::left_son() const
00170ad0 t IVP_Compact_Ledgetree_Node::right_son() const
0018fee0 t IVP_Great_Matrix_Many_Zero::print_great_matrix(char const*) const
0018fec0 t IVP_Great_Matrix_Many_Zero::get_value(int, int) const
001a5b10 t IVP_SurfaceManager_Polygon::get_mass_center(IVP_U_Float_Point*) const
001a5b50 t IVP_SurfaceManager_Polygon::get_single_convex() const
001a6020 t IVP_SurfaceManager_Polygon::get_compact_surface() const
001a5b30 t IVP_SurfaceManager_Polygon::get_rotation_inertia(IVP_U_Float_Point*) const
001a5c00 t IVP_SurfaceManager_Polygon::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
0019c7a0 t IVP_Real_Object_Fast_Static::get_shift_core_f_object() const
0019c7b0 t IVP_Real_Object_Fast_Static::get_shift_core_f_object_sse() const
00065550 t NxConvexForceFieldShapeDesc::isValid() const
00065470 t NxSphereForceFieldShapeDesc::isValid() const
000654e0 t NxCapsuleForceFieldShapeDesc::isValid() const
001370f0 t IVP_SurfaceBuilder_Ledge_Soup::ledgetree_debug_output(IVP_Compact_Ledgetree_Node const*) const
000827c0 t NxSpringAndDamperEffectorDesc::isValid() const
001ca6d0 t IVP_Object_Callback_Table_Hash::compare(void*, void*) const
000f6c60 t IVP_SurfaceManager_VirtualMesh::get_mass_center(IVP_U_Float_Point*) const
000f79f0 t IVP_SurfaceManager_VirtualMesh::get_single_convex() const
000f6cd0 t IVP_SurfaceManager_VirtualMesh::get_rotation_inertia(IVP_U_Float_Point*) const
000f6c20 t IVP_SurfaceManager_VirtualMesh::get_radius_and_radius_dev_to_given_center(IVP_U_Float_Point const*, float*, float*) const
001b5930 t IVP_Collision_Callback_Table_Hash::compare(void*, void*) const
00057120 t NXU::C_Accessor::getBaseType() const
00057200 t NXU::C_Geometry::getBaseType() const
00057040 t NXU::C_IntArray::getBaseType() const
00057030 t NXU::C_IntArray::getArrayType() const
000571a0 t NXU::C_Vertices::getBaseType() const
000c54f0 t NXU::UserStream::readBuffer(void*, unsigned int) const
000c5520 t NXU::UserStream::readDouble() const
000c55f0 t NXU::UserStream::readByte() const
000c55b0 t NXU::UserStream::readWord() const
000c5580 t NXU::UserStream::readDword() const
000c5550 t NXU::UserStream::readFloat() const
00057020 t NXU::C_BoolArray::getBaseType() const
00057000 t NXU::C_BoolArray::getArrayType() const
000570a0 t NXU::C_NameArray::getBaseType() const
00057080 t NXU::C_NameArray::getArrayType() const
00057240 t NXU::C_RigidBody::getBaseType() const
000571c0 t NXU::C_Triangles::getBaseType() const
000c9790 t NXU::TiXmlHandle::FirstChild(char const*) const
000c9770 t NXU::TiXmlHandle::FirstChild() const
000c98f0 t NXU::TiXmlHandle::ChildElement(int) const
000c9960 t NXU::TiXmlHandle::ChildElement(char const*, int) const
000c9800 t NXU::TiXmlHandle::FirstChildElement(char const*) const
000c97c0 t NXU::TiXmlHandle::FirstChildElement() const
000c9850 t NXU::TiXmlHandle::Child(int) const
000c9890 t NXU::TiXmlHandle::Child(char const*, int) const
00057060 t NXU::C_FloatArray::getBaseType() const
00057050 t NXU::C_FloatArray::getArrayType() const
000570e0 t NXU::C_IDREFArray::getBaseType() const
000570c0 t NXU::C_IDREFArray::getArrayType() const
000c6c20 t NXU::TiXmlComment::Clone() const
000c62f0 t NXU::TiXmlComment::Print(NXU::NXU_FILE*, int) const
000c8630 t NXU::TiXmlComment::CopyTo(NXU::TiXmlComment*) const
000c63b0 t NXU::TiXmlComment::StreamOut(NXU::TiXmlOutStream*) const
000c9ac0 t NXU::TiXmlComment::ToComment() const
000c8e90 t NXU::TiXmlElement::QueryIntAttribute(char const*, int*) const
000c8dd0 t NXU::TiXmlElement::QueryDoubleAttribute(char const*, double*) const
000c9450 t NXU::TiXmlElement::Clone() const
000c6120 t NXU::TiXmlElement::Print(NXU::NXU_FILE*, int) const
000c9390 t NXU::TiXmlElement::CopyTo(NXU::TiXmlElement*) const
000c7670 t NXU::TiXmlElement::GetText() const
000c8f50 t NXU::TiXmlElement::Attribute(char const*) const
000c9010 t NXU::TiXmlElement::Attribute(char const*, double*) const
000c9070 t NXU::TiXmlElement::Attribute(char const*, int*) const
000c6410 t NXU::TiXmlElement::StreamOut(NXU::TiXmlOutStream*) const
000c9aa0 t NXU::TiXmlElement::ToElement() const
000c6ca0 t NXU::TiXmlUnknown::Clone() const
000c6010 t NXU::TiXmlUnknown::Print(NXU::NXU_FILE*, int) const
000c8a70 t NXU::TiXmlUnknown::CopyTo(NXU::TiXmlUnknown*) const
000c6350 t NXU::TiXmlUnknown::StreamOut(NXU::TiXmlOutStream*) const
000c9b20 t NXU::TiXmlUnknown::ToUnknown() const
000573a0 t NXU::C_VisualScene::getBaseType() const
000cc050 t NXU::TiXmlDocument::ToDocument() const
000c7f40 t NXU::TiXmlDocument::Clone() const
000c7f90 t NXU::TiXmlDocument::Print(NXU::NXU_FILE*, int) const
000c7d90 t NXU::TiXmlDocument::CopyTo(NXU::TiXmlDocument*) const
000c7cc0 t NXU::TiXmlDocument::SaveFile(char const*) const
000c7c50 t NXU::TiXmlDocument::SaveFile(NXU::NXU_FILE*) const
000c7d20 t NXU::TiXmlDocument::SaveFile() const
000c7fe0 t NXU::TiXmlDocument::StreamOut(NXU::TiXmlOutStream*) const
00057280 t NXU::C_PhysicsModel::getBaseType() const
00057310 t NXU::C_PhysicsScene::getBaseType() const
000c8510 t NXU::TiXmlAttribute::DoubleValue() const
000c8350 t NXU::TiXmlAttribute::QueryIntValue(int*) const
000c8390 t NXU::TiXmlAttribute::QueryDoubleValue(double*) const
000c8030 t NXU::TiXmlAttribute::Next() const
000c80f0 t NXU::TiXmlAttribute::Print(NXU::NXU_FILE*, int) const
000c84e0 t NXU::TiXmlAttribute::IntValue() const
000c8090 t NXU::TiXmlAttribute::Previous() const
000c8220 t NXU::TiXmlAttribute::StreamOut(NXU::TiXmlOutStream*) const
000c5130 t NXU::MemoryReadBuffer::readBuffer(void*, unsigned int) const
000c4ee0 t NXU::MemoryReadBuffer::readDouble() const
000c4e60 t NXU::MemoryReadBuffer::readByte() const
000c4e80 t NXU::MemoryReadBuffer::readWord() const
000c4ea0 t NXU::MemoryReadBuffer::readDword() const
000c4ec0 t NXU::MemoryReadBuffer::readFloat() const
000c9b00 t NXU::TiXmlDeclaration::ToDeclaration() const
000c88c0 t NXU::TiXmlDeclaration::Clone() const
000c6070 t NXU::TiXmlDeclaration::Print(NXU::NXU_FILE*, int) const
000c8840 t NXU::TiXmlDeclaration::CopyTo(NXU::TiXmlDeclaration*) const
000c6930 t NXU::TiXmlDeclaration::StreamOut(NXU::TiXmlOutStream*) const
000573f0 t NXU::C_PhysicsMaterial::getBaseType() const
00056fa0 t NXU::C_RigidConstraint::getBaseType() const
000c5810 t NXU::MemoryWriteBuffer::readBuffer(void*, unsigned int) const
000c5800 t NXU::MemoryWriteBuffer::readDouble() const
000c57c0 t NXU::MemoryWriteBuffer::readByte() const
000c57d0 t NXU::MemoryWriteBuffer::readWord() const
000c57e0 t NXU::MemoryWriteBuffer::readDword() const
000c57f0 t NXU::MemoryWriteBuffer::readFloat() const
000c8d60 t NXU::TiXmlAttributeSet::Find(NXU::TiXmlString const&) const
00057260 t NXU::C_DisableCollision::getBaseType() const
000572d0 t NXU::C_InstanceRigidBody::getBaseType() const
00057350 t NXU::C_LibraryGeometries::getBaseType() const
00057470 t NXU::C_InstanceVisualScene::getBaseType() const
000573c0 t NXU::C_LibraryVisualScenes::getBaseType() const
000572f0 t NXU::C_InstancePhysicsModel::getBaseType() const
00057440 t NXU::C_InstancePhysicsScene::getBaseType() const
000572a0 t NXU::C_LibraryPhysicsModels::getBaseType() const
00057330 t NXU::C_LibraryPhysicsScenes::getBaseType() const
000c50f0 t NXU::ImportMemoryReadBuffer::readBuffer(void*, unsigned int) const
000c5090 t NXU::ImportMemoryReadBuffer::readDouble() const
000c5010 t NXU::ImportMemoryReadBuffer::readByte() const
000c5030 t NXU::ImportMemoryReadBuffer::readWord() const
000c5050 t NXU::ImportMemoryReadBuffer::readDword() const
000c5070 t NXU::ImportMemoryReadBuffer::readFloat() const
000c58d0 t NXU::ImportMemoryWriteBuffer::readBuffer(void*, unsigned int) const
000c58c0 t NXU::ImportMemoryWriteBuffer::readDouble() const
000c5880 t NXU::ImportMemoryWriteBuffer::readByte() const
000c5890 t NXU::ImportMemoryWriteBuffer::readWord() const
000c58a0 t NXU::ImportMemoryWriteBuffer::readDword() const
000c58b0 t NXU::ImportMemoryWriteBuffer::readFloat() const
00056fd0 t NXU::C_InstanceRigidConstraint::getBaseType() const
00057410 t NXU::C_LibraryPhysicsMaterials::getBaseType() const
00056f60 t NXU::C_Base::getBaseType() const
000571e0 t NXU::C_Mesh::getBaseType() const
00057380 t NXU::C_Node::getBaseType() const
00057180 t NXU::C_Input::getBaseType() const
00057100 t NXU::C_Param::getBaseType() const
00057490 t NXU::C_Scene::getBaseType() const
00057230 t NXU::C_Shape::getBaseType() const
00057150 t NXU::C_Source::getBaseType() const
000c6fd0 t NXU::TiXmlNode::FirstChild(char const*) const
000c99e0 t NXU::TiXmlNode::ToDocument() const
000c75f0 t NXU::TiXmlNode::GetDocument() const
000c7150 t NXU::TiXmlNode::NextSibling(char const*) const
000c9a30 t NXU::TiXmlNode::ToDeclaration() const
000c71a0 t NXU::TiXmlNode::IterateChildren(char const*, NXU::TiXmlNode const*) const
000c7110 t NXU::TiXmlNode::IterateChildren(NXU::TiXmlNode const*) const
000c7250 t NXU::TiXmlNode::PreviousSibling(char const*) const
000c7390 t NXU::TiXmlNode::FirstChildElement(char const*) const
000c72f0 t NXU::TiXmlNode::FirstChildElement() const
000c7510 t NXU::TiXmlNode::NextSiblingElement(char const*) const
000c7470 t NXU::TiXmlNode::NextSiblingElement() const
000c6bd0 t NXU::TiXmlNode::CopyTo(NXU::TiXmlNode*) const
000c9a20 t NXU::TiXmlNode::ToText() const
000c7070 t NXU::TiXmlNode::LastChild(char const*) const
000c9a00 t NXU::TiXmlNode::ToComment() const
000c99f0 t NXU::TiXmlNode::ToElement() const
000c9a10 t NXU::TiXmlNode::ToUnknown() const
000cb950 t NXU::TiXmlText::Blank() const
000c8670 t NXU::TiXmlText::Clone() const
000c67c0 t NXU::TiXmlText::Print(NXU::NXU_FILE*, int) const
000c8640 t NXU::TiXmlText::CopyTo(NXU::TiXmlText*) const
000c9ae0 t NXU::TiXmlText::ToText() const
000c6a70 t NXU::TiXmlText::StreamOut(NXU::TiXmlOutStream*) const
0010c800 t ConVar::GetDefault() const
0010b560 t ConVar::GetBaseName() const
0010b4f0 t ConVar::GetHelpText() const
0010c7d0 t ConVar::GetMaxValue() const
0010c7c0 t ConVar::GetMinValue() const
0010b520 t ConVar::IsRegistered() const
0010b580 t ConVar::GetSplitScreenPlayerSlot() const
0010c7a0 t ConVar::GetMax(float&) const
0010c780 t ConVar::GetMin(float&) const
0010c7f0 t ConVar::HasMax() const
0010c7e0 t ConVar::HasMin() const
0010b540 t ConVar::GetName() const
0010b4e0 t ConVar::GetFlags() const
0010b590 t ConVar::IsCommand() const
0010b4c0 t ConVar::IsFlagSet(int) const
0010c200 t CCommand::FindArgInt(char const*, int) const
0010c170 t CCommand::FindArg(char const*) const
001c9220 t IVP_Ball::get_radius() const
00182300 t IVP_Core::calc_at_matrix(IVP_Time, IVP_U_Matrix*) const
00182160 t IVP_Core::calc_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
00182c10 t IVP_Core::test_push_core(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*, IVP_U_Float_Point*) const
001827b0 t IVP_Core::get_surface_speed(IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00182e50 t IVP_Core::calc_correct_virt_mass(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*) const
001852e0 t IVP_Core::inline_calc_at_position(IVP_Time, IVP_U_Point*) const
00182020 t IVP_Core::calc_virt_mass_worst_case(IVP_U_Float_Point const*) const
00181cb0 t IVP_Core::get_surface_speed_on_test(IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point const*, IVP_U_Float_Point*) const
00185290 t IVP_Core::inline_calc_at_quaternion(IVP_Time, IVP_U_Quat*) const
001a9310 t IVP_Hash::find(char const*) const
0010c950 t ConVarRef::IsValid() const
000f9a60 t CTraceIVP::SupportMap(Vector const&, Vector*) const
000f9960 t CTraceIVP::GetVertByIndex(int) const
000fb700 t CTraceRay::SupportMap(Vector const&, Vector*) const
001d7f30 t Frustum_t::CullBoxCenterExtents(Vector const&, Vector const&) const
001d7e80 t Frustum_t::CullBox(Vector const&, Vector const&) const
001d7cf0 t Frustum_t::GetPlane(int, Vector*, float*) const
00181570 t IVP_U_Set<IVP_Real_Object>::compare(void*, void*) const
001815b0 t IVP_U_Set<IVP_Mindist_Base>::compare(void*, void*) const
00181590 t IVP_U_Set<IVP_Core>::compare(void*, void*) const
001b3350 t IVP_VHash::print() const
001b3230 t IVP_VHash::find_elem(void const*, unsigned int) const
         U CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
         U operator new(unsigned int)@@GLIBCXX_3.4
001d8980 t operator|=(PolyhedronLinePlanarity&, PolyhedronLinePlanarity const&)
         U std::terminate()@@GLIBCXX_3.4
001bf600 t non-virtual thunk to IVP_Mindist_Recursive::get_spawned_mindist_count()
001bf5d0 t non-virtual thunk to IVP_Mindist_Recursive::change_spawned_mindist_count(int)
001bee50 t non-virtual thunk to IVP_Mindist_Recursive::collision_is_going_to_be_deleted_event(IVP_Collision*)
001bee20 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
001bed30 t non-virtual thunk to IVP_Mindist_Recursive::~IVP_Mindist_Recursive()
001743d0 t non-virtual thunk to IVP_Actuator_Extra::active_float_changed(IVP_U_Active_Float*)
00175780 t non-virtual thunk to IVP_Actuator_Force_Active::active_float_changed(IVP_U_Active_Float*)
001759b0 t non-virtual thunk to IVP_Actuator_Torque_Active::active_float_changed(IVP_U_Active_Float*)
001758c0 t non-virtual thunk to IVP_Actuator_Rot_Mot_Active::active_float_changed(IVP_U_Active_Float*)
00177c60 t non-virtual thunk to IVP_Actuator_Spring_Active::active_float_changed(IVP_U_Active_Float*)
001bf940 t non-virtual thunk to IVP_OO_Watcher::collision_is_going_to_be_deleted_event(IVP_Collision*)
001bfb50 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
001bfa10 t non-virtual thunk to IVP_OO_Watcher::~IVP_OO_Watcher()
0010d4f0 t non-virtual thunk to CEmptyConVar::SetValue(float)
0010d510 t non-virtual thunk to CEmptyConVar::SetValue(int)
0010d4d0 t non-virtual thunk to CEmptyConVar::SetValue(char const*)
0010b690 t non-virtual thunk to ConVar::SetValue(Color)
0010b630 t non-virtual thunk to ConVar::SetValue(float)
0010b660 t non-virtual thunk to ConVar::SetValue(int)
0010b600 t non-virtual thunk to ConVar::SetValue(char const*)
0010d530 t non-virtual thunk to CEmptyConVar::GetName() const
0010d550 t non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
000ce650 t non-virtual thunk to CSplitScreenAddedConVar::GetBaseName() const
000ce680 t non-virtual thunk to CSplitScreenAddedConVar::GetSplitScreenPlayerSlot() const
0010b550 t non-virtual thunk to ConVar::GetBaseName() const
0010b570 t non-virtual thunk to ConVar::GetSplitScreenPlayerSlot() const
0010b530 t non-virtual thunk to ConVar::GetName() const
0010b4b0 t non-virtual thunk to ConVar::IsFlagSet(int) const
001a6f70 t non-virtual thunk to IVP_U_Active_Add::active_float_changed(IVP_U_Active_Float*)
001a6f20 t non-virtual thunk to IVP_U_Active_Sub::active_float_changed(IVP_U_Active_Float*)
001a6e70 t non-virtual thunk to IVP_U_Active_Mult::active_float_changed(IVP_U_Active_Float*)
001a70b0 t non-virtual thunk to IVP_U_Active_Sine::active_float_changed(IVP_U_Active_Float*)
001a6e20 t non-virtual thunk to IVP_U_Active_Limit::active_float_changed(IVP_U_Active_Float*)
001a6fc0 t non-virtual thunk to IVP_U_Active_Pulse::active_float_changed(IVP_U_Active_Float*)
001a7040 t non-virtual thunk to IVP_U_Active_Square::active_float_changed(IVP_U_Active_Float*)
001a6db0 t non-virtual thunk to IVP_U_Active_Switch::active_float_changed(IVP_U_Active_Float*)
001a71c0 t non-virtual thunk to IVP_U_Active_Test_Range::active_float_changed(IVP_U_Active_Float*)
001a6ec0 t non-virtual thunk to IVP_U_Active_Add_Multiple::active_float_changed(IVP_U_Active_Float*)
001a7230 t non-virtual thunk to IVP_U_Active_Terminal_Int::update_int()
001a7130 t non-virtual thunk to IVP_U_Active_Terminal_Double::update_float()
001a60a0 t non-virtual thunk to IVP_U_Active_Switch::active_int_changed(IVP_U_Active_Int*)
000f2eb0 t non-virtual thunk to CPhysicsSpring::event_object_frozen(IVP_Event_Object*)
000f2e70 t non-virtual thunk to CPhysicsSpring::event_object_created(IVP_Event_Object*)
000f2910 t non-virtual thunk to CPhysicsSpring::event_object_deleted(IVP_Event_Object*)
000f2e90 t non-virtual thunk to CPhysicsSpring::event_object_revived(IVP_Event_Object*)
000f29a0 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
000f2930 t non-virtual thunk to CPhysicsSpring::~CPhysicsSpring()
000e0560 t non-virtual thunk to CCollisionSolver::inter_penetration(IVP_Mindist*, IVP_Real_Object*, IVP_Real_Object*, float)
000df2f0 t non-virtual thunk to CCollisionSolver::max_velocity_exceeded(IVP_Anomaly_Limits*, IVP_Core*, IVP_U_Float_Point*)
000ded80 t non-virtual thunk to CCollisionSolver::environment_will_be_deleted(IVP_Environment*)
000dedf0 t non-virtual thunk to CCollisionSolver::max_collision_checks_exceeded(int)
000e0300 t non-virtual thunk to CCollisionSolver::max_contacts_exceeded_check_freezing(IVP_Core**, int)
000deda0 t non-virtual thunk to CCollisionSolver::max_collisions_exceeded_check_freezing(IVP_Anomaly_Limits*, IVP_Core*)
000dfc50 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
000dfbd0 t non-virtual thunk to CCollisionSolver::~CCollisionSolver()
000d1eb0 t non-virtual thunk to CPhysics_Airboat::get_controller_name()
000ceea0 t non-virtual thunk to CPhysics_Airboat::get_controller_priority()
000d16d0 t non-virtual thunk to CPhysics_Airboat::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
000cf120 t non-virtual thunk to CPhysics_Airboat::get_associated_controlled_cores()
000cf140 t non-virtual thunk to CPhysics_Airboat::core_is_going_to_be_deleted_event(IVP_Core*)
000cf420 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
000cf360 t non-virtual thunk to CPhysics_Airboat::~CPhysics_Airboat()
000ef300 t non-virtual thunk to CPlayerController::IsInContact()
000f20b0 t non-virtual thunk to CPlayerController::GetLastImpulse(Vector*)
000ef100 t non-virtual thunk to CPlayerController::SetEventHandler(IPhysicsPlayerControllerEvent*)
000f2170 t non-virtual thunk to CPlayerController::GetPushMassLimit()
000f2130 t non-virtual thunk to CPlayerController::SetPushMassLimit(float)
000f2190 t non-virtual thunk to CPlayerController::GetPushSpeedLimit()
000f2470 t non-virtual thunk to CPlayerController::GetShadowPosition(Vector*, QAngle*)
000ef380 t non-virtual thunk to CPlayerController::GetShadowVelocity(Vector*)
000f2150 t non-virtual thunk to CPlayerController::SetPushSpeedLimit(float)
000ef0e0 t non-virtual thunk to CPlayerController::Jump()
000ef590 t non-virtual thunk to CPlayerController::StepUp(float)
000efcf0 t non-virtual thunk to CPlayerController::Update(Vector const&, Vector const&, float, bool, IPhysicsObject*)
000ef470 t non-virtual thunk to CPlayerController::MaxSpeed(Vector const&)
000f2110 t non-virtual thunk to CPlayerController::GetObject()
000f00a0 t non-virtual thunk to CPlayerController::SetObject(IPhysicsObject*)
000f2080 t non-virtual thunk to CPlayerController::WasFrozen()
000f0190 t non-virtual thunk to CPlayerController::~CPlayerController()
000f0110 t non-virtual thunk to CPlayerController::~CPlayerController()
000ef1b0 t non-virtual thunk to CShadowController::GetMaxSpeed(float*, float*)
000f2280 t non-virtual thunk to CShadowController::AllowsRotation()
000f22b0 t non-virtual thunk to CShadowController::GetLastImpulse(Vector*)
000f2250 t non-virtual thunk to CShadowController::AllowsTranslation()
000ef1f0 t non-virtual thunk to CShadowController::GetTargetPosition(Vector*, QAngle*)
000f2380 t non-virtual thunk to CShadowController::UseShadowMaterial(bool)
000ef150 t non-virtual thunk to CShadowController::GetTeleportDistance()
000ef120 t non-virtual thunk to CShadowController::SetTeleportDistance(float)
000f2400 t non-virtual thunk to CShadowController::ObjectMaterialChanged(int)
000f2350 t non-virtual thunk to CShadowController::IsPhysicallyControlled()
000f2310 t non-virtual thunk to CShadowController::SetPhysicallyControlled(bool)
000ef270 t non-virtual thunk to CShadowController::StepUp(float)
000ef630 t non-virtual thunk to CShadowController::Update(Vector const&, QAngle const&, float)
000ef180 t non-virtual thunk to CShadowController::MaxSpeed(float, float)
000f19a0 t non-virtual thunk to CShadowController::~CShadowController()
000f1940 t non-virtual thunk to CShadowController::~CShadowController()
000dbb70 t non-virtual thunk to CPhysicsConstraint::event_object_frozen(IVP_Event_Object*)
000dbb30 t non-virtual thunk to CPhysicsConstraint::event_object_created(IVP_Event_Object*)
000d8da0 t non-virtual thunk to CPhysicsConstraint::event_object_deleted(IVP_Event_Object*)
000dbb50 t non-virtual thunk to CPhysicsConstraint::event_object_revived(IVP_Event_Object*)
000d8d70 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
000d8ce0 t non-virtual thunk to CPhysicsConstraint::~CPhysicsConstraint()
000f6b60 t non-virtual thunk to CVehicleController::event_object_frozen(IVP_Event_Object*)
000f6b20 t non-virtual thunk to CVehicleController::event_object_created(IVP_Event_Object*)
000f49c0 t non-virtual thunk to CVehicleController::event_object_deleted(IVP_Event_Object*)
000f6b40 t non-virtual thunk to CVehicleController::event_object_revived(IVP_Event_Object*)
000f4a50 t non-virtual thunk to CVehicleController::~CVehicleController()
000f49f0 t non-virtual thunk to CVehicleController::~CVehicleController()
000ea500 t non-virtual thunk to CPhysicsMotionController::GetObjects(IPhysicsObject**)
000e9820 t non-virtual thunk to CPhysicsMotionController::SetPriority(IPhysicsMotionController::priority_t)
000ea570 t non-virtual thunk to CPhysicsMotionController::WakeObjects()
000ea260 t non-virtual thunk to CPhysicsMotionController::AttachObject(IPhysicsObject*, bool)
000ea610 t non-virtual thunk to CPhysicsMotionController::ClearObjects()
000ea4e0 t non-virtual thunk to CPhysicsMotionController::CountObjects()
000ea020 t non-virtual thunk to CPhysicsMotionController::DetachObject(IPhysicsObject*)
000e9870 t non-virtual thunk to CPhysicsMotionController::SetEventHandler(IMotionEvent*)
000ea120 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
000ea050 t non-virtual thunk to CPhysicsMotionController::~CPhysicsMotionController()
0017cce0 t non-virtual thunk to IVP_Controller_Raycast_Car::get_controller_priority()
0017dfa0 t non-virtual thunk to IVP_Controller_Raycast_Car::do_simulation_controller(IVP_Event_Sim*, IVP_U_Vector<IVP_Core>*)
0017e6c0 t non-virtual thunk to IVP_Controller_Raycast_Car::get_associated_controlled_cores()
0017e690 t non-virtual thunk to IVP_Controller_Raycast_Car::core_is_going_to_be_deleted_event(IVP_Core*)
0017e1e0 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
0017e130 t non-virtual thunk to IVP_Controller_Raycast_Car::~IVP_Controller_Raycast_Car()
000dc590 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::get_controller_name()
000dc1a0 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000dc170 t non-virtual thunk to CPhysics_Car_System_Raycast_Wheels::~CPhysics_Car_System_Raycast_Wheels()
000f2210 t non-virtual thunk to CPlayerController::event_object_frozen(IVP_Event_Object*)
000f21d0 t non-virtual thunk to CPlayerController::event_object_created(IVP_Event_Object*)
000f21b0 t non-virtual thunk to CPlayerController::event_object_deleted(IVP_Event_Object*)
000f21f0 t non-virtual thunk to CPlayerController::event_object_revived(IVP_Event_Object*)
000f0180 t non-virtual thunk to CPlayerController::~CPlayerController()
000f0100 t non-virtual thunk to CPlayerController::~CPlayerController()
000e2cd0 t non-virtual thunk to CPhysicsListenerCollision::core_left_volume(IVP_Controller_Phantom*, IVP_Core*)
000e2c50 t non-virtual thunk to CPhysicsListenerCollision::core_entered_volume(IVP_Controller_Phantom*, IVP_Core*)
000e3510 t non-virtual thunk to CPhysicsListenerCollision::mindist_left_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
000e34f0 t non-virtual thunk to CPhysicsListenerCollision::mindist_entered_volume(IVP_Controller_Phantom*, IVP_Mindist_Base*)
000e3530 t non-virtual thunk to CPhysicsListenerCollision::phantom_is_going_to_be_deleted_event(IVP_Controller_Phantom*)
001eeedc r typeinfo for ConCommand
001ee264 r typeinfo for CTraceAABB
001ee4c8 r typeinfo for CTraceCone
00203718 r typeinfo for hk_Console
001efc14 r typeinfo for hk_Link_EF
001ea0fc r typeinfo for IAppSystem
002008a4 r typeinfo for IVP_Object
002033ac r typeinfo for CPolyhedron
001ee2c4 r typeinfo for CTracePhys2
001ee4b0 r typeinfo for CTracePhys3
001ee4bc r typeinfo for CTracePhys4
001ee49c r typeinfo for IConvexInfo
002008bc r typeinfo for IVP_Cluster
002024f0 r typeinfo for IVP_Mindist
00200bd8 r typeinfo for IVP_Polygon
002023ec r typeinfo for IVP_Synapse
001e4088 r typeinfo for NxJointDesc
001e3b7c r typeinfo for NxShapeDesc
001edd84 r typeinfo for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
001ebacc r typeinfo for CDeleteProxy<IPhysicsConstraint>
001ef184 r typeinfo for CEmptyConVar
001eab64 r typeinfo for CPhysCollide
001ee494 r typeinfo for CTraceSolver
001eab80 r typeinfo for IPhysCollide
001ee48c r typeinfo for ITraceObject
001ff574 r typeinfo for IVP_Actuator
00201024 r typeinfo for IVP_Material
001f8e7c r typeinfo for IVP_Triangle
001ed2ec r typeinfo for aligned_tmp_t
001ebaa0 r typeinfo for CSleepObjects
001ee2a8 r typeinfo for CTraceObject2
001ebaec r typeinfo for CVoidPairHash
001efd28 r typeinfo for hk_Constraint
00202e04 r typeinfo for IVP_3D_Solver
001ff24c r typeinfo for IVP_CFEP_Hash
00202244 r typeinfo for IVP_Collision
001e40fc r typeinfo for NxD6JointDesc
001ee008 r typeinfo for CBaseAppSystem<IPhysics2Disabler>
001ea0bc r typeinfo for CBaseAppSystem<IPhysics>
001ee4a4 r typeinfo for CDefConvexInfo
001eeec4 r typeinfo for ConCommandBase
001eca24 r typeinfo for CPhysicsObject
001ed3a0 r typeinfo for CPhysicsSpring
001ee310 r typeinfo for CTraceHullList
001ee8e8 r typeinfo for CVPhysicsParse
001ecd4c r typeinfo for IPhysicsObject
001ed4a8 r typeinfo for IPhysicsSpring
001ffd24 r typeinfo for IVP_Car_System
002031b8 r typeinfo for IVP_Constraint
001ea438 r typeinfo for IVP_Controller
002024a0 r typeinfo for IVP_OO_Watcher
00202158 r typeinfo for IVP_OV_Element
001f8640 r typeinfo for IVP_point_hash
001ff374 r typeinfo for IVP_Ray_Solver
00202468 r typeinfo for IVP_Synapse_OO
00200d28 r typeinfo for IVP_Time_Event
001e3b70 r typeinfo for NxBoxShapeDesc
001e4108 r typeinfo for NxEffectorDesc
001ea774 r typeinfo for CCollisionQuery
001ebab8 r typeinfo for CDragController
001ebae0 r typeinfo for CObjectPairHash
001edfcc r typeinfo for CTier0AppSystem<IPhysics2Disabler>
001ea064 r typeinfo for CTier0AppSystem<IPhysics>
001edf84 r typeinfo for CTier1AppSystem<IPhysics2Disabler, 0>
001ea00c r typeinfo for CTier1AppSystem<IPhysics, 0>
001eab70 r typeinfo for ICollisionQuery
001ecdac r typeinfo for ISaveRestoreOps
0020092c r typeinfo for IVP_Real_Object
001eba80 r typeinfo for CCollisionSolver
001ef21c r typeinfo for CDataManagerBase
001ef178 r typeinfo for CDefaultAccessor
001ef350 r typeinfo for CDllDemandLoader
001ea260 r typeinfo for CPhysics_Airboat
001ebac4 r typeinfo for IDeleteQueueItem
0020240c r typeinfo for IVP_Mindist_Base
002021b4 r typeinfo for IVP_ov_tree_hash
002024d4 r typeinfo for IVP_Synapse_Real
00200d68 r typeinfo for IVP_Time_Event_D
00200d88 r typeinfo for IVP_Time_Event_N
002017c0 r typeinfo for IVP_U_Active_Add
00201644 r typeinfo for IVP_U_Active_Int
00201800 r typeinfo for IVP_U_Active_Sub
002002d0 r typeinfo for IVP_U_Set_Active<IVP_Real_Object>
002002ac r typeinfo for IVP_U_Set_Active<IVP_Mindist_Base>
002002e8 r typeinfo for IVP_U_Set_Active<IVP_Core>
001e40f0 r typeinfo for NxFixedJointDesc
001e411c r typeinfo for NxPlaneShapeDesc
001e4128 r typeinfo for NxWheelShapeDesc
001ed278 r typeinfo for CAlignedNewDelete<16, aligned_tmp_t>
001ebc9c r typeinfo for CBuoyancyAttacher
001ebe9c r typeinfo for CFrictionSnapshot
001ecd54 r typeinfo for CMaterialIndexOps
001ee9f8 r typeinfo for collision_rules_t
001edf64 r typeinfo for CPhysics2Disabler
001ea728 r typeinfo for CPhysicsCollision
001e9ed8 r typeinfo for CPhysicsInterface
001ecf80 r typeinfo for CPlayerController
001ecfc0 r typeinfo for CShadowController
001ee048 r typeinfo for IPhysics2Disabler
001eab5c r typeinfo for IPhysicsCollision
00200da8 r typeinfo for IVP_Event_Manager
001f866c r typeinfo for IVP_I_Point_VHash
00200768 r typeinfo for IVP_Listener_Hull
00202af4 r typeinfo for IVP_Range_Manager
00201880 r typeinfo for IVP_U_Active_Mult
00201700 r typeinfo for IVP_U_Active_Sine
001e3b9c r typeinfo for NxConvexShapeDesc
001e40e4 r typeinfo for NxPulleyJointDesc
001e3b84 r typeinfo for NxSphereShapeDesc
001efb48 r typeinfo for CCountedStringPool
001ecd88 r typeinfo for CDefSaveRestoreOps
001eb040 r typeinfo for CPhysicsConstraint
001ef5d8 r typeinfo for CUtlCharConversion
001edae0 r typeinfo for CVehicleController
001eb1ac r typeinfo for IPhysicsConstraint
001ff7c0 r typeinfo for IVP_Actuator_Extra
001ff5e8 r typeinfo for IVP_Actuator_Force
00200ea0 r typeinfo for IVP_Anomaly_Limits
001ee9f0 r typeinfo for IVPhysicsKeyParser
001f85fc r typeinfo for IVP_I_FPoint_VHash
001ff3c0 r typeinfo for IVP_Ray_Solver_Min
002012a0 r typeinfo for IVP_SurfaceManager
00200d48 r typeinfo for IVP_Time_Event_PSI
00201624 r typeinfo for IVP_U_Active_Float
002018c0 r typeinfo for IVP_U_Active_Limit
00201780 r typeinfo for IVP_U_Active_Pulse
00201604 r typeinfo for IVP_U_Active_Value
001e3b90 r typeinfo for NxCapsuleShapeDesc
001e4134 r typeinfo for NxTireFunctionDesc
001ec330 r typeinfo for CIVPMaterialManager
001eb5fc r typeinfo for CPhysicsEnvironment
001ef634 r typeinfo for CUtlNoEscConversion
001efdc0 r typeinfo for hk_Fixed_Constraint
001efe28 r typeinfo for hk_Hinge_Constraint
001eba6c r typeinfo for IPhysicsEnvironment
00202850 r typeinfo for IVP_3D_Solver_PK_KK
001ffbd0 r typeinfo for IVP_Actuator_Spring
001ff6d8 r typeinfo for IVP_Actuator_Torque
00200ec0 r typeinfo for IVP_Anomaly_Manager
00200df4 r typeinfo for IVP_Event_Manager_D
00200adc r typeinfo for IVP_Friction_System
001eea30 r typeinfo for IVPhysicsKeyHandler
00200a98 r typeinfo for IVP_Listener_Object
001ffbb0 r typeinfo for IVP_Listener_Spring
00201044 r typeinfo for IVP_Material_Simple
00201740 r typeinfo for IVP_U_Active_Square
00201940 r typeinfo for IVP_U_Active_Switch
001e40d8 r typeinfo for NxDistanceJointDesc
001e409c r typeinfo for NxRevoluteJointDesc
001ea440 r typeinfo for CAirboatFrictionData
001ef088 r typeinfo for ConVar_ServerBounded
001ea020 r typeinfo for CPhysicsCollisionSet
001ebff8 r typeinfo for CPhysicsFrictionData
001ec354 r typeinfo for CPhysicsSurfaceProps
001eff50 r typeinfo for hk_Pulley_Constraint
001ea018 r typeinfo for IPhysicsCollisionSet
001ec4d4 r typeinfo for IPhysicsSurfaceProps
00202898 r typeinfo for IVP_3D_Solver_PF_NPF
0020282c r typeinfo for IVP_3D_Solver_S_VALS
001ff658 r typeinfo for IVP_Actuator_Rot_Mot
001ff1c8 r typeinfo for IVP_Collision_Filter
00202b54 r typeinfo for IVP_Constraint_Local
00202c0c r typeinfo for IVP_Controller_Golem
00200950 r typeinfo for IVP_Controller_VHash
0020019c r typeinfo for IVP_Listener_Phantom
00201068 r typeinfo for IVP_Material_Manager
001ff358 r typeinfo for IVP_Ray_Hit_Listener
0020090c r typeinfo for IVP_Real_Object_Fast
00200b00 r typeinfo for IVP_Universe_Manager
001e4090 r typeinfo for NxPrismaticJointDesc
001e40b4 r typeinfo for NxSphericalJointDesc
001ec0f0 r typeinfo for CPhysicsCollisionData
001ef5f8 r typeinfo for CUtlCStringConversion
001ebb04 r typeinfo for CVPhysicsDebugOverlay
001ee90c r typeinfo for CVPhysicsPackedParser
001effb0 r typeinfo for hk_Ragdoll_Constraint
001ea49c r typeinfo for IPhysicsCollisionData
002028bc r typeinfo for IVP_3D_Solver_KK_COLL
00202784 r typeinfo for IVP_3D_Solver_PF_COLL
00202874 r typeinfo for IVP_3D_Solver_PK_COLL
00201980 r typeinfo for IVP_Active_Value_Hash
001ff780 r typeinfo for IVP_Anchor_Check_Dist
001ebda4 r typeinfo for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00202be8 r typeinfo for IVP_Controller_Motion
001ebc18 r typeinfo for IVPhysicsDebugOverlay
00202520 r typeinfo for IVP_Mindist_Recursive
001e3804 r typeinfo for NxForceFieldShapeDesc
0020335c r typeinfo for CPolyhedron_AllocByNew
002033b4 r typeinfo for CPolyhedron_TempMemory
001ec13c r typeinfo for IPhysicsCollisionEvent
001ebad8 r typeinfo for IPhysicsObjectPairHash
001ff59c r typeinfo for IVP_Actuator_Two_Point
00200f30 r typeinfo for IVP_BetterDebugmanager
002001c0 r typeinfo for IVP_Controller_Phantom
00200abc r typeinfo for IVP_Listener_Collision
002011cc r typeinfo for IVP_PerformanceCounter
001e40a8 r typeinfo for NxCylindricalJointDesc
001e4148 r typeinfo for NxHeightFieldShapeDesc
001e40c0 r typeinfo for NxPointOnLineJointDesc
001ec0fc r typeinfo for CEmptyCollisionListener
001edcac r typeinfo for CPhysCollideVirtualMesh
001eb004 r typeinfo for CPhysicsConstraintGroup
001ebc7c r typeinfo for CPhysicsFluidController
001e9eb8 r typeinfo for CSplitScreenAddedConVar
001ee28c r typeinfo for CTraceSolverSweptObject
001eea68 r typeinfo for CVPhysPtrSaveRestoreOps
001efcc8 r typeinfo for hk_Breakable_Constraint
001efee4 r typeinfo for hk_Prismatic_Constraint
001efd7c r typeinfo for hk_Rigid_Body_Binary_EF
001ef1ac r typeinfo for IConCommandBaseAccessor
001eb1a4 r typeinfo for IPhysicsConstraintGroup
001ebd9c r typeinfo for IPhysicsFluidController
001ff5c4 r typeinfo for IVP_Actuator_Four_Point
001ff7fc r typeinfo for IVP_Actuator_Stabilizer
001ffc3c r typeinfo for IVP_Actuator_Suspension
00202200 r typeinfo for IVP_Collision_Delegator
001fff84 r typeinfo for IVP_Controller_Buoyancy
002004f8 r typeinfo for IVP_Friction_Sys_Energy
00200520 r typeinfo for IVP_Friction_Sys_Static
0020041c r typeinfo for IVP_Listener_Constraint
001ebe34 r typeinfo for IVP_Listener_Set_Active<IVP_Core>
001ff39c r typeinfo for IVP_Ray_Solver_Min_Hash
00202d58 r typeinfo for IVP_SurfaceManager_Ball
00201900 r typeinfo for IVP_U_Active_Test_Range
001e40cc r typeinfo for NxPointInPlaneJointDesc
001e413c r typeinfo for NxTriangleMeshShapeDesc
001ebdbc r typeinfo for CLiquidSurfaceDescriptor
001ec5a0 r typeinfo for CPhysicsMotionController
001ebf68 r typeinfo for IPhysicsFrictionSnapshot
001ec670 r typeinfo for IPhysicsMotionController
001ed268 r typeinfo for IPhysicsPlayerController
001ed270 r typeinfo for IPhysicsShadowController
001ea42c r typeinfo for IVP_Controller_Dependent
002015bc r typeinfo for IVP_U_Active_Int_Delayed
001e380c r typeinfo for NxBoxForceFieldShapeDesc
001ebfc0 r typeinfo for CPhysicsListenerCollision
001efc58 r typeinfo for hk_Ball_Socket_Constraint
001eab78 r typeinfo for IPhysCollideDiscriminator
001edbf0 r typeinfo for IPhysicsVehicleController
002028e4 r typeinfo for IVP_3D_Solver_KK_PARALLEL
001ff620 r typeinfo for IVP_Actuator_Force_Active
001ffee0 r typeinfo for IVP_Constraint_Solver_Car
001ff230 r typeinfo for IVP_Meta_Collision_Filter
00201840 r typeinfo for IVP_U_Active_Add_Multiple
00201598 r typeinfo for IVP_U_Active_Int_Listener
002016c0 r typeinfo for IVP_U_Active_Terminal_Int
001ea754 r typeinfo for CPhysCollideCompactSurface
001ebaac r typeinfo for CPhysicsListenerConstraint
001efb8c r typeinfo for hk_Local_Constraint_System
001f0054 r typeinfo for hk_Stiff_Spring_Constraint
001ffc00 r typeinfo for IVP_Actuator_Spring_Active
001ff720 r typeinfo for IVP_Actuator_Torque_Active
001ffd4c r typeinfo for IVP_Car_System_Real_Wheels
001ea44c r typeinfo for IVP_Controller_Independent
00200080 r typeinfo for IVP_Controller_Raycast_Car
00200dd0 r typeinfo for IVP_Event_Manager_Standard
00201318 r typeinfo for IVP_SurfaceManager_Polygon
002015e4 r typeinfo for IVP_U_Active_Float_Delayed
0020154c r typeinfo for IVP_U_Active_Value_Manager
001ff6a0 r typeinfo for IVP_Actuator_Rot_Mot_Active
002008e8 r typeinfo for IVP_Real_Object_Fast_Static
00201574 r typeinfo for IVP_U_Active_Float_Listener
001e3824 r typeinfo for NxConvexForceFieldShapeDesc
001e37f8 r typeinfo for NxSphereForceFieldShapeDesc
001ee2f0 r typeinfo for CTraceSolverSweptObjectPhys2
001ec4c8 r typeinfo for IPhysicsSurfacePropsInternal
00202228 r typeinfo for IVP_Collision_Delegator_Root
00201680 r typeinfo for IVP_U_Active_Terminal_Double
001e3818 r typeinfo for NxCapsuleForceFieldShapeDesc
00200f80 r typeinfo for IVP_Liquid_Surface_Descriptor
001ff760 r typeinfo for IVP_Listener_Check_Dist_Event
00201200 r typeinfo for IVP_PerformanceCounter_Simple
001e4110 r typeinfo for NxSpringAndDamperEffectorDesc
001fffc4 r typeinfo for IVP_Attacher_To_Cores_Buoyancy
00202dc4 r typeinfo for IVP_Object_Callback_Table_Hash
001edc84 r typeinfo for IVP_SurfaceManager_VirtualMesh
001ee344 r typeinfo for CTraceSolverSweptObjectHullList
002027c4 r typeinfo for IVP_3D_Solver_VEC_PARALLEL_AREA
00200c60 r typeinfo for IVP_Standard_Gravity_Controller
001eeaa4 r typeinfo for CVPhysPtrUtlVectorSaveRestoreOps
00202304 r typeinfo for IVP_Collision_Callback_Table_Hash
001eb228 r typeinfo for CPhysics_Car_System_Raycast_Wheels
001ff208 r typeinfo for IVP_Collision_Filter_Exclusive_Pair
00202808 r typeinfo for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00202448 r typeinfo for IVP_Collision_Delegator_Root_Mindist
00200fc8 r typeinfo for IVP_Liquid_Surface_Descriptor_Simple
001eef00 r typeinfo for ConVar
001ef158 r typeinfo for IConVar
00202a4c r typeinfo for CFmtStrN<256>
001ec30c r typeinfo for CSurface
001ea0e4 r typeinfo for IPhysics
00202cf8 r typeinfo for IVP_Ball
001e9360 r typeinfo for NxStream
001ee248 r typeinfo for CTraceIVP
002002c4 r typeinfo for IVP_U_Set<IVP_Real_Object>
002002b8 r typeinfo for IVP_U_Set<IVP_Mindist_Base>
002002dc r typeinfo for IVP_U_Set<IVP_Core>
00202080 r typeinfo for IVP_VHash
001e3270 r typeinfo for NXU::C_Accessor
001e3204 r typeinfo for NXU::C_Geometry
001e3234 r typeinfo for NXU::C_IntArray
001e3288 r typeinfo for NXU::C_Vertices
001e911c r typeinfo for NXU::UserStream
001e3240 r typeinfo for NXU::C_BoolArray
001e3258 r typeinfo for NXU::C_NameArray
001e32dc r typeinfo for NXU::C_RigidBody
001e3354 r typeinfo for NXU::C_Triangles
001e3228 r typeinfo for NXU::C_FloatArray
001e3264 r typeinfo for NXU::C_IDREFArray
001e9474 r typeinfo for NXU::TiXmlComment
001e9450 r typeinfo for NXU::TiXmlElement
001e94e0 r typeinfo for NXU::TiXmlUnknown
001e31b0 r typeinfo for NXU::ColladaImport
001e32a0 r typeinfo for NXU::C_VisualScene
001e9968 r typeinfo for NXU::TiXmlDocument
001e2b4c r typeinfo for NXU::C_PhysicsModel
001e32f4 r typeinfo for NXU::C_PhysicsScene
001e9944 r typeinfo for NXU::TiXmlAttribute
001e916c r typeinfo for NXU::MemoryReadBuffer
001e94bc r typeinfo for NXU::TiXmlDeclaration
001e32b8 r typeinfo for NXU::C_PhysicsMaterial
001e32c4 r typeinfo for NXU::C_RigidConstraint
001e9144 r typeinfo for NXU::MemoryWriteBuffer
001e3318 r typeinfo for NXU::C_DisableCollision
001e3324 r typeinfo for NXU::C_InstanceRigidBody
001e31c8 r typeinfo for NXU::C_LibraryGeometries
001e3330 r typeinfo for NXU::C_InstanceVisualScene
001e31e0 r typeinfo for NXU::C_LibraryVisualScenes
001e3360 r typeinfo for NXU::C_InstancePhysicsModel
001e333c r typeinfo for NXU::C_InstancePhysicsScene
001e31f8 r typeinfo for NXU::C_LibraryPhysicsModels
001e31d4 r typeinfo for NXU::C_LibraryPhysicsScenes
001e91cc r typeinfo for NXU::ImportMemoryReadBuffer
001e46b0 r typeinfo for NXU::NxuPhysicsInstantiator
001e91a0 r typeinfo for NXU::ImportMemoryWriteBuffer
001e3300 r typeinfo for NXU::C_InstanceRigidConstraint
001e31ec r typeinfo for NXU::C_LibraryPhysicsMaterials
001e31a0 r typeinfo for NXU::C_Base
001e3348 r typeinfo for NXU::C_Mesh
001e32ac r typeinfo for NXU::C_Node
001e321c r typeinfo for NXU::C_Array
001e3294 r typeinfo for NXU::C_Input
001e327c r typeinfo for NXU::C_Param
001e31a8 r typeinfo for NXU::C_Query
001e31bc r typeinfo for NXU::C_Scene
001e32e8 r typeinfo for NXU::C_Shape
001e3210 r typeinfo for NXU::C_Source
001e974c r typeinfo for NXU::TiXmlBase
001e942c r typeinfo for NXU::TiXmlNode
001e9494 r typeinfo for NXU::TiXmlText
001eeecc r typeinfo name for ConCommand
001ee254 r typeinfo name for CTraceAABB
001ee52d r typeinfo name for CTraceCone
00203709 r typeinfo name for hk_Console
001efc20 r typeinfo name for hk_Link_EF
001ea104 r typeinfo name for IAppSystem
00200894 r typeinfo name for IVP_Object
002033c0 r typeinfo name for CPolyhedron
001ee2b4 r typeinfo name for CTracePhys2
001ee511 r typeinfo name for CTracePhys3
001ee51f r typeinfo name for CTracePhys4
001ee4f2 r typeinfo name for IConvexInfo
002008ac r typeinfo name for IVP_Cluster
002024e0 r typeinfo name for IVP_Mindist
00200bc8 r typeinfo name for IVP_Polygon
002023dc r typeinfo name for IVP_Synapse
001e4154 r typeinfo name for NxJointDesc
001e3bb9 r typeinfo name for NxShapeDesc
001edda0 r typeinfo name for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
001ebba0 r typeinfo name for CDeleteProxy<IPhysicsConstraint>
001ef1b4 r typeinfo name for CEmptyConVar
001eaba0 r typeinfo name for CPhysCollide
001ee4e3 r typeinfo name for CTraceSolver
001eabdd r typeinfo name for IPhysCollide
001ee4d4 r typeinfo name for ITraceObject
001ff564 r typeinfo name for IVP_Actuator
00201014 r typeinfo name for IVP_Material
001f8e6b r typeinfo name for IVP_Triangle
001ed2f4 r typeinfo name for aligned_tmp_t
001ebb39 r typeinfo name for CSleepObjects
001ee298 r typeinfo name for CTraceObject2
001ebbf0 r typeinfo name for CVoidPairHash
001efd18 r typeinfo name for hk_Constraint
00202df4 r typeinfo name for IVP_3D_Solver
001ff23c r typeinfo name for IVP_CFEP_Hash
00202234 r typeinfo name for IVP_Collision
001e422f r typeinfo name for NxD6JointDesc
001ee020 r typeinfo name for CBaseAppSystem<IPhysics2Disabler>
001ea0c8 r typeinfo name for CBaseAppSystem<IPhysics>
001ee500 r typeinfo name for CDefConvexInfo
001eeeb0 r typeinfo name for ConCommandBase
001eca13 r typeinfo name for CPhysicsObject
001ed37b r typeinfo name for CPhysicsSpring
001ee2fc r typeinfo name for CTraceHullList
001ee8d4 r typeinfo name for CVPhysicsParse
001ecd60 r typeinfo name for IPhysicsObject
001ed4b0 r typeinfo name for IPhysicsSpring
001ffd10 r typeinfo name for IVP_Car_System
002031a4 r typeinfo name for IVP_Constraint
001ea473 r typeinfo name for IVP_Controller
00202474 r typeinfo name for IVP_OO_Watcher
00202145 r typeinfo name for IVP_OV_Element
001f862c r typeinfo name for IVP_point_hash
001ff360 r typeinfo name for IVP_Ray_Solver
00202454 r typeinfo name for IVP_Synapse_OO
00200d16 r typeinfo name for IVP_Time_Event
001e3ba8 r typeinfo name for NxBoxShapeDesc
001e423f r typeinfo name for NxEffectorDesc
001ea760 r typeinfo name for CCollisionQuery
001ebb66 r typeinfo name for CDragController
001ebbde r typeinfo name for CObjectPairHash
001edfe0 r typeinfo name for CTier0AppSystem<IPhysics2Disabler>
001ea09e r typeinfo name for CTier0AppSystem<IPhysics>
001edfa0 r typeinfo name for CTier1AppSystem<IPhysics2Disabler, 0>
001ea040 r typeinfo name for CTier1AppSystem<IPhysics, 0>
001eabaf r typeinfo name for ICollisionQuery
001ecdb4 r typeinfo name for ISaveRestoreOps
00200918 r typeinfo name for IVP_Real_Object
001ebb26 r typeinfo name for CCollisionSolver
001ef206 r typeinfo name for CDataManagerBase
001ef199 r typeinfo name for CDefaultAccessor
001ef33b r typeinfo name for CDllDemandLoader
001ea247 r typeinfo name for CPhysics_Airboat
001ebb78 r typeinfo name for IDeleteQueueItem
002023f8 r typeinfo name for IVP_Mindist_Base
002021a0 r typeinfo name for IVP_ov_tree_hash
002024c0 r typeinfo name for IVP_Synapse_Real
00200d54 r typeinfo name for IVP_Time_Event_D
00200d74 r typeinfo name for IVP_Time_Event_N
002017a0 r typeinfo name for IVP_U_Active_Add
00201630 r typeinfo name for IVP_U_Active_Int
002017e0 r typeinfo name for IVP_U_Active_Sub
00200380 r typeinfo name for IVP_U_Set_Active<IVP_Real_Object>
00200300 r typeinfo name for IVP_U_Set_Active<IVP_Mindist_Base>
002003bc r typeinfo name for IVP_U_Set_Active<IVP_Core>
001e421c r typeinfo name for NxFixedJointDesc
001e4280 r typeinfo name for NxPlaneShapeDesc
001e4293 r typeinfo name for NxWheelShapeDesc
001ed2c0 r typeinfo name for CAlignedNewDelete<16, aligned_tmp_t>
001ebc88 r typeinfo name for CBuoyancyAttacher
001ebe85 r typeinfo name for CFrictionSnapshot
001ecd71 r typeinfo name for CMaterialIndexOps
001eea19 r typeinfo name for collision_rules_t
001edf70 r typeinfo name for CPhysics2Disabler
001ea711 r typeinfo name for CPhysicsCollision
001e9ec4 r typeinfo name for CPhysicsInterface
001ecf5e r typeinfo name for CPlayerController
001ecfa8 r typeinfo name for CShadowController
001ee054 r typeinfo name for IPhysics2Disabler
001eab8c r typeinfo name for IPhysicsCollision
00200d94 r typeinfo name for IVP_Event_Manager
001f8658 r typeinfo name for IVP_I_Point_VHash
00200753 r typeinfo name for IVP_Listener_Hull
00202ae0 r typeinfo name for IVP_Range_Manager
00201860 r typeinfo name for IVP_U_Active_Mult
002016e0 r typeinfo name for IVP_U_Active_Sine
001e3bf0 r typeinfo name for NxConvexShapeDesc
001e4208 r typeinfo name for NxPulleyJointDesc
001e3bc7 r typeinfo name for NxSphereShapeDesc
001efb33 r typeinfo name for CCountedStringPool
001ecd94 r typeinfo name for CDefSaveRestoreOps
001eb010 r typeinfo name for CPhysicsConstraint
001ef5c2 r typeinfo name for CUtlCharConversion
001edabb r typeinfo name for CVehicleController
001eb1ce r typeinfo name for IPhysicsConstraint
001ff78c r typeinfo name for IVP_Actuator_Extra
001ff5d0 r typeinfo name for IVP_Actuator_Force
00200e88 r typeinfo name for IVP_Anomaly_Limits
001eea04 r typeinfo name for IVPhysicsKeyParser
001f85e4 r typeinfo name for IVP_I_FPoint_VHash
001ff3a8 r typeinfo name for IVP_Ray_Solver_Min
00201288 r typeinfo name for IVP_SurfaceManager
00200d30 r typeinfo name for IVP_Time_Event_PSI
0020160c r typeinfo name for IVP_U_Active_Float
002018a0 r typeinfo name for IVP_U_Active_Limit
00201760 r typeinfo name for IVP_U_Active_Pulse
002015ec r typeinfo name for IVP_U_Active_Value
001e3bdb r typeinfo name for NxCapsuleShapeDesc
001e42a6 r typeinfo name for NxTireFunctionDesc
001ec318 r typeinfo name for CIVPMaterialManager
001eb5e3 r typeinfo name for CPhysicsEnvironment
001ef640 r typeinfo name for CUtlNoEscConversion
001efda8 r typeinfo name for hk_Fixed_Constraint
001efe12 r typeinfo name for hk_Hinge_Constraint
001ebb10 r typeinfo name for IPhysicsEnvironment
00202838 r typeinfo name for IVP_3D_Solver_PK_KK
001ffbb8 r typeinfo name for IVP_Actuator_Spring
001ff6c0 r typeinfo name for IVP_Actuator_Torque
00200ea8 r typeinfo name for IVP_Anomaly_Manager
00200ddc r typeinfo name for IVP_Event_Manager_D
00200ac4 r typeinfo name for IVP_Friction_System
001eea38 r typeinfo name for IVPhysicsKeyHandler
00200a80 r typeinfo name for IVP_Listener_Object
001ffb99 r typeinfo name for IVP_Listener_Spring
0020102c r typeinfo name for IVP_Material_Simple
00201720 r typeinfo name for IVP_U_Active_Square
00201920 r typeinfo name for IVP_U_Active_Switch
001e41f2 r typeinfo name for NxDistanceJointDesc
001e4179 r typeinfo name for NxRevoluteJointDesc
001ea484 r typeinfo name for CAirboatFrictionData
001ef160 r typeinfo name for ConVar_ServerBounded
001ea087 r typeinfo name for CPhysicsCollisionSet
001ebfe0 r typeinfo name for CPhysicsFrictionData
001ec33c r typeinfo name for CPhysicsSurfaceProps
001eff37 r typeinfo name for hk_Pulley_Constraint
001ea070 r typeinfo name for IPhysicsCollisionSet
001ec4fb r typeinfo name for IPhysicsSurfaceProps
00202880 r typeinfo name for IVP_3D_Solver_PF_NPF
00202814 r typeinfo name for IVP_3D_Solver_S_VALS
001ff640 r typeinfo name for IVP_Actuator_Rot_Mot
001ff1b0 r typeinfo name for IVP_Collision_Filter
00202b3c r typeinfo name for IVP_Constraint_Local
00202bf4 r typeinfo name for IVP_Controller_Golem
00200938 r typeinfo name for IVP_Controller_VHash
00200183 r typeinfo name for IVP_Listener_Phantom
00201050 r typeinfo name for IVP_Material_Manager
001ff33e r typeinfo name for IVP_Ray_Hit_Listener
002008f4 r typeinfo name for IVP_Real_Object_Fast
00200ae8 r typeinfo name for IVP_Universe_Manager
001e4162 r typeinfo name for NxPrismaticJointDesc
001e41a8 r typeinfo name for NxSphericalJointDesc
001ec108 r typeinfo name for CPhysicsCollisionData
001ef5e0 r typeinfo name for CUtlCStringConversion
001ebc00 r typeinfo name for CVPhysicsDebugOverlay
001ee8f4 r typeinfo name for CVPhysicsPackedParser
001eff98 r typeinfo name for hk_Ragdoll_Constraint
001ea4c1 r typeinfo name for IPhysicsCollisionData
002028a4 r typeinfo name for IVP_3D_Solver_KK_COLL
0020276a r typeinfo name for IVP_3D_Solver_PF_COLL
0020285c r typeinfo name for IVP_3D_Solver_PK_COLL
00201968 r typeinfo name for IVP_Active_Value_Hash
001ff768 r typeinfo name for IVP_Anchor_Check_Dist
001ebe00 r typeinfo name for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00202bd0 r typeinfo name for IVP_Controller_Motion
001ebc20 r typeinfo name for IVPhysicsDebugOverlay
002024fc r typeinfo name for IVP_Mindist_Recursive
001e384e r typeinfo name for NxForceFieldShapeDesc
00203340 r typeinfo name for CPolyhedron_AllocByNew
002033ce r typeinfo name for CPolyhedron_TempMemory
001ec144 r typeinfo name for IPhysicsCollisionEvent
001ebbc5 r typeinfo name for IPhysicsObjectPairHash
001ff580 r typeinfo name for IVP_Actuator_Two_Point
00200f14 r typeinfo name for IVP_BetterDebugmanager
002001a4 r typeinfo name for IVP_Controller_Phantom
00200aa0 r typeinfo name for IVP_Listener_Collision
002011b2 r typeinfo name for IVP_PerformanceCounter
001e418f r typeinfo name for NxCylindricalJointDesc
001e42d5 r typeinfo name for NxHeightFieldShapeDesc
001e41bf r typeinfo name for NxPointOnLineJointDesc
001ec120 r typeinfo name for CEmptyCollisionListener
001edc90 r typeinfo name for CPhysCollideVirtualMesh
001eafe8 r typeinfo name for CPhysicsConstraintGroup
001ebc60 r typeinfo name for CPhysicsFluidController
001e9e9c r typeinfo name for CSplitScreenAddedConVar
001ee270 r typeinfo name for CTraceSolverSweptObject
001eea4e r typeinfo name for CVPhysPtrSaveRestoreOps
001efcac r typeinfo name for hk_Breakable_Constraint
001efeca r typeinfo name for hk_Prismatic_Constraint
001efd88 r typeinfo name for hk_Rigid_Body_Binary_EF
001ef1c3 r typeinfo name for IConCommandBaseAccessor
001eb1b4 r typeinfo name for IPhysicsConstraintGroup
001ebdc8 r typeinfo name for IPhysicsFluidController
001ff5a8 r typeinfo name for IVP_Actuator_Four_Point
001ff7e0 r typeinfo name for IVP_Actuator_Stabilizer
001ffc20 r typeinfo name for IVP_Actuator_Suspension
002021e4 r typeinfo name for IVP_Collision_Delegator
001fff69 r typeinfo name for IVP_Controller_Buoyancy
002004dd r typeinfo name for IVP_Friction_Sys_Energy
00200504 r typeinfo name for IVP_Friction_Sys_Static
00200402 r typeinfo name for IVP_Listener_Constraint
001ebe60 r typeinfo name for IVP_Listener_Set_Active<IVP_Core>
001ff380 r typeinfo name for IVP_Ray_Solver_Min_Hash
00202d64 r typeinfo name for IVP_SurfaceManager_Ball
002018e0 r typeinfo name for IVP_U_Active_Test_Range
001e41d8 r typeinfo name for NxPointInPlaneJointDesc
001e42bb r typeinfo name for NxTriangleMeshShapeDesc
001ebe3c r typeinfo name for CLiquidSurfaceDescriptor
001ec575 r typeinfo name for CPhysicsMotionController
001ebf70 r typeinfo name for IPhysicsFrictionSnapshot
001ec678 r typeinfo name for IPhysicsMotionController
001ed284 r typeinfo name for IPhysicsPlayerController
001ed29f r typeinfo name for IPhysicsShadowController
001ea458 r typeinfo name for IVP_Controller_Dependent
002015a0 r typeinfo name for IVP_U_Active_Int_Delayed
001e3866 r typeinfo name for NxBoxForceFieldShapeDesc
001ebfa1 r typeinfo name for CPhysicsListenerCollision
001efc39 r typeinfo name for hk_Ball_Socket_Constraint
001eabc1 r typeinfo name for IPhysCollideDiscriminator
001edbf8 r typeinfo name for IPhysicsVehicleController
002028c8 r typeinfo name for IVP_3D_Solver_KK_PARALLEL
001ff5f4 r typeinfo name for IVP_Actuator_Force_Active
001ffec3 r typeinfo name for IVP_Constraint_Solver_Car
001ff214 r typeinfo name for IVP_Meta_Collision_Filter
00201820 r typeinfo name for IVP_U_Active_Add_Multiple
0020157c r typeinfo name for IVP_U_Active_Int_Listener
002016a0 r typeinfo name for IVP_U_Active_Terminal_Int
001ea734 r typeinfo name for CPhysCollideCompactSurface
001ebb49 r typeinfo name for CPhysicsListenerConstraint
001efb6f r typeinfo name for hk_Local_Constraint_System
001f0035 r typeinfo name for hk_Stiff_Spring_Constraint
001ffbdc r typeinfo name for IVP_Actuator_Spring_Active
001ff6e4 r typeinfo name for IVP_Actuator_Torque_Active
001ffd2c r typeinfo name for IVP_Car_System_Real_Wheels
001ea4a4 r typeinfo name for IVP_Controller_Independent
0020005c r typeinfo name for IVP_Controller_Raycast_Car
00200db0 r typeinfo name for IVP_Event_Manager_Standard
002012f8 r typeinfo name for IVP_SurfaceManager_Polygon
002015c4 r typeinfo name for IVP_U_Active_Float_Delayed
0020152f r typeinfo name for IVP_U_Active_Value_Manager
001ff664 r typeinfo name for IVP_Actuator_Rot_Mot_Active
002008c8 r typeinfo name for IVP_Real_Object_Fast_Static
00201554 r typeinfo name for IVP_U_Active_Float_Listener
001e38a3 r typeinfo name for NxConvexForceFieldShapeDesc
001e3830 r typeinfo name for NxSphereForceFieldShapeDesc
001ee2d0 r typeinfo name for CTraceSolverSweptObjectPhys2
001ec4dc r typeinfo name for IPhysicsSurfacePropsInternal
00202208 r typeinfo name for IVP_Collision_Delegator_Root
00201650 r typeinfo name for IVP_U_Active_Terminal_Double
001e3884 r typeinfo name for NxCapsuleForceFieldShapeDesc
00200f60 r typeinfo name for IVP_Liquid_Surface_Descriptor
001ff740 r typeinfo name for IVP_Listener_Check_Dist_Event
002011e0 r typeinfo name for IVP_PerformanceCounter_Simple
001e4260 r typeinfo name for NxSpringAndDamperEffectorDesc
001fffa0 r typeinfo name for IVP_Attacher_To_Cores_Buoyancy
00202da0 r typeinfo name for IVP_Object_Callback_Table_Hash
001edc60 r typeinfo name for IVP_SurfaceManager_VirtualMesh
001ee320 r typeinfo name for CTraceSolverSweptObjectHullList
002027a0 r typeinfo name for IVP_3D_Solver_VEC_PARALLEL_AREA
00200c20 r typeinfo name for IVP_Standard_Gravity_Controller
001eea80 r typeinfo name for CVPhysPtrUtlVectorSaveRestoreOps
002022e0 r typeinfo name for IVP_Collision_Callback_Table_Hash
001eb200 r typeinfo name for CPhysics_Car_System_Raycast_Wheels
001ff1e0 r typeinfo name for IVP_Collision_Filter_Exclusive_Pair
002027e0 r typeinfo name for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00202420 r typeinfo name for IVP_Collision_Delegator_Root_Mindist
00200fa0 r typeinfo name for IVP_Liquid_Surface_Descriptor_Simple
001eeee8 r typeinfo name for ConVar
001ef190 r typeinfo name for IConVar
00202a54 r typeinfo name for CFmtStrN<256>
001ec302 r typeinfo name for CSurface
001ea0f0 r typeinfo name for IPhysics
00202cee r typeinfo name for IVP_Ball
001e9368 r typeinfo name for NxStream
001ee23c r typeinfo name for CTraceIVP
00200347 r typeinfo name for IVP_U_Set<IVP_Real_Object>
00200328 r typeinfo name for IVP_U_Set<IVP_Mindist_Base>
002003a6 r typeinfo name for IVP_U_Set<IVP_Core>
00202073 r typeinfo name for IVP_VHash
001e34fa r typeinfo name for NXU::C_Accessor
001e3463 r typeinfo name for NXU::C_Geometry
001e34aa r typeinfo name for NXU::C_IntArray
001e351c r typeinfo name for NXU::C_Vertices
001e9106 r typeinfo name for NXU::UserStream
001e34bd r typeinfo name for NXU::C_BoolArray
001e34d1 r typeinfo name for NXU::C_NameArray
001e3596 r typeinfo name for NXU::C_RigidBody
001e3685 r typeinfo name for NXU::C_Triangles
001e3495 r typeinfo name for NXU::C_FloatArray
001e34e5 r typeinfo name for NXU::C_IDREFArray
001e945c r typeinfo name for NXU::TiXmlComment
001e9438 r typeinfo name for NXU::TiXmlElement
001e94c8 r typeinfo name for NXU::TiXmlUnknown
001e3389 r typeinfo name for NXU::ColladaImport
001e353e r typeinfo name for NXU::C_VisualScene
001e9950 r typeinfo name for NXU::TiXmlDocument
001e2b34 r typeinfo name for NXU::C_PhysicsModel
001e35b9 r typeinfo name for NXU::C_PhysicsScene
001e992a r typeinfo name for NXU::TiXmlAttribute
001e9150 r typeinfo name for NXU::MemoryReadBuffer
001e94a0 r typeinfo name for NXU::TiXmlDeclaration
001e3562 r typeinfo name for NXU::C_PhysicsMaterial
001e357c r typeinfo name for NXU::C_RigidConstraint
001e9128 r typeinfo name for NXU::MemoryWriteBuffer
001e3602 r typeinfo name for NXU::C_DisableCollision
001e361d r typeinfo name for NXU::C_InstanceRigidBody
001e33ae r typeinfo name for NXU::C_LibraryGeometries
001e3639 r typeinfo name for NXU::C_InstanceVisualScene
001e33eb r typeinfo name for NXU::C_LibraryVisualScenes
001e369c r typeinfo name for NXU::C_InstancePhysicsModel
001e3658 r typeinfo name for NXU::C_InstancePhysicsScene
001e3444 r typeinfo name for NXU::C_LibraryPhysicsModels
001e33cc r typeinfo name for NXU::C_LibraryPhysicsScenes
001e91ac r typeinfo name for NXU::ImportMemoryReadBuffer
001e4690 r typeinfo name for NXU::NxuPhysicsInstantiator
001e9180 r typeinfo name for NXU::ImportMemoryWriteBuffer
001e35e0 r typeinfo name for NXU::C_InstanceRigidConstraint
001e3420 r typeinfo name for NXU::C_LibraryPhysicsMaterials
001e336c r typeinfo name for NXU::C_Base
001e3677 r typeinfo name for NXU::C_Mesh
001e3554 r typeinfo name for NXU::C_Node
001e3486 r typeinfo name for NXU::C_Array
001e352f r typeinfo name for NXU::C_Input
001e350d r typeinfo name for NXU::C_Param
001e337a r typeinfo name for NXU::C_Query
001e339f r typeinfo name for NXU::C_Scene
001e35aa r typeinfo name for NXU::C_Shape
001e3476 r typeinfo name for NXU::C_Source
001e9754 r typeinfo name for NXU::TiXmlBase
001e941a r typeinfo name for NXU::TiXmlNode
001e9480 r typeinfo name for NXU::TiXmlText
001eef60 r vtable for ConCommand
001ee360 r vtable for CTraceAABB
001ee478 r vtable for CTraceCone
00203720 r vtable for hk_Console
001efbe0 r vtable for hk_Link_EF
00200968 r vtable for IVP_Object
00203380 r vtable for CPolyhedron
001ee388 r vtable for CTracePhys2
001ee438 r vtable for CTracePhys3
001ee458 r vtable for CTracePhys4
001ee418 r vtable for IConvexInfo
00200978 r vtable for IVP_Cluster
00202660 r vtable for IVP_Mindist
00200be8 r vtable for IVP_Polygon
00202540 r vtable for IVP_Synapse
001e3ed0 r vtable for NxJointDesc
001e3b10 r vtable for NxShapeDesc
001edd60 r vtable for CDataManager<CMeshInstance, virtualmeshlist_t, CMeshInstance*, CThreadFastMutex>
001eb988 r vtable for CDeleteProxy<IPhysicsConstraint>
001ef0c0 r vtable for CEmptyConVar
001eab00 r vtable for CPhysCollide
001ee408 r vtable for CTraceSolver
001eaaa0 r vtable for IPhysCollide
001ee3f8 r vtable for ITraceObject
001ff820 r vtable for IVP_Actuator
00201080 r vtable for IVP_Material
001f8e88 r vtable for IVP_Triangle
001eb900 r vtable for CSleepObjects
001ee3a8 r vtable for CTraceObject2
001eba10 r vtable for CVoidPairHash
001efd40 r vtable for hk_Constraint
00202e10 r vtable for IVP_3D_Solver
001ff280 r vtable for IVP_CFEP_Hash
002022c0 r vtable for IVP_Collision
001e3fc0 r vtable for NxD6JointDesc
001ee428 r vtable for CDefConvexInfo
001eef20 r vtable for ConCommandBase
001eca40 r vtable for CPhysicsObject
001ed3c0 r vtable for CPhysicsSpring
001ee3d8 r vtable for CTraceHullList
001ee920 r vtable for CVPhysicsParse
001ecbc0 r vtable for IPhysicsObject
001ed480 r vtable for IPhysicsSpring
001ffd60 r vtable for IVP_Car_System
002031e0 r vtable for IVP_Constraint
001ea360 r vtable for IVP_Controller
002025e0 r vtable for IVP_OO_Watcher
00202180 r vtable for IVP_OV_Element
001f8688 r vtable for IVP_point_hash
001ff3e8 r vtable for IVP_Ray_Solver
002025c0 r vtable for IVP_Synapse_OO
00200e00 r vtable for IVP_Time_Event
001e3af8 r vtable for NxBoxShapeDesc
001e3fd8 r vtable for NxEffectorDesc
001ea900 r vtable for CCollisionQuery
001eb940 r vtable for CDragController
001eb9e0 r vtable for CObjectPairHash
001eaa60 r vtable for ICollisionQuery
001eeb70 r vtable for ISaveRestoreOps
002009a8 r vtable for IVP_Real_Object
001eb8a0 r vtable for CCollisionSolver
001ef240 r vtable for CDataManagerBase
001ef098 r vtable for CDefaultAccessor
001ef358 r vtable for CDllDemandLoader
001ea280 r vtable for CPhysics_Airboat
001eb970 r vtable for IDeleteQueueItem
00202560 r vtable for IVP_Mindist_Base
002021d0 r vtable for IVP_ov_tree_hash
00202620 r vtable for IVP_Synapse_Real
00200e20 r vtable for IVP_Time_Event_D
00200e30 r vtable for IVP_Time_Event_N
00201bc0 r vtable for IVP_U_Active_Add
00201a50 r vtable for IVP_U_Active_Int
00201c00 r vtable for IVP_U_Active_Sub
00200268 r vtable for IVP_U_Set_Active<IVP_Real_Object>
00200220 r vtable for IVP_U_Set_Active<IVP_Mindist_Base>
00200298 r vtable for IVP_U_Set_Active<IVP_Core>
001e3fa8 r vtable for NxFixedJointDesc
001e4008 r vtable for NxPlaneShapeDesc
001e4020 r vtable for NxWheelShapeDesc
001ebd00 r vtable for CBuoyancyAttacher
001ebec0 r vtable for CFrictionSnapshot
001ecd30 r vtable for CMaterialIndexOps
001ee9e0 r vtable for collision_rules_t
001edf40 r vtable for CPhysics2Disabler
001ea7e0 r vtable for CPhysicsCollision
001e9fa0 r vtable for CPhysicsInterface
001ed000 r vtable for CPlayerController
001ed100 r vtable for CShadowController
001ea940 r vtable for IPhysicsCollision
00200e40 r vtable for IVP_Event_Manager
001f86a0 r vtable for IVP_I_Point_VHash
00200770 r vtable for IVP_Listener_Hull
00202b00 r vtable for IVP_Range_Manager
00201c80 r vtable for IVP_U_Active_Mult
00201b00 r vtable for IVP_U_Active_Sine
001e3b58 r vtable for NxConvexShapeDesc
001e3f90 r vtable for NxPulleyJointDesc
001e3b28 r vtable for NxSphereShapeDesc
001efb50 r vtable for CCountedStringPool
001eeb90 r vtable for CDefSaveRestoreOps
001eb0a0 r vtable for CPhysicsConstraint
001ef618 r vtable for CUtlCharConversion
001edb00 r vtable for CVehicleController
001eb160 r vtable for IPhysicsConstraint
001ffaa0 r vtable for IVP_Actuator_Extra
001ff8e0 r vtable for IVP_Actuator_Force
00200ec8 r vtable for IVP_Anomaly_Limits
001ee9a0 r vtable for IVPhysicsKeyParser
001f8618 r vtable for IVP_I_FPoint_VHash
001ff418 r vtable for IVP_Ray_Solver_Min
002012c0 r vtable for IVP_SurfaceManager
00200e10 r vtable for IVP_Time_Event_PSI
00201a38 r vtable for IVP_U_Active_Float
00201cc0 r vtable for IVP_U_Active_Limit
00201b80 r vtable for IVP_U_Active_Pulse
00201a28 r vtable for IVP_U_Active_Value
001e3b40 r vtable for NxCapsuleShapeDesc
001e4040 r vtable for NxTireFunctionDesc
001ec400 r vtable for CIVPMaterialManager
001eb620 r vtable for CPhysicsEnvironment
001ef628 r vtable for CUtlNoEscConversion
001efde0 r vtable for hk_Fixed_Constraint
001efe40 r vtable for hk_Hinge_Constraint
001eb760 r vtable for IPhysicsEnvironment
00202930 r vtable for IVP_3D_Solver_PK_KK
001ffc60 r vtable for IVP_Actuator_Spring
001ff9e0 r vtable for IVP_Actuator_Torque
00200ee0 r vtable for IVP_Anomaly_Manager
00200e70 r vtable for IVP_Event_Manager_D
00200b80 r vtable for IVP_Friction_System
00200b20 r vtable for IVP_Listener_Object
001ffc48 r vtable for IVP_Listener_Spring
002010c0 r vtable for IVP_Material_Simple
00201b40 r vtable for IVP_U_Active_Square
00201d40 r vtable for IVP_U_Active_Switch
001e3f78 r vtable for NxDistanceJointDesc
001e3f00 r vtable for NxRevoluteJointDesc
001ea3d0 r vtable for CAirboatFrictionData
001e9ff8 r vtable for CPhysicsCollisionSet
001ec080 r vtable for CPhysicsFrictionData
001ec3a0 r vtable for CPhysicsSurfaceProps
001eff60 r vtable for hk_Pulley_Constraint
001e9fe0 r vtable for IPhysicsCollisionSet
001ec440 r vtable for IPhysicsSurfaceProps
00202950 r vtable for IVP_3D_Solver_PF_NPF
00202920 r vtable for IVP_3D_Solver_S_VALS
001ff960 r vtable for IVP_Actuator_Rot_Mot
001ff268 r vtable for IVP_Collision_Filter
00202b60 r vtable for IVP_Constraint_Local
00202c60 r vtable for IVP_Controller_Golem
002009c0 r vtable for IVP_Controller_VHash
002001d0 r vtable for IVP_Listener_Phantom
00201100 r vtable for IVP_Material_Manager
001ff3d0 r vtable for IVP_Ray_Hit_Listener
00200998 r vtable for IVP_Real_Object_Fast
00200bb0 r vtable for IVP_Universe_Manager
001e3ee8 r vtable for NxPrismaticJointDesc
001e3f30 r vtable for NxSphericalJointDesc
001ec098 r vtable for CPhysicsCollisionData
001ef608 r vtable for CUtlCStringConversion
001eba40 r vtable for CVPhysicsDebugOverlay
001ee960 r vtable for CVPhysicsPackedParser
001effc0 r vtable for hk_Ragdoll_Constraint
00202960 r vtable for IVP_3D_Solver_KK_COLL
002028f0 r vtable for IVP_3D_Solver_PF_COLL
00202940 r vtable for IVP_3D_Solver_PK_COLL
00201d78 r vtable for IVP_Active_Value_Hash
001ffa80 r vtable for IVP_Anchor_Check_Dist
001ebd28 r vtable for IVP_Attacher_To_Cores<IVP_Controller_Buoyancy>
00202c20 r vtable for IVP_Controller_Motion
002026a0 r vtable for IVP_Mindist_Recursive
001e3798 r vtable for NxForceFieldShapeDesc
00203368 r vtable for CPolyhedron_AllocByNew
00203398 r vtable for CPolyhedron_TempMemory
001eb9a0 r vtable for IPhysicsObjectPairHash
001ff860 r vtable for IVP_Actuator_Two_Point
00200f38 r vtable for IVP_BetterDebugmanager
00200200 r vtable for IVP_Controller_Phantom
00200b40 r vtable for IVP_Listener_Collision
00201220 r vtable for IVP_PerformanceCounter
001e3f18 r vtable for NxCylindricalJointDesc
001e4070 r vtable for NxHeightFieldShapeDesc
001e3f48 r vtable for NxPointOnLineJointDesc
001ec0c0 r vtable for CEmptyCollisionListener
001edcc0 r vtable for CPhysCollideVirtualMesh
001eb060 r vtable for CPhysicsConstraintGroup
001ebcc0 r vtable for CPhysicsFluidController
001e9f00 r vtable for CSplitScreenAddedConVar
001ee378 r vtable for CTraceSolverSweptObject
001eeab0 r vtable for CVPhysPtrSaveRestoreOps
001efce0 r vtable for hk_Breakable_Constraint
001eff00 r vtable for hk_Prismatic_Constraint
001efd70 r vtable for hk_Rigid_Body_Binary_EF
001eb120 r vtable for IPhysicsConstraintGroup
001ebd60 r vtable for IPhysicsFluidController
001ff8a0 r vtable for IVP_Actuator_Four_Point
001ffae0 r vtable for IVP_Actuator_Stabilizer
001ffce0 r vtable for IVP_Actuator_Suspension
00202250 r vtable for IVP_Collision_Delegator
001fffe0 r vtable for IVP_Controller_Buoyancy
00200540 r vtable for IVP_Friction_Sys_Energy
00200580 r vtable for IVP_Friction_Sys_Static
00200428 r vtable for IVP_Listener_Constraint
00200048 r vtable for IVP_Listener_Set_Active<IVP_Core>
001ff400 r vtable for IVP_Ray_Solver_Min_Hash
00202d20 r vtable for IVP_SurfaceManager_Ball
00201d00 r vtable for IVP_U_Active_Test_Range
001e3f60 r vtable for NxPointInPlaneJointDesc
001e4058 r vtable for NxTriangleMeshShapeDesc
001ebd88 r vtable for CLiquidSurfaceDescriptor
001ec5c0 r vtable for CPhysicsMotionController
001ebf20 r vtable for IPhysicsFrictionSnapshot
001ec640 r vtable for IPhysicsMotionController
001ed1c0 r vtable for IPhysicsPlayerController
001ed220 r vtable for IPhysicsShadowController
001ea3a0 r vtable for IVP_Controller_Dependent
00201a08 r vtable for IVP_U_Active_Int_Delayed
001e37b0 r vtable for NxBoxForceFieldShapeDesc
001ec020 r vtable for CPhysicsListenerCollision
001efc80 r vtable for hk_Ball_Socket_Constraint
001eaa90 r vtable for IPhysCollideDiscriminator
001edba0 r vtable for IPhysicsVehicleController
00202970 r vtable for IVP_3D_Solver_KK_PARALLEL
001ff920 r vtable for IVP_Actuator_Force_Active
001fff00 r vtable for IVP_Constraint_Solver_Car
001ff2b0 r vtable for IVP_Meta_Collision_Filter
00201c40 r vtable for IVP_U_Active_Add_Multiple
002019f8 r vtable for IVP_U_Active_Int_Listener
00201ac0 r vtable for IVP_U_Active_Terminal_Int
001ea780 r vtable for CPhysCollideCompactSurface
001eb920 r vtable for CPhysicsListenerConstraint
001efba0 r vtable for hk_Local_Constraint_System
001f0060 r vtable for hk_Stiff_Spring_Constraint
001ffca0 r vtable for IVP_Actuator_Spring_Active
001ffa20 r vtable for IVP_Actuator_Torque_Active
001ffe00 r vtable for IVP_Car_System_Real_Wheels
001ea400 r vtable for IVP_Controller_Independent
002000a0 r vtable for IVP_Controller_Raycast_Car
00200e58 r vtable for IVP_Event_Manager_Standard
00201340 r vtable for IVP_SurfaceManager_Polygon
00201a18 r vtable for IVP_U_Active_Float_Delayed
002019a0 r vtable for IVP_U_Active_Value_Manager
001ff9a0 r vtable for IVP_Actuator_Rot_Mot_Active
00200988 r vtable for IVP_Real_Object_Fast_Static
002019e8 r vtable for IVP_U_Active_Float_Listener
001e37e0 r vtable for NxConvexForceFieldShapeDesc
001e3780 r vtable for NxSphereForceFieldShapeDesc
001ee3c8 r vtable for CTraceSolverSweptObjectPhys2
001ec480 r vtable for IPhysicsSurfacePropsInternal
00202280 r vtable for IVP_Collision_Delegator_Root
00201a80 r vtable for IVP_U_Active_Terminal_Double
001e37c8 r vtable for NxCapsuleForceFieldShapeDesc
00200fd8 r vtable for IVP_Liquid_Surface_Descriptor
001ffa60 r vtable for IVP_Listener_Check_Dist_Event
00201260 r vtable for IVP_PerformanceCounter_Simple
001e3ff0 r vtable for NxSpringAndDamperEffectorDesc
00200020 r vtable for IVP_Attacher_To_Cores_Buoyancy
00202de0 r vtable for IVP_Object_Callback_Table_Hash
001edd20 r vtable for IVP_SurfaceManager_VirtualMesh
001ee3e8 r vtable for CTraceSolverSweptObjectHullList
00202900 r vtable for IVP_3D_Solver_VEC_PARALLEL_AREA
00200c80 r vtable for IVP_Standard_Gravity_Controller
001eead0 r vtable for CVPhysPtrUtlVectorSaveRestoreOps
00202320 r vtable for IVP_Collision_Callback_Table_Hash
001eb240 r vtable for CPhysics_Car_System_Raycast_Wheels
001ff298 r vtable for IVP_Collision_Filter_Exclusive_Pair
00202910 r vtable for IVP_3D_Solver_DISTANCE_OF_TWO_POINTS
00202580 r vtable for IVP_Collision_Delegator_Root_Mindist
00200ff0 r vtable for IVP_Liquid_Surface_Descriptor_Simple
001eefc0 r vtable for ConVar
001ef060 r vtable for IConVar
00202a40 r vtable for CFmtStrN<256>
001ec360 r vtable for CSurface
00202d08 r vtable for IVP_Ball
001e9320 r vtable for NxStream
001ee350 r vtable for CTraceIVP
00200250 r vtable for IVP_U_Set<IVP_Real_Object>
00200238 r vtable for IVP_U_Set<IVP_Mindist_Base>
00200280 r vtable for IVP_U_Set<IVP_Core>
00202088 r vtable for IVP_VHash
         U vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
         U vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
001e2fd8 r vtable for NXU::C_Accessor
001e2ed0 r vtable for NXU::C_Geometry
001e2f58 r vtable for NXU::C_IntArray
001e3008 r vtable for NXU::C_Vertices
001e91e0 r vtable for NXU::UserStream
001e2f78 r vtable for NXU::C_BoolArray
001e2f98 r vtable for NXU::C_NameArray
001e3098 r vtable for NXU::C_RigidBody
001e3170 r vtable for NXU::C_Triangles
001e2f20 r vtable for NXU::C_FloatArray
001e2fb8 r vtable for NXU::C_IDREFArray
001e95c0 r vtable for NXU::TiXmlComment
001e9560 r vtable for NXU::TiXmlElement
001e96e0 r vtable for NXU::TiXmlUnknown
001e2bc0 r vtable for NXU::ColladaImport
001e3038 r vtable for NXU::C_VisualScene
001e9980 r vtable for NXU::TiXmlDocument
001e2b58 r vtable for NXU::C_PhysicsModel
001e30c8 r vtable for NXU::C_PhysicsScene
001e99d0 r vtable for NXU::TiXmlAttribute
001e9260 r vtable for NXU::MemoryReadBuffer
001e9680 r vtable for NXU::TiXmlDeclaration
001e3068 r vtable for NXU::C_PhysicsMaterial
001e3080 r vtable for NXU::C_RigidConstraint
001e9220 r vtable for NXU::MemoryWriteBuffer
001e30f8 r vtable for NXU::C_DisableCollision
001e3110 r vtable for NXU::C_InstanceRigidBody
001e2e58 r vtable for NXU::C_LibraryGeometries
001e3128 r vtable for NXU::C_InstanceVisualScene
001e2e88 r vtable for NXU::C_LibraryVisualScenes
001e3188 r vtable for NXU::C_InstancePhysicsModel
001e3140 r vtable for NXU::C_InstancePhysicsScene
001e2eb8 r vtable for NXU::C_LibraryPhysicsModels
001e2e70 r vtable for NXU::C_LibraryPhysicsScenes
001e92e0 r vtable for NXU::ImportMemoryReadBuffer
001e46b8 r vtable for NXU::NxuPhysicsInstantiator
001e92a0 r vtable for NXU::ImportMemoryWriteBuffer
001e30e0 r vtable for NXU::C_InstanceRigidConstraint
001e2ea0 r vtable for NXU::C_LibraryPhysicsMaterials
001e2f40 r vtable for NXU::C_Base
001e3158 r vtable for NXU::C_Mesh
001e3050 r vtable for NXU::C_Node
001e2f00 r vtable for NXU::C_Array
001e3020 r vtable for NXU::C_Input
001e2ff0 r vtable for NXU::C_Param
001e2b80 r vtable for NXU::C_Query
001e2e40 r vtable for NXU::C_Scene
001e30b0 r vtable for NXU::C_Shape
001e2ee8 r vtable for NXU::C_Source
001e9730 r vtable for NXU::TiXmlBase
001e9500 r vtable for NXU::TiXmlNode
001e9620 r vtable for NXU::TiXmlText
00267c08 b datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::nameHolder
00262520 d datamap_t* DataMapInit<vehicleparams_t>(vehicleparams_t*)::dataDesc
00267070 b datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::nameHolder
0025e5a0 d datamap_t* DataMapInit<physcollideheader_t>(physcollideheader_t*)::dataDesc
00267b90 b datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::nameHolder
002618e0 d datamap_t* DataMapInit<vehicle_axleparams_t>(vehicle_axleparams_t*)::dataDesc
00267b10 b datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::nameHolder
00261260 d datamap_t* DataMapInit<vehicle_bodyparams_t>(vehicle_bodyparams_t*)::dataDesc
00267b38 b datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::nameHolder
002614a0 d datamap_t* DataMapInit<vehicle_wheelparams_t>(vehicle_wheelparams_t*)::dataDesc
00267098 b datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::nameHolder
0025e6a0 d datamap_t* DataMapInit<compactsurfaceheader_t>(compactsurfaceheader_t*)::dataDesc
00267be0 b datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::nameHolder
00262020 d datamap_t* DataMapInit<vehicle_engineparams_t>(vehicle_engineparams_t*)::dataDesc
00267bb8 b datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::nameHolder
00261b20 d datamap_t* DataMapInit<vehicle_steeringparams_t>(vehicle_steeringparams_t*)::dataDesc
00267ae0 b datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::nameHolder
00260f60 d datamap_t* DataMapInit<vehicle_operatingparams_t>(vehicle_operatingparams_t*)::dataDesc
00267b68 b datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::nameHolder
00261760 d datamap_t* DataMapInit<vehicle_suspensionparams_t>(vehicle_suspensionparams_t*)::dataDesc
00267928 b datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::nameHolder
0025f960 d datamap_t* DataMapInit<vphysics_save_cphysicsobject_t>(vphysics_save_cphysicsobject_t*)::dataDesc
00267a38 b datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::nameHolder
00260700 d datamap_t* DataMapInit<vphysics_save_cphysicsspring_t>(vphysics_save_cphysicsspring_t*)::dataDesc
002671d0 b datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::nameHolder
0025ee00 d datamap_t* DataMapInit<vphysics_save_constraintfixed_t>(vphysics_save_constraintfixed_t*)::dataDesc
002671f8 b datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::nameHolder
0025eec0 d datamap_t* DataMapInit<vphysics_save_constrainthinge_t>(vphysics_save_constrainthinge_t*)::dataDesc
00267270 b datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::nameHolder
0025f3c0 d datamap_t* DataMapInit<vphysics_save_constraintlength_t>(vphysics_save_constraintlength_t*)::dataDesc
00267248 b datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::nameHolder
0025f200 d datamap_t* DataMapInit<vphysics_save_constraintpulley_t>(vphysics_save_constraintpulley_t*)::dataDesc
002678c8 b datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::nameHolder
0025f880 d datamap_t* DataMapInit<vphysics_save_motioncontroller_t>(vphysics_save_motioncontroller_t*)::dataDesc
002672c0 b datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::nameHolder
0025f5c0 d datamap_t* DataMapInit<vphysics_save_constraintragdoll_t>(vphysics_save_constraintragdoll_t*)::dataDesc
00267220 b datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::nameHolder
0025f000 d datamap_t* DataMapInit<vphysics_save_constraintsliding_t>(vphysics_save_constraintsliding_t*)::dataDesc
002679c8 b datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::nameHolder
002603a0 d datamap_t* DataMapInit<vphysics_save_cshadowcontroller_t>(vphysics_save_cshadowcontroller_t*)::dataDesc
00267158 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::nameHolder
0025ea00 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraint_t>(vphysics_save_cphysicsconstraint_t*)::dataDesc
00267ab8 b datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::nameHolder
00260aa0 d datamap_t* DataMapInit<vphysics_save_cvehiclecontroller_t>(vphysics_save_cvehiclecontroller_t*)::dataDesc
002671a8 b datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::nameHolder
0025ecc0 d datamap_t* DataMapInit<vphysics_save_constraintaxislimit_t>(vphysics_save_constraintaxislimit_t*)::dataDesc
00267180 b datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::nameHolder
0025eb40 d datamap_t* DataMapInit<vphysics_save_constraintbreakable_t>(vphysics_save_constraintbreakable_t*)::dataDesc
002679a0 b datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::nameHolder
00260160 d datamap_t* DataMapInit<vphysics_save_shadowcontrolparams_t>(vphysics_save_shadowcontrolparams_t*)::dataDesc
00267298 b datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::nameHolder
0025f500 d datamap_t* DataMapInit<vphysics_save_constraintballsocket_t>(vphysics_save_constraintballsocket_t*)::dataDesc
00267130 b datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::nameHolder
0025e8c0 d datamap_t* DataMapInit<vphysics_save_cphysicsconstraintgroup_t>(vphysics_save_cphysicsconstraintgroup_t*)::dataDesc
00262c7c d qh_new_qhull(int, int, double*, unsigned int, char*, _IO_FILE*, _IO_FILE*)::firstcall
00268b80 b V_pretifymem(float, int, bool)::output
00268b60 b V_pretifymem(float, int, bool)::current
00268ca0 b V_pretifynum(long long)::output
00268c80 b V_pretifynum(long long)::current
0026e200 b p_read_first_token(_IO_FILE*)::buffer
0026ef38 b Bias(float, float)::lastExponent
00268b58 b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
00266b20 b InitializeCharacterSets()::s_CharacterSetInitialized
0026a184 b CUtlSymbol::Initialize()::symbolsInitialized
00268868 b CTraceSolver::SweepSingleConvex()::__executeCount
0026885c b CTraceSolver::SweepSingleConvex()::tm_fmt
00268860 b CTraceSolver::SweepSingleConvex()::tm_fmt
00268864 b CTraceSolver::SweepSingleConvex()::tm_fmt
00201fb0 r IVP_U_Matrix::rotate_invers(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
002634c0 d IVP_U_Matrix::rotate(IVP_COORDINATE_INDEX, float, IVP_U_Matrix*)::pm
00268858 b CTraceObject2::SetConvex(Physics2ShapeDesc_t&)::__executeCount
00268b3c b CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()::__executeCount
00268b40 b CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::Alloc()::__executeCount
00267560 b CUtlMultiList<void*, unsigned short>::Alloc()::__executeCount
00267564 b CUtlMultiList<void*, unsigned short>::Alloc()::__executeCount
002634d4 d IVP_U_Matrix3::init_rotated3(IVP_COORDINATE_INDEX, float)::pm
00268b34 b CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
00268b38 b CUtlLinkedList<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<CDataManagerBase::resource_lru_element_t, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
00267568 b CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
0026756c b CUtlLinkedList<CUtlMultiList<void*, unsigned short>::List_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CUtlMultiList<void*, unsigned short>::List_t, unsigned short>, unsigned short> >::AllocInternal(bool)::__executeCount
002634e8 d IVP_U_Min_Hash::add(void*, float)::sort_counter
0026a18c b CUtlSymbolTable::AddString(char const*)::tm_fmt
00268b1c b CDataManagerBase::GetForFreeByIndex(unsigned short)::__executeCount
001ef6cc r CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
001eeb00 r CPhysicsEnvironment::Save(physsaveparams_t const&)::saveFuncs
001eeb40 r CPhysicsEnvironment::Restore(physrestoreparams_t const&)::restoreFuncs
0026e088 b IVP_Material_Manager::get_material_by_index(IVP_Real_Object*, IVP_U_Point const*, int)::simple
00262c64 d IVV_Cluster_Min_Hash::add(void*, float)::sort_counter
00262b3d d SplitScreenConVarRef::Init(char const*, bool)::bFirst
00268854 b CTraceSolverSweptObject::DoSweep()::tm_fmt
0026e03c b IVP_BetterStatisticsmanager::set_simulation_time(float)::time_of_last_update
002656c0 b NXU::getElement(char const*)::data
002656a0 b NXU::getElement(char const*)::index
00265670 b NXU::ConvexHCrop(NXU::ConvexH&, NXU::Plane const&)::vertscoplanar
00265688 b NXU::ConvexHCrop(NXU::ConvexH&, NXU::Plane const&)::edgesplit
00265610 b NXU::RotationArc(NXU::float3, NXU::float3)::q
00263934 b NXU::SaveCollada::NCNAME(char const*)::nameCount
00263940 b NXU::SaveCollada::NCNAME(char const*)::nameField
00264160 b NXU::SaveCollada::fstring(float)::data
00264140 b NXU::SaveCollada::fstring(float)::index
00264560 b NXU::GetCookingParams()::r
00265640 b NXU::DistanceBetweenLines(NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3 const&, NXU::float3*, NXU::float3*)::cp
00265628 b NXU::PlaneLineIntersection(NXU::Plane const&, NXU::float3 const&, NXU::float3 const&)::dif
0025e498 d NXU::Tri::neib(int, int)::er
002655b0 b NXU::Yaw(NXU::Quaternion const&)::v
002655c8 b NXU::Pitch(NXU::Quaternion const&)::v
002655f8 b NXU::Plane::Transform(NXU::float3 const&, NXU::Quaternion const&)::origin
002655e0 b NXU::Plane::Transform(NXU::float3 const&, NXU::Quaternion const&)::newnormal
00265658 b NXU::PolyHit(NXU::float3 const*, int, NXU::float3 const&, NXU::float3 const&, NXU::float3*, NXU::float3*)::the_point
00265ee0 b NXU::fstring(float, bool)::data
00265ec0 b NXU::fstring(float, bool)::index
0026e9f4 b CFmtStrN<256>::sprintf(char const*, ...)::scAsserted
00262b3c d ConVarRef::Init(char const*, bool)::bFirst
0026a2f0 b hk_Memory::get_instance()::s_memory_instance
0026886c b simplex_t::SolveGJKSet(simplexvert_t const&, Vector*)::tm_fmt
00262bc2 d CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0025f844 d CUtlRBTree<CPhysicsListenerCollision::corepair_t, unsigned short, bool (*)(CPhysicsListenerCollision::corepair_t const&, CPhysicsListenerCollision::corepair_t const&), CUtlMemory<UtlRBTreeNode_t<CPhysicsListenerCollision::corepair_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00262b30 d CUtlRBTree<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short, CUtlMap<void*, void*, unsigned short>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<void*, void*, unsigned short>::Node_t, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
00262bcc d CUtlRBTree<char const*, unsigned short, bool (*)(char const* const&, char const* const&), CUtlMemory<UtlRBTreeNode_t<char const*, unsigned short>, unsigned short> >::Links(unsigned short) const::s_Sentinel
0026a188 b CUtlSymbolTable::Find(char const*) const::tm_fmt
00268840 b CTraceIVP::SupportMap(Vector const&, Vector*) const::tm_fmt
00268844 b CTraceIVP::SupportMap(Vector const&, Vector*) const::tm_fmt
00268848 b CTraceIVP::SupportMap(Vector const&, Vector*) const::tm_fmt
